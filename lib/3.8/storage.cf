############################################################################
#  Copyright (C) CFEngine AS
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU Lesser General Public License LGPL as published by the
#  Free Software Foundation; version 3.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  To the extent this program is licensed as part of the Enterprise
#  versions of CFEngine, the applicable Commercial Open Source License
#  (COSL) may apply to this file if you as a licensee so wish it. See
#  included file COSL.txt.
###########################################################################
#
# CFEngine Community Open Promise-Body Library
#
# This initiative started by CFEngine promotes a
# standardized set of names and promise specifications
# for template functionality within CFEngine 3.
#
# The aim is to promote an industry standard for
# naming of configuration patterns, leading to a
# de facto middleware of standardized syntax.
#
# Names should be intuitive and parameters should be
# minimal to assist readability and comprehensibility.

# Contributions to this file are voluntarily given to
# the cfengine community, and are moderated by CFEngine.
# No liability or warranty for misuse is implied.
#
# If you add to this file, please try to make the
# contributions "self-documenting". Comments made
# after the bundle/body statement are retained in
# the online docs
#

# For CFEngine Core: 3.7.0 to 3.7.x
# Storage bodies

###################################################
# If you find CFEngine useful, please consider    #
# purchasing a commercial version of the software.#
###################################################

##-------------------------------------------------------
## storage promises
##-------------------------------------------------------

body volume min_free_space(free)
# @brief Warn if the storage doesn't have at least `free` free space.
#
# A warnings is also generated if the storage is smaller than 10K or as
# less than 2 file entries.
#
# @param free Absolute or percentage minimum disk space that should be
# available before warning
{
      check_foreign  => "false";
      freespace      => "$(free)";
      sensible_size  => "10000";
      sensible_count => "2";
}

##

body mount nfs(server,source)
# @brief Mounts the storage at `source` on `server` via nfs protocol.
#
# Also modifies the file system table.
#
# @param server Hostname or IP of remote server
# @param source Path of remote file system to mount
#
# **See also:** `nfs_p()`, `unmount()`
{
      mount_type => "nfs";
      mount_source => "$(source)";
      mount_server => "$(server)";
      edit_fstab => "true";
}

##

body mount nfs_p(server,source,perm)
# @brief Mounts the storage via nfs, with `perm` passed as options to mount.
#
# Also modifies the file system table.
#
# @param server Hostname or IP of remote server
# @param source Path of remote file system to mount
# @param perm A list of options that's passed to the mount command
#
# **See also:** `nfs`, `unmount()`
{
      mount_type => "nfs";
      mount_source => "$(source)";
      mount_server => "$(server)";
      mount_options => {"$(perm)"};
      edit_fstab => "true";
}

##

body mount unmount
# @brief Unmounts the nfs storage.
#
# Also modifies the file system table.
#
# **See also:** `nfs()`, `nfs_p()`
{
      mount_type => "nfs";
      edit_fstab => "true";
      unmount => "true";
}
