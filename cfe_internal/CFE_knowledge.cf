##################################################################
#
# DO NOT EDIT THIS FILE. All policy files prefixed with CFE_ are maintained
# by CFEngine and its original state is required for internal operations of
# CFEngine. If the file has been modified CFEngineâ€™s upgrades may require
# manual intervention. Contact CFEngine support if additional information
# and/or recommendation is needed.
#
##################################################################
##################################################################
#
# cfe_internal_setup_knowledge
#  - populate knowledge bank database (CFE Enterprise)
#
##################################################################

bundle agent cfe_internal_setup_knowledge
{

  classes:

      #
      # check when updates arrive, new compared to the database
      #

    !windows.am_policy_hub::

      "mongo_init"     not => fileexists("$(sys.workdir)/state/mongo_stamp"),
      comment => "Check for a mongo_stamp file",
      handle => "cfe_internal_setup_knowledge_classes_mongo_init";

      #

  processes:

    am_policy_hub::

      "$(sys.workdir)/bin/mongod"
      comment => "Check for mongod process. If not running, don't setup HUB",
      handle => "cfe_internal_setup_knowledge_processes_var_cfengine_bin_mongod",
      process_count => check_process("mongod_started","mongod_not_started_yet");

      #

  files:

    mongo_init.mongod_started::

      "$(cfe_internal_hub_vars.docroot)/mongo_stamp"
      create => "true",
      classes => if_repaired("init_mongo"),
      comment => "Create a time stamp file for 1st time installation",
      handle => "cfe_internal_setup_knowledge_files_mongo_stamp";

    !windows.am_policy_hub.mongod_started::

      "$(cfe_internal_hub_vars.docroot)"
      comment => "Copy the basic knowledge base configuration from the installation to doc root",
      handle => "cfe_internal_setup_knowledge_files_doc_root_1",
      copy_from => no_backup_cp("$(sys.workdir)/share/GUI"),
      depth_search => recurse("inf");

      "$(cfe_internal_hub_vars.docroot)/.htaccess"
      comment => "Correct up htaccess file in doc root",
      handle => "cfe_internal_setup_knowledge_files_doc_root_htaccess",
      perms => mog("0644","apache","apache"),
      copy_from => no_backup_cp("$(sys.workdir)/share/GUI/Apache-htaccess");

      "$(cfe_internal_hub_vars.docroot)/hub/."
      comment => "Create a necessary folder for cf-hub",
      handle => "cfe_internal_setup_knowledge_files_doc_root_hub",
      create => "true",
      depth_search => recurse_basedir("inf"),
      perms => mog("0755","apache","apache");

      "$(cfe_internal_hub_vars.docroot)/scripts/."
      comment => "Ensure permissions for $(cfe_internal_hub_vars.docroot)/scripts",
      handle => "cfe_internal_setup_knowledge_files_doc_root_scripts",
      create => "true",
      depth_search => recurse_basedir("inf"),
      perms => mog("0644","apache","apache");

      "$(cfe_internal_hub_vars.docroot)/tmp/."
      comment => "Ensure permissions for $(cfe_internal_hub_vars.docroot)/tmp (temp files to email)",
      handle => "cfe_internal_setup_knowledge_files_doc_root_tmp",
      create => "true",
      depth_search => recurse_basedir("inf"),
      perms => mog("0644","apache","apache");

      "$(cfe_internal_hub_vars.docroot)/application/logs/."
      comment => "Make sure log folder has been created and has right permisions",
      handle => "cfe_internal_setup_knowledge_files_doc_root_application_logs",
      create => "true",
      depth_search => recurse_basedir("inf"),
      perms => mog("0644","apache","apache");

      "$(cfe_internal_hub_vars.docroot)/rest"
      comment => "Put REST api to webroot directory",
      handle => "cfe_internal_setup_knowledge_files_workdir_rest",
      copy_from => no_backup_cp("$(sys.workdir)/share/rest"),
      depth_search => recurse_basedir("inf"),
      perms => mo("0644","apache");

      "$(cfe_internal_hub_vars.docroot)/rest/.htaccess"
      comment => "Create HTACCESS file for REST",
      handle => "cfe_internal_setup_knowledge_files_rest_htaccess",
      create => "true",
      edit_line => rest_htaccess,
      edit_defaults => empty,
      perms => mog("0644","apache","apache");

      "$(cfe_internal_hub_vars.docroot)/application"
      comment => "Ensure permissions to all directiories in application to 755",
      handle => "cfe_internal_setup_knowledge_files_all_folders_in_application",
      file_select => dirs,
      depth_search => recurse("inf"),
      perms => m("0755");

      "$(cfe_internal_hub_vars.docroot)/application"
      comment => "Ensure permissions to all files in application to 644",
      handle => "cfe_internal_setup_knowledge_files_all_files_in_application",
      file_select => plain,
      depth_search => recurse("inf"),
      perms => m("0644");

      "$(cfe_internal_hub_vars.docroot)/api"
      comment => "Ensure permissions for $(cfe_internal_hub_vars.docroot)/api (writing exported reports PDF/CSV)",
      handle => "cfe_internal_setup_knowledge_files_doc_root_api",
      file_select => cfe_internal_exclude_sh_scripts,
      depth_search => recurse_basedir("inf"),
      perms => mog("0644","apache","apache");

      "$(cfe_internal_hub_vars.docroot)/api/dc-scripts"
      comment => "Ensure permissions for $(cfe_internal_hub_vars.docroot)/api/dc-scripts (execute git push/pull)",
      handle => "cfe_internal_setup_knowledge_files_doc_root_api_dc_scripts",
      file_select => cfe_internal_sh_scripts,
      depth_search => recurse_basedir("inf"),
      perms => mog("0700","apache","apache");

      "$(cfe_internal_hub_vars.docroot)/sql_lite/."
      comment => "Create a directory sql_lite for analytic to be working",
      handle => "cfe_internal_setup_knowledge_files_doc_root_sql_lite",
      create => "true",
      depth_search => recurse_basedir("inf"),
      perms => mog("0644","apache","apache");

      "$(cfe_internal_hub_vars.docroot)/tmp/."
      create => "true",
      perms => mog("0644","apache","apache"),
      depth_search => recurse_basedir("inf"),
      comment => "Create tmp directories for httpd internal use",
      handle => "cfe_internal_setup_knowledge_files_tmp_dir";

    mongod_not_started_yet::

      "$(sys.workdir)/state/mongo_stamp"
      comment => "Delete mongo_stamp if mongod is not running",
      handle => "cfe_internal_setup_knowledge_files_delete_mongo_stamp",
      delete => tidy;

      "$(sys.workdir)/state/mongod.lock"
      comment => "Delete mongod.lock if mongod is not running",
      handle => "cfe_internal_setup_knowledge_files_delete_mongod_lock",
      delete => tidy;

      #

  commands:

    init_mongo::

      "$(sys.workdir)/bin/mongo phpcfengine $(sys.workdir)/share/GUI/phpcfenginenova/export.js"
      contain => silent_in_dir("$(sys.workdir)"),
      comment => "Initialise mongo phpcfengine",
      handle => "cfe_internal_setup_knowledge_commands_mongo_exportjs";

      "$(sys.workdir)/bin/mongo --quiet cfreport $(sys.workdir)/share/GUI/api/mongo-initialize.js"
      contain => silent_in_dir("$(sys.workdir)"),
      comment => "Initialise mongo cfreport database",
      handle => "cfe_internal_setup_knowledge_commands_mongo_mongoinitializejs";

      "$(sys.workdir)/bin/mongo phpcfengine $(sys.workdir)/share/GUI/phpcfenginenova/sql_reports.js"
      contain => silent_in_dir("$(sys.workdir)"),
      comment => "Initialise mongo phpcfengine sql saved search query",
      handle => "cfe_internal_setup_knowledge_commands_mongo_sql_reportsjs";

}

#############################################################################

body action aggregator
{
      ifelapsed => "120";
      expireafter => "240";
      background => "true";
}

############################################################################

body file_select knowledge_files
{
      leaf_name => { ".*.cf", ".*.html", ".*.png", ".*php", ".*css" };
      file_result => "leaf_name";
}

############################################################################

body file_select folder(regex)
{
      leaf_name  => { ".*$(regex)$"};
      file_result => "leaf_name";
}

############################################################################

body depth_search recurse_basedir(d)
{
      depth => "$(d)";
      include_basedir => "true";
}

############################################################################

body depth_search recurse_exclude(d,folder1,folder2)
{
      depth => "$(d)";
      exclude_dirs => { ".*$(folder1)$", "$(folder2)", "hub" , "graphs", "scripts", "tmp", "logs", "api", "sql_lite" };
}

############################################################################

bundle edit_line rest_htaccess
{
  insert_lines:
    any::
      "<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteCond %{REQUEST_URI} !dispatch\.php$(const.dollar)
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule .* dispatch.php [L,QSA]
</IfModule>"
      comment => "REST's htaccess file content",
      handle => "cfe_internal_rest_htaccess_insert_lines";
}

############################################################################

body process_count check_process(in,out)
{
      match_range => "1,1";
      in_range_define => { "$(in)" };
      out_of_range_define => { "$(out)" };
}

body file_select cfe_internal_exclude_sh_scripts
{
  leaf_name => { ".*\.sh" };
  file_result => "!leaf_name";
}

body file_select cfe_internal_sh_scripts
{
  leaf_name => { ".*\.sh" };
  file_result => "leaf_name";
}
