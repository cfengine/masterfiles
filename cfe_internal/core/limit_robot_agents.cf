##################################################################
#
# cfe_internal_limit_rebot_agents
#  - kill CFE processes and restart it when the process grown
#
##################################################################

bundle agent cfe_internal_limit_robot_agents
{
  processes:

    !windows::

      "bin/cf-execd"
      process_count => check_execd("1"),
      comment => "Check cf-execd process if exceed the number",
      handle => "cfe_internal_limit_robot_agents_processes_check_cf_execd";

      "bin/cf-monitord"
      process_count => check_monitord("1"),
      comment => "Check cf-monitord process if exceed the number",
      handle => "cfe_internal_limit_robot_agents_processes_check_cf_monitord";

      #
      # Do not do this for cf-hub because cf-hub may have unlimited processes
      # Do not do this for cf-agent because it is not unexpected to have
      # concurrent agent runs, and the lifetime of an individual agent run can be controlled with
      # [agent_expireafter][cf-execd#agent_expireafter] as defined in body executor control
      #

    something_wrong_execd::

      "bin/cf-execd"
      signals => { "term", "kill" },
      restart_class => "restart_execd",
      comment => "When cf-execd comes undone then kill all and restart the process",
      handle => "cfe_internal_limit_robot_agents_processes_kill_cf_execd";

    something_wrong_monitord::

      "bin/cf-monitord"
      signals => { "term", "kill" },
      restart_class => "restart_monitord",
      comment => "When cf-monitord comes undone then kill all and restart the process",
      handle => "cfe_internal_limit_robot_agents_processes_kill_cf_monitord";

      #

  commands:

    restart_execd::

      "$(sys.cf_execd)"
      comment => "Restart cf-execd process",
      classes => kept_successful_command,
      handle => "cfe_internal_limit_robot_agents_commands_restart_cf_execd";

    restart_monitord::

      "$(sys.cf_monitord)"
      comment => "Restart cf-monitord process",
      classes => kept_successful_command,
      handle => "cfe_internal_limit_robot_agents_commands_restart_cf_monitord";

}

body process_count check_execd(n)
{
      match_range => "0,$(n)";
      out_of_range_define => {"something_wrong_execd"};
}

body process_count check_monitord(n)
{
      match_range => "0,$(n)";
      out_of_range_define => {"something_wrong_monitord"};
}
