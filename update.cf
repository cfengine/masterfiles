###############################################################################
#
#   update.cf - Basic Update Policy
#
###############################################################################

body common control
{
      bundlesequence => {
                          "update_def",
                          @(u_cfengine_enterprise.def),
                          "cfe_internal_dc_workflow",
                          "cfe_internal_update_policy",
                          "cfe_internal_update_bins",
                          "cfe_internal_update_processes",
      };

      version => "update.cf $(update_def.current_version)";

      inputs => {
                  "lib/$(sys.cf_version_major).$(sys.cf_version_minor)/update_def.cf",
                  @(u_cfengine_enterprise.inputs),
                  "update/update_bins.cf",
                  "update/cfe_internal_dc_workflow.cf",
                  "update/cfe_internal_local_git_remote.cf",
                  "update/cfe_internal_update_from_repository.cf",
                  "update/update_policy.cf",
                  "update/update_processes.cf"
      };

      # Uncomment to connect to the hub using latest protocol.
      #protocol_version => "latest";
}

#############################################################################

body agent control
{
      ifelapsed => "1";
      skipidentify => "true";
}

#############################################################################



bundle common u_cfengine_enterprise
# @brief Inputs specific to CFEngine Enterpise
{
  vars:
    enable_cfengine_enterprise_hub_ha::
      "input[ha_main]"
        string => "cfe_internal/ha/ha.cf";
      "input[ha_def]"
        string => "cfe_internal/ha/ha_def.cf";

      "def"
        slist => { "ha_def" };

      "bundles"
        slist => { "ha_main" };

      "inputs" slist => getindices(input);

    !enable_cfengine_enterprise_hub_ha::
      "inputs" slist => { };
      "def" slist => { "$(this.bundle)" };
      "bundles" slist => { "$(this.bundle)" };
}

body classes u_kept_successful_command
# @brief Set command to "kept" instead of "repaired" if it returns 0
{
      kept_returncodes => { "0" };
      failed_returncodes => { "1" };
}
