###############################################################################
#
#   update.cf - Basic Update Policy
#
###############################################################################

body common control
{
      bundlesequence => {
                          "u_def",
                          "cfe_internal_update_from_repository",
                          "cfe_internal_update_policy",
                          "cfe_internal_update_processes",
                          "cfe_internal_update_bins"
      };

      version => "update.cf 3.6.0";

      inputs => {
                  "update/update_bins.cf",
                  "update/update_masterfiles_internal.cf",
                  "update/update_policy.cf",
                  "update/update_processes.cf"
      };
}

#############################################################################

body agent control
{
      ifelapsed => "1";
      skipidentify => "true";
}

#############################################################################

bundle common u_def
{
  vars:
      "input_name_patterns" slist => { ".*.cf",".*.dat",".*.txt", ".*.conf" },
      comment => "Filename patterns to match when updating the policy (see update/update_policy.cf)",
      handle => "common_def_vars_input_name_patterns";

  classes:
      # Transfer policies and binaries with encryption
      # you can also request it from the command line with
      # -Dcfengine_internal_encrypt_transfers
      "cfengine_internal_encrypt_transfers" expression => "!any";

      # Purge policies that don't exist on the server side.
      # you can also request it from the command line with
      # -Dcfengine_internal_purge_policies
      "cfengine_internal_purge_policies" expression => "!any";

      # Update masterfiles from Git
      # you can also request it from the command line with
      # -Dcfengine_internal_masterfiles_update
      "cfengine_internal_masterfiles_update" expression => "!any";

}
