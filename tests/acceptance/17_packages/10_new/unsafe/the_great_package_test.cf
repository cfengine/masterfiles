# THIS IS AN AUTOGENERATED TEST!
# DO NOT EDIT IT DIRECTLY!
#
# Instead, edit the_great_package_test_generator.py and use that to regenerate
# the test.
#
# Number of test cases: 352
#
# If you want to run a specific test case, define a class with the name of that
# test, for example "from_absent_to_absent___promise_policy_absent_arch_64_bit".

body common control
{
    inputs => { "../../../dcs.cf.sub",
                "../../../../../$(sys.local_libdir)/packages.cf",
                "../../../../../$(sys.local_libdir)/commands.cf",
                "../../packages-info.cf.sub",
              };
    bundlesequence => { default($(this.promise_filename)) };
    package_module => "apt_get";
}

body package_module apt_get
{
    query_installed_ifelapsed => "0";
    query_updates_ifelapsed => "0";
}

bundle agent init
{
  meta:
      # TODO: Get RedHat support as well.
      "test_skip_needs_work" string => "!debian";
}

bundle agent log_test_case(msg)
{
  reports:
      "-------------------------------------"
        comment => "$(msg)_1";
      "$(msg)"
        comment => $(msg);
      "-------------------------------------"
        comment => "$(msg)_2";
}

bundle agent from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo
{
  methods:
      "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_start_msg"
        usebundle => log_test_case("0%: Starting test case \"from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo\"");
      "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init"
        usebundle => from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init;
      "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test"
        usebundle => from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test;
      "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check"
        usebundle => from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check;
      "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_finish_msg"
        usebundle => log_test_case("0%: Finished test case \"from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo\"");
}

bundle agent from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
}

bundle agent from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class")
      ;
}

bundle agent from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check
{
  classes:
      "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___correct_classes"
        expression => "!from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept.from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired.!from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "FAILED: from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo";
    from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "PASS: from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo";
  commands:
    !from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed";
    from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept";
    !from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired";
}

bundle agent from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only
{
  methods:
      "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_start_msg"
        usebundle => log_test_case("0%: Starting test case \"from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only\"");
      "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_init"
        usebundle => from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_init;
      "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_test"
        usebundle => from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_test;
      "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_check"
        usebundle => from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_check;
      "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("0%: Finished test case \"from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only\"");
}

bundle agent from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only");
}

bundle agent from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_check
{
  classes:
      "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_kept.!from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_repaired.from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok::
      "FAILED: from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only";
    from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok::
      "PASS: from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only";
  commands:
    !from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_failed";
    from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_kept";
    from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file
{
  methods:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_start_msg"
        usebundle => log_test_case("0%: Starting test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file\"");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_init"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_init;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_test"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_test;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_check"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_check;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_finish_msg"
        usebundle => log_test_case("0%: Finished test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file\"");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_check
{
  classes:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___correct_classes"
        expression => "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_kept.!from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_repaired.!from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok::
      "FAILED: from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file";
    from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok::
      "PASS: from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file";
  commands:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_failed";
    !from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_kept::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_kept";
    from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit
{
  methods:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_start_msg"
        usebundle => log_test_case("1%: Starting test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit\"");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_init"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_init;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_test"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_test;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_check"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_check;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_finish_msg"
        usebundle => log_test_case("1%: Finished test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit\"");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_check
{
  classes:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___correct_classes"
        expression => "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_kept.!from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_repaired.!from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok::
      "FAILED: from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit";
    from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok::
      "PASS: from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit";
  commands:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_failed";
    !from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_kept::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_kept";
    from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2
{
  methods:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_start_msg"
        usebundle => log_test_case("1%: Starting test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2\"");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_init"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_init;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_test"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_test;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_check"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_check;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_finish_msg"
        usebundle => log_test_case("1%: Finished test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2\"");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_check
{
  classes:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___correct_classes"
        expression => "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_kept.!from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_repaired.!from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok::
      "FAILED: from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2";
    from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok::
      "PASS: from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2";
  commands:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_failed";
    !from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_kept::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_kept";
    from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file
{
  methods:
      "from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_start_msg"
        usebundle => log_test_case("1%: Starting test case \"from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file\"");
      "from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_init"
        usebundle => from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_init;
      "from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_test"
        usebundle => from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_test;
      "from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_check"
        usebundle => from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_check;
      "from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_finish_msg"
        usebundle => log_test_case("1%: Finished test case \"from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file\"");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_check
{
  classes:
      "from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        expression => "from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_kept.!from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_repaired.!from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok::
      "FAILED: from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file";
    from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok::
      "PASS: from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file";
  commands:
    !from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_failed";
    !from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_kept::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_kept";
    from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo
{
  methods:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo_start_msg"
        usebundle => log_test_case("1%: Starting test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo\"");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo_init"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo_init;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo_test"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo_test;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo_check"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo_check;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo_finish_msg"
        usebundle => log_test_case("1%: Finished test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo\"");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo_check
{
  classes:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo___correct_classes"
        expression => "from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo___class_kept.!from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo___class_repaired.!from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo_ok::
      "FAILED: from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo";
    from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo_ok::
      "PASS: from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo";
  commands:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo___class_failed";
    !from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo___class_kept";
    from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo
{
  methods:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_start_msg"
        usebundle => log_test_case("2%: Starting test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo\"");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_init"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_init;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_test"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_test;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_check"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_check;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_finish_msg"
        usebundle => log_test_case("2%: Finished test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo\"");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_check
{
  classes:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___correct_classes"
        expression => "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_kept.!from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_repaired.!from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_ok::
      "FAILED: from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo";
    from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_ok::
      "PASS: from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo";
  commands:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_failed";
    !from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_kept";
    from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo
{
  methods:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo_start_msg"
        usebundle => log_test_case("2%: Starting test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo\"");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo_init"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo_init;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo_test"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo_test;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo_check"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo_check;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo_finish_msg"
        usebundle => log_test_case("2%: Finished test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo\"");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo_check
{
  classes:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo___correct_classes"
        expression => "from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo___class_kept.!from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo___class_repaired.!from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo_ok::
      "FAILED: from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo";
    from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo_ok::
      "PASS: from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo";
  commands:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo___class_failed";
    !from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo___class_kept";
    from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo
{
  methods:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo_start_msg"
        usebundle => log_test_case("2%: Starting test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo\"");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo_init"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo_init;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo_test"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo_test;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo_check"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo_check;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("2%: Finished test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo\"");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "latest"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo_check
{
  classes:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo___correct_classes"
        expression => "from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_kept.!from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_repaired.!from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "FAILED: from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo";
    from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "PASS: from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo";
  commands:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_failed";
    !from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_kept";
    from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo
{
  methods:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_start_msg"
        usebundle => log_test_case("3%: Starting test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo\"");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_finish_msg"
        usebundle => log_test_case("3%: Finished test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo\"");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check
{
  classes:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___correct_classes"
        expression => "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept.!from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired.!from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "FAILED: from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo";
    from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "PASS: from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo";
  commands:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed";
    !from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept";
    from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo
{
  methods:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_start_msg"
        usebundle => log_test_case("3%: Starting test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo\"");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check;
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("3%: Finished test case \"from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo\"");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "latest"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check
{
  classes:
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___correct_classes"
        expression => "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept.!from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired.!from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "FAILED: from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo";
    from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "PASS: from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo";
  commands:
    !from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed";
    !from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept";
    from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit
{
  methods:
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_start_msg"
        usebundle => log_test_case("3%: Starting test case \"from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit\"");
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_init"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_init;
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_test"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_test;
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_check"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_check;
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_finish_msg"
        usebundle => log_test_case("3%: Finished test case \"from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit\"");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_check
{
  classes:
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___correct_classes"
        expression => "from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_kept.!from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_repaired.!from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_ok::
      "FAILED: from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit";
    from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_ok::
      "PASS: from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit";
  commands:
    !from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_failed";
    !from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_kept::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_kept";
    from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1
{
  methods:
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_start_msg"
        usebundle => log_test_case("3%: Starting test case \"from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1\"");
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_init"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_init;
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_test"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_test;
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_check"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_check;
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_finish_msg"
        usebundle => log_test_case("3%: Finished test case \"from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1\"");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_check
{
  classes:
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1___correct_classes"
        expression => "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1___class_kept.!from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1___class_repaired.!from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_ok::
      "FAILED: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1";
    from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_ok::
      "PASS: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1";
  commands:
    !from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1___class_failed";
    !from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1___class_kept::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1___class_kept";
    from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit
{
  methods:
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit_start_msg"
        usebundle => log_test_case("4%: Starting test case \"from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit\"");
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit_init"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit_init;
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit_test"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit_test;
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit_check"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit_check;
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit_finish_msg"
        usebundle => log_test_case("4%: Finished test case \"from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit\"");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit_check
{
  classes:
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit___correct_classes"
        expression => "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit___class_kept.!from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit___class_repaired.!from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit_ok::
      "FAILED: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit";
    from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit_ok::
      "PASS: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit";
  commands:
    !from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit___class_failed";
    !from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit___class_kept::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit___class_kept";
    from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit
{
  methods:
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit_start_msg"
        usebundle => log_test_case("4%: Starting test case \"from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit\"");
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit_init"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit_init;
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit_test"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit_test;
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit_check"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit_check;
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit_finish_msg"
        usebundle => log_test_case("4%: Finished test case \"from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit\"");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit_check
{
  classes:
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit___correct_classes"
        expression => "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit___class_kept.!from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit___class_repaired.!from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit_ok::
      "FAILED: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit";
    from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit_ok::
      "PASS: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit";
  commands:
    !from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit___class_failed";
    !from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit___class_kept::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit___class_kept";
    from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit
{
  methods:
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_start_msg"
        usebundle => log_test_case("4%: Starting test case \"from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit\"");
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_init"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_init;
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_test"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_test;
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_check"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_check;
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_finish_msg"
        usebundle => log_test_case("4%: Finished test case \"from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit\"");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit");
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_check
{
  classes:
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___correct_classes"
        expression => "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_kept.!from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_repaired.!from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_ok::
      "FAILED: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit";
    from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_ok::
      "PASS: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit";
  commands:
    !from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_failed";
    !from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_kept::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_kept";
    from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_repaired";
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file
{
  methods:
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_start_msg"
        usebundle => log_test_case("5%: Starting test case \"from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file\"");
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_init"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_init;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_test"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_test;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_check"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_check;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_finish_msg"
        usebundle => log_test_case("5%: Finished test case \"from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file\"");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , classes => classes_generic("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class")
      ;
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_check
{
  classes:
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___correct_classes"
        expression => "!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_kept.from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_repaired.!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok::
      "FAILED: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file";
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok::
      "PASS: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file";
  commands:
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_failed::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_failed";
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_kept";
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_repaired::
      "Class was not set, but should be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_repaired";
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only
{
  methods:
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_start_msg"
        usebundle => log_test_case("5%: Starting test case \"from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only\"");
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_init"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_init;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_test"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_test;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_check"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_check;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_finish_msg"
        usebundle => log_test_case("5%: Finished test case \"from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only\"");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , action => warn_only
      , classes => classes_generic("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class")
      ;
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_check
{
  classes:
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___correct_classes"
        expression => "!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_kept.!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_repaired.from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_ok::
      "FAILED: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only";
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_ok::
      "PASS: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only";
  commands:
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_failed";
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_kept";
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_repaired";
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit
{
  methods:
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_start_msg"
        usebundle => log_test_case("5%: Starting test case \"from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit\"");
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_init"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_init;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_test"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_test;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_check"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_check;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_finish_msg"
        usebundle => log_test_case("5%: Finished test case \"from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit\"");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class")
      ;
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_check
{
  classes:
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___correct_classes"
        expression => "!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_kept.from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_repaired.!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok::
      "FAILED: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit";
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok::
      "PASS: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit";
  commands:
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_failed::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_failed";
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_kept";
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_repaired::
      "Class was not set, but should be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_repaired";
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only
{
  methods:
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_start_msg"
        usebundle => log_test_case("5%: Starting test case \"from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only\"");
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_init"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_init;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_test"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_test;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_check"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_check;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_finish_msg"
        usebundle => log_test_case("5%: Finished test case \"from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only\"");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , action => warn_only
      , classes => classes_generic("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class")
      ;
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_check
{
  classes:
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___correct_classes"
        expression => "!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_kept.!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_repaired.from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_ok::
      "FAILED: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only";
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_ok::
      "PASS: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only";
  commands:
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_failed";
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_kept";
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_repaired";
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1
{
  methods:
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_start_msg"
        usebundle => log_test_case("6%: Starting test case \"from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1\"");
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_init"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_init;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_test"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_test;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_check"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_check;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_finish_msg"
        usebundle => log_test_case("6%: Finished test case \"from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1\"");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class")
      ;
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_check
{
  classes:
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___correct_classes"
        expression => "!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_kept.from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_repaired.!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok::
      "FAILED: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1";
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok::
      "PASS: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1";
  commands:
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_failed::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_failed";
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_kept";
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_repaired::
      "Class was not set, but should be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_repaired";
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only
{
  methods:
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_start_msg"
        usebundle => log_test_case("6%: Starting test case \"from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only\"");
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_init"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_init;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_test"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_test;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_check"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_check;
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_finish_msg"
        usebundle => log_test_case("6%: Finished test case \"from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only\"");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class")
      ;
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_check
{
  classes:
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___correct_classes"
        expression => "!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_kept.!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_repaired.from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_ok::
      "FAILED: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only";
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_ok::
      "PASS: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only";
  commands:
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_failed";
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_kept";
    from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_repaired";
}

bundle agent from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file
{
  methods:
      "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_start_msg"
        usebundle => log_test_case("6%: Starting test case \"from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file\"");
      "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_init"
        usebundle => from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_init;
      "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_test"
        usebundle => from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_test;
      "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_check"
        usebundle => from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_check;
      "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_finish_msg"
        usebundle => log_test_case("6%: Finished test case \"from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file\"");
}

bundle agent from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file");
}

bundle agent from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class")
      ;
}

bundle agent from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_check
{
  classes:
      "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        expression => "!from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_kept.from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_repaired.!from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok::
      "FAILED: from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file";
    from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok::
      "PASS: from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file";
  commands:
    !from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_failed";
    from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_kept";
    !from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_repaired::
      "Class was not set, but should be: from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_repaired";
}

bundle agent from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only
{
  methods:
      "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_start_msg"
        usebundle => log_test_case("7%: Starting test case \"from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only\"");
      "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_init"
        usebundle => from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_init;
      "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_test"
        usebundle => from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_test;
      "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_check"
        usebundle => from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_check;
      "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_finish_msg"
        usebundle => log_test_case("7%: Finished test case \"from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only\"");
}

bundle agent from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only");
}

bundle agent from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class")
      ;
}

bundle agent from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_check
{
  classes:
      "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___correct_classes"
        expression => "!from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept.!from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired.from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "FAILED: from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only";
    from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "PASS: from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only";
  commands:
    !from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed";
    from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept";
    from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired";
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo
{
  methods:
      "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_start_msg"
        usebundle => log_test_case("7%: Starting test case \"from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo\"");
      "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_init"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_init;
      "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_test"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_test;
      "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_check"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_check;
      "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_finish_msg"
        usebundle => log_test_case("7%: Finished test case \"from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo\"");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo___class")
      ;
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_check
{
  classes:
      "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo___correct_classes"
        expression => "!from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo___class_kept.from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo___class_repaired.!from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_ok::
      "FAILED: from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo";
    from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_ok::
      "PASS: from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo";
  commands:
    !from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo___class_failed";
    from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo___class_kept";
    !from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo___class_repaired::
      "Class was not set, but should be: from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo___class_repaired";
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only
{
  methods:
      "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_start_msg"
        usebundle => log_test_case("7%: Starting test case \"from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only\"");
      "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_init"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_init;
      "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_test"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_test;
      "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_check"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_check;
      "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("7%: Finished test case \"from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only\"");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class")
      ;
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_check
{
  classes:
      "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___correct_classes"
        expression => "!from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_kept.!from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_repaired.from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok::
      "FAILED: from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only";
    from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok::
      "PASS: from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only";
  commands:
    !from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_failed";
    from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_kept";
    from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_repaired";
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo
{
  methods:
      "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_start_msg"
        usebundle => log_test_case("7%: Starting test case \"from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo\"");
      "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init;
      "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test;
      "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check;
      "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_finish_msg"
        usebundle => log_test_case("7%: Finished test case \"from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo\"");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class")
      ;
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check
{
  classes:
      "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___correct_classes"
        expression => "!from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept.from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired.!from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "FAILED: from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo";
    from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "PASS: from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo";
  commands:
    !from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed";
    from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept";
    !from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired::
      "Class was not set, but should be: from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired";
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only
{
  methods:
      "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_start_msg"
        usebundle => log_test_case("8%: Starting test case \"from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only\"");
      "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_init"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_init;
      "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_test"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_test;
      "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_check"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_check;
      "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("8%: Finished test case \"from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only\"");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only");
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class")
      ;
}

bundle agent from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_check
{
  classes:
      "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___correct_classes"
        expression => "!from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_kept.!from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_repaired.from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok::
      "FAILED: from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only";
    from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok::
      "PASS: from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only";
  commands:
    !from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_failed";
    from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_kept";
    from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file
{
  methods:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_start_msg"
        usebundle => log_test_case("8%: Starting test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file\"");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_init"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_init;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_test"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_test;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_check"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_check;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_finish_msg"
        usebundle => log_test_case("8%: Finished test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file\"");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , classes => classes_generic("from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_check
{
  classes:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___correct_classes"
        expression => "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_kept.!from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_repaired.!from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok::
      "FAILED: from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file";
    from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok::
      "PASS: from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file";
  commands:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_failed";
    !from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_kept::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_kept";
    from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit
{
  methods:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_start_msg"
        usebundle => log_test_case("8%: Starting test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit\"");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_init"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_init;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_test"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_test;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_check"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_check;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_finish_msg"
        usebundle => log_test_case("8%: Finished test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit\"");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_check
{
  classes:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___correct_classes"
        expression => "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_kept.!from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_repaired.!from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok::
      "FAILED: from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit";
    from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok::
      "PASS: from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit";
  commands:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_failed";
    !from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_kept::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_kept";
    from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2
{
  methods:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_start_msg"
        usebundle => log_test_case("9%: Starting test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2\"");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_init"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_init;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_test"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_test;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_check"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_check;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_finish_msg"
        usebundle => log_test_case("9%: Finished test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2\"");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_check
{
  classes:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___correct_classes"
        expression => "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_kept.!from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_repaired.!from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok::
      "FAILED: from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2";
    from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok::
      "PASS: from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2";
  commands:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_failed";
    !from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_kept::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_kept";
    from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file
{
  methods:
      "from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_start_msg"
        usebundle => log_test_case("9%: Starting test case \"from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file\"");
      "from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_init"
        usebundle => from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_init;
      "from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_test"
        usebundle => from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_test;
      "from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_check"
        usebundle => from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_check;
      "from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_finish_msg"
        usebundle => log_test_case("9%: Finished test case \"from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file\"");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_check
{
  classes:
      "from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        expression => "from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_kept.!from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_repaired.!from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok::
      "FAILED: from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file";
    from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok::
      "PASS: from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file";
  commands:
    !from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_failed";
    !from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_kept::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_kept";
    from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo
{
  methods:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo_start_msg"
        usebundle => log_test_case("9%: Starting test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo\"");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo_init"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo_init;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo_test"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo_test;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo_check"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo_check;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo_finish_msg"
        usebundle => log_test_case("9%: Finished test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo\"");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , classes => classes_generic("from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo_check
{
  classes:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo___correct_classes"
        expression => "from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo___class_kept.!from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo___class_repaired.!from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo_ok::
      "FAILED: from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo";
    from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo_ok::
      "PASS: from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo";
  commands:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo___class_failed";
    !from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo___class_kept::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo___class_kept";
    from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo
{
  methods:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_start_msg"
        usebundle => log_test_case("9%: Starting test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo\"");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_init"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_init;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_test"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_test;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_check"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_check;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_finish_msg"
        usebundle => log_test_case("9%: Finished test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo\"");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_check
{
  classes:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___correct_classes"
        expression => "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_kept.!from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_repaired.!from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok::
      "FAILED: from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo";
    from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok::
      "PASS: from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo";
  commands:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_failed";
    !from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_kept::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_kept";
    from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo
{
  methods:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo_start_msg"
        usebundle => log_test_case("10%: Starting test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo\"");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo_init"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo_init;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo_test"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo_test;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo_check"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo_check;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo_finish_msg"
        usebundle => log_test_case("10%: Finished test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo\"");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo_check
{
  classes:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo___correct_classes"
        expression => "from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo___class_kept.!from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo___class_repaired.!from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo_ok::
      "FAILED: from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo";
    from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo_ok::
      "PASS: from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo";
  commands:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo___class_failed";
    !from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo___class_kept::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo___class_kept";
    from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo
{
  methods:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo_start_msg"
        usebundle => log_test_case("10%: Starting test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo\"");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo_init"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo_init;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo_test"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo_test;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo_check"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo_check;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("10%: Finished test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo\"");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "latest"
      , classes => classes_generic("from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo_check
{
  classes:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo___correct_classes"
        expression => "from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_kept.!from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_repaired.!from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "FAILED: from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo";
    from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "PASS: from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo";
  commands:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_failed";
    !from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_kept::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_kept";
    from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo
{
  methods:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_start_msg"
        usebundle => log_test_case("10%: Starting test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo\"");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_finish_msg"
        usebundle => log_test_case("10%: Finished test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo\"");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check
{
  classes:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___correct_classes"
        expression => "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept.!from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired.!from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "FAILED: from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo";
    from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "PASS: from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo";
  commands:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed";
    !from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept";
    from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo
{
  methods:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_start_msg"
        usebundle => log_test_case("11%: Starting test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo\"");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check;
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("11%: Finished test case \"from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo\"");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "latest"
      , classes => classes_generic("from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check
{
  classes:
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___correct_classes"
        expression => "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept.!from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired.!from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "FAILED: from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo";
    from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "PASS: from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo";
  commands:
    !from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed";
    !from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept";
    from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit
{
  methods:
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_start_msg"
        usebundle => log_test_case("11%: Starting test case \"from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit\"");
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_init"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_init;
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_test"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_test;
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_check"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_check;
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_finish_msg"
        usebundle => log_test_case("11%: Finished test case \"from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit\"");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_check
{
  classes:
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___correct_classes"
        expression => "from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_kept.!from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_repaired.!from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_ok::
      "FAILED: from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit";
    from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_ok::
      "PASS: from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit";
  commands:
    !from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_failed";
    !from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_kept::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_kept";
    from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1
{
  methods:
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_start_msg"
        usebundle => log_test_case("11%: Starting test case \"from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1\"");
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_init"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_init;
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_test"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_test;
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_check"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_check;
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_finish_msg"
        usebundle => log_test_case("11%: Finished test case \"from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1\"");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_check
{
  classes:
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1___correct_classes"
        expression => "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1___class_kept.!from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1___class_repaired.!from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_ok::
      "FAILED: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1";
    from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_ok::
      "PASS: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1";
  commands:
    !from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1___class_failed";
    !from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1___class_kept::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1___class_kept";
    from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit
{
  methods:
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit_start_msg"
        usebundle => log_test_case("11%: Starting test case \"from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit\"");
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit_init"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit_init;
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit_test"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit_test;
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit_check"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit_check;
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit_finish_msg"
        usebundle => log_test_case("11%: Finished test case \"from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit\"");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit_check
{
  classes:
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit___correct_classes"
        expression => "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_kept.!from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_repaired.!from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit_ok::
      "FAILED: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit";
    from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit_ok::
      "PASS: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit";
  commands:
    !from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_failed";
    !from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_kept::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_kept";
    from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit
{
  methods:
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit_start_msg"
        usebundle => log_test_case("12%: Starting test case \"from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit\"");
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit_init"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit_init;
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit_test"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit_test;
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit_check"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit_check;
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit_finish_msg"
        usebundle => log_test_case("12%: Finished test case \"from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit\"");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit_check
{
  classes:
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit___correct_classes"
        expression => "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_kept.!from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_repaired.!from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit_ok::
      "FAILED: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit";
    from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit_ok::
      "PASS: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit";
  commands:
    !from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_failed";
    !from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_kept::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_kept";
    from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit
{
  methods:
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_start_msg"
        usebundle => log_test_case("12%: Starting test case \"from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit\"");
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_init"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_init;
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_test"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_test;
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_check"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_check;
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_finish_msg"
        usebundle => log_test_case("12%: Finished test case \"from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit\"");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit");
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_check
{
  classes:
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___correct_classes"
        expression => "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_kept.!from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_repaired.!from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_ok::
      "FAILED: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit";
    from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_ok::
      "PASS: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit";
  commands:
    !from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_failed";
    !from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_kept::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_kept";
    from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_repaired";
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file
{
  methods:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_start_msg"
        usebundle => log_test_case("12%: Starting test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file\"");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_init"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_init;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_test"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_test;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_check"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_check;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_finish_msg"
        usebundle => log_test_case("12%: Finished test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file\"");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , classes => classes_generic("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class")
      ;
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_check
{
  classes:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___correct_classes"
        expression => "!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_kept.from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_repaired.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___correct_classes"
        };

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok::
      "FAILED: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok::
      "PASS: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file";
  commands:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_failed";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_kept";
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_repaired";
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only
{
  methods:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_start_msg"
        usebundle => log_test_case("13%: Starting test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only\"");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_init"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_init;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_test"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_test;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_check"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_check;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_finish_msg"
        usebundle => log_test_case("13%: Finished test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only\"");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_check
{
  classes:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_kept.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_repaired.from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_ok::
      "FAILED: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_ok::
      "PASS: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only";
  commands:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_failed";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_kept";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit
{
  methods:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_start_msg"
        usebundle => log_test_case("13%: Starting test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit\"");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_init"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_init;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_test"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_test;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_check"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_check;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_finish_msg"
        usebundle => log_test_case("13%: Finished test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit\"");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class")
      ;
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_check
{
  classes:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___correct_classes"
        expression => "!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_kept.from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_repaired.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___correct_classes"
        };

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok::
      "FAILED: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok::
      "PASS: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit";
  commands:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_failed";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_kept";
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_repaired";
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only
{
  methods:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_start_msg"
        usebundle => log_test_case("13%: Starting test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only\"");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_init"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_init;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_test"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_test;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_check"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_check;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_finish_msg"
        usebundle => log_test_case("13%: Finished test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only\"");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_check
{
  classes:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_kept.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_repaired.from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_ok::
      "FAILED: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_ok::
      "PASS: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only";
  commands:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_failed";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_kept";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2
{
  methods:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_start_msg"
        usebundle => log_test_case("13%: Starting test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2\"");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_init"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_init;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_test"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_test;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_check"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_check;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_finish_msg"
        usebundle => log_test_case("13%: Finished test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2\"");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class")
      ;
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_check
{
  classes:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___correct_classes"
        expression => "!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_kept.from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_repaired.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___correct_classes"
        };

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok::
      "FAILED: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok::
      "PASS: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2";
  commands:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_failed";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_kept";
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_repaired";
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only
{
  methods:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_start_msg"
        usebundle => log_test_case("14%: Starting test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only\"");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_init"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_init;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_test"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_test;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_check"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_check;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_finish_msg"
        usebundle => log_test_case("14%: Finished test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only\"");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_check
{
  classes:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_kept.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_repaired.from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_ok::
      "FAILED: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_ok::
      "PASS: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only";
  commands:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_failed";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_kept";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file
{
  methods:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_start_msg"
        usebundle => log_test_case("14%: Starting test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file\"");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_init"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_init;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_test"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_test;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_check"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_check;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_finish_msg"
        usebundle => log_test_case("14%: Finished test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file\"");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class")
      ;
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_check
{
  classes:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        expression => "!from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_kept.from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_repaired.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        };

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok::
      "FAILED: from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok::
      "PASS: from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file";
  commands:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_failed";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_kept";
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_repaired";
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only
{
  methods:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_start_msg"
        usebundle => log_test_case("14%: Starting test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only\"");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_init"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_init;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_test"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_test;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_check"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_check;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_finish_msg"
        usebundle => log_test_case("14%: Finished test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only\"");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_check
{
  classes:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired.from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "FAILED: from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "PASS: from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only";
  commands:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo
{
  methods:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_start_msg"
        usebundle => log_test_case("15%: Starting test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo\"");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_init"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_init;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_test"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_test;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_check"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_check;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_finish_msg"
        usebundle => log_test_case("15%: Finished test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo\"");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class")
      ;
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_check
{
  classes:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___correct_classes"
        expression => "!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_kept.from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_repaired.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_ok::
      "FAILED: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_ok::
      "PASS: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo";
  commands:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_failed";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_kept";
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_repaired";
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only
{
  methods:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_start_msg"
        usebundle => log_test_case("15%: Starting test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only\"");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_init"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_init;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_test"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_test;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_check"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_check;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("15%: Finished test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only\"");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_check
{
  classes:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_kept.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_repaired.from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_ok::
      "FAILED: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_ok::
      "PASS: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only";
  commands:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_failed";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_kept";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo
{
  methods:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_start_msg"
        usebundle => log_test_case("15%: Starting test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo\"");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_finish_msg"
        usebundle => log_test_case("15%: Finished test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo\"");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class")
      ;
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check
{
  classes:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___correct_classes"
        expression => "!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept.from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "FAILED: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "PASS: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo";
  commands:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept";
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired";
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only
{
  methods:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_start_msg"
        usebundle => log_test_case("15%: Starting test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only\"");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_init"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_init;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_test"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_test;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_check"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_check;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("15%: Finished test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only\"");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_check
{
  classes:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_kept.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_repaired.from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok::
      "FAILED: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok::
      "PASS: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only";
  commands:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_failed";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_kept";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo
{
  methods:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_start_msg"
        usebundle => log_test_case("16%: Starting test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo\"");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("16%: Finished test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo\"");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "latest"
      , classes => classes_generic("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class")
      ;
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check
{
  classes:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___correct_classes"
        expression => "!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept.from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "FAILED: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "PASS: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo";
  commands:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept";
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired";
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only
{
  methods:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_start_msg"
        usebundle => log_test_case("16%: Starting test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only\"");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_init"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_init;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_test"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_test;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_check"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_check;
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("16%: Finished test case \"from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only\"");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only");
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "latest"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_check
{
  classes:
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_kept.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_repaired.from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok::
      "FAILED: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok::
      "PASS: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only";
  commands:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_failed";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_kept";
    from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_absent___promise_policy_absent
{
  methods:
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_start_msg"
        usebundle => log_test_case("16%: Starting test case \"from_64_bit_2_32_bit_2_to_absent___promise_policy_absent\"");
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_init"
        usebundle => from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_init;
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_test"
        usebundle => from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_test;
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_check"
        usebundle => from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_check;
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_finish_msg"
        usebundle => log_test_case("16%: Finished test case \"from_64_bit_2_32_bit_2_to_absent___promise_policy_absent\"");
}

bundle agent from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_absent___promise_policy_absent");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_absent___promise_policy_absent");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent");
}

bundle agent from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_absent___promise_policy_absent___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_absent___promise_policy_absent___class_kept.from_64_bit_2_32_bit_2_to_absent___promise_policy_absent___class_repaired.!from_64_bit_2_32_bit_2_to_absent___promise_policy_absent___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent";
    from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_ok::
      "PASS: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent";
  commands:
    !from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_absent___promise_policy_absent___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent___class_failed";
    from_64_bit_2_32_bit_2_to_absent___promise_policy_absent___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent___class_kept";
    !from_64_bit_2_32_bit_2_to_absent___promise_policy_absent___class_repaired::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only
{
  methods:
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only_start_msg"
        usebundle => log_test_case("17%: Starting test case \"from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only\"");
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only_init"
        usebundle => from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only_init;
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only_test"
        usebundle => from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only_test;
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only_check"
        usebundle => from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only_check;
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only_finish_msg"
        usebundle => log_test_case("17%: Finished test case \"from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only\"");
}

bundle agent from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only");
}

bundle agent from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only___class_kept.!from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only___class_repaired.from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only";
    from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only_ok::
      "PASS: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only";
  commands:
    !from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only___class_failed";
    from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only___class_kept";
    from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2
{
  methods:
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_start_msg"
        usebundle => log_test_case("17%: Starting test case \"from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2\"");
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_init"
        usebundle => from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_init;
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_test"
        usebundle => from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_test;
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_check"
        usebundle => from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_check;
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_finish_msg"
        usebundle => log_test_case("17%: Finished test case \"from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2\"");
}

bundle agent from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2");
}

bundle agent from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2___class_kept.from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2___class_repaired.!from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2";
    from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_ok::
      "PASS: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2";
  commands:
    !from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2___class_failed";
    from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2___class_kept";
    !from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2___class_repaired::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only
{
  methods:
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_start_msg"
        usebundle => log_test_case("17%: Starting test case \"from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only\"");
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_init"
        usebundle => from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_init;
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_test"
        usebundle => from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_test;
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_check"
        usebundle => from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_check;
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_finish_msg"
        usebundle => log_test_case("17%: Finished test case \"from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only\"");
}

bundle agent from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only");
}

bundle agent from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_kept.!from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_repaired.from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only";
    from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_ok::
      "PASS: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only";
  commands:
    !from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_failed";
    from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_kept";
    from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo
{
  methods:
      "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_start_msg"
        usebundle => log_test_case("17%: Starting test case \"from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo\"");
      "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init;
      "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test;
      "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check;
      "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_finish_msg"
        usebundle => log_test_case("17%: Finished test case \"from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo\"");
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept.from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired.!from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo";
    from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "PASS: from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo";
  commands:
    !from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed";
    from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept";
    !from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only
{
  methods:
      "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_start_msg"
        usebundle => log_test_case("18%: Starting test case \"from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only\"");
      "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_init"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_init;
      "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_test"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_test;
      "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_check"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_check;
      "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("18%: Finished test case \"from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only\"");
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only");
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_kept.!from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_repaired.from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only";
    from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok::
      "PASS: from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only";
  commands:
    !from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_failed";
    from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_kept";
    from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_absent___promise_policy_absent
{
  methods:
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_start_msg"
        usebundle => log_test_case("18%: Starting test case \"from_64_bit_1_32_bit_1_to_absent___promise_policy_absent\"");
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_init"
        usebundle => from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_init;
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_test"
        usebundle => from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_test;
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_check"
        usebundle => from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_check;
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_finish_msg"
        usebundle => log_test_case("18%: Finished test case \"from_64_bit_1_32_bit_1_to_absent___promise_policy_absent\"");
}

bundle agent from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_absent___promise_policy_absent");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_absent___promise_policy_absent");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent");
}

bundle agent from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_absent___promise_policy_absent___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_absent___promise_policy_absent___class_kept.from_64_bit_1_32_bit_1_to_absent___promise_policy_absent___class_repaired.!from_64_bit_1_32_bit_1_to_absent___promise_policy_absent___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent";
    from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_ok::
      "PASS: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent";
  commands:
    !from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_absent___promise_policy_absent___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent___class_failed";
    from_64_bit_1_32_bit_1_to_absent___promise_policy_absent___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent___class_kept";
    !from_64_bit_1_32_bit_1_to_absent___promise_policy_absent___class_repaired::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only
{
  methods:
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only_start_msg"
        usebundle => log_test_case("18%: Starting test case \"from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only\"");
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only_init"
        usebundle => from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only_init;
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only_test"
        usebundle => from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only_test;
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only_check"
        usebundle => from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only_check;
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only_finish_msg"
        usebundle => log_test_case("18%: Finished test case \"from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only\"");
}

bundle agent from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only");
}

bundle agent from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only___class_kept.!from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only___class_repaired.from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only";
    from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only_ok::
      "PASS: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only";
  commands:
    !from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only___class_failed";
    from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only___class_kept";
    from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1
{
  methods:
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_start_msg"
        usebundle => log_test_case("19%: Starting test case \"from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1\"");
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_init"
        usebundle => from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_init;
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_test"
        usebundle => from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_test;
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_check"
        usebundle => from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_check;
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_finish_msg"
        usebundle => log_test_case("19%: Finished test case \"from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1\"");
}

bundle agent from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1");
}

bundle agent from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1___class_kept.from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1___class_repaired.!from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1";
    from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_ok::
      "PASS: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1";
  commands:
    !from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1___class_failed";
    from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1___class_kept";
    !from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1___class_repaired::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only
{
  methods:
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_start_msg"
        usebundle => log_test_case("19%: Starting test case \"from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only\"");
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_init"
        usebundle => from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_init;
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_test"
        usebundle => from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_test;
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_check"
        usebundle => from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_check;
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_finish_msg"
        usebundle => log_test_case("19%: Finished test case \"from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only\"");
}

bundle agent from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only");
}

bundle agent from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_kept.!from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_repaired.from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only";
    from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_ok::
      "PASS: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only";
  commands:
    !from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_failed";
    from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_kept";
    from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent
{
  methods:
      "from_64_bit_2_to_absent___promise_policy_absent_start_msg"
        usebundle => log_test_case("19%: Starting test case \"from_64_bit_2_to_absent___promise_policy_absent\"");
      "from_64_bit_2_to_absent___promise_policy_absent_init"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_init;
      "from_64_bit_2_to_absent___promise_policy_absent_test"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_test;
      "from_64_bit_2_to_absent___promise_policy_absent_check"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_check;
      "from_64_bit_2_to_absent___promise_policy_absent_finish_msg"
        usebundle => log_test_case("19%: Finished test case \"from_64_bit_2_to_absent___promise_policy_absent\"");
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_absent___promise_policy_absent");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_absent___promise_policy_absent");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_absent___promise_policy_absent");
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , classes => classes_generic("from_64_bit_2_to_absent___promise_policy_absent___class")
      ;
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_check
{
  classes:
      "from_64_bit_2_to_absent___promise_policy_absent___correct_classes"
        expression => "!from_64_bit_2_to_absent___promise_policy_absent___class_kept.from_64_bit_2_to_absent___promise_policy_absent___class_repaired.!from_64_bit_2_to_absent___promise_policy_absent___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_absent___promise_policy_absent_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_absent___promise_policy_absent___correct_classes"
        };

  reports:
    !from_64_bit_2_to_absent___promise_policy_absent_ok::
      "FAILED: from_64_bit_2_to_absent___promise_policy_absent";
    from_64_bit_2_to_absent___promise_policy_absent_ok::
      "PASS: from_64_bit_2_to_absent___promise_policy_absent";
  commands:
    !from_64_bit_2_to_absent___promise_policy_absent_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_absent___promise_policy_absent___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_absent___promise_policy_absent___class_failed";
    from_64_bit_2_to_absent___promise_policy_absent___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_absent___promise_policy_absent___class_kept";
    !from_64_bit_2_to_absent___promise_policy_absent___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_absent___promise_policy_absent___class_repaired";
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_warn_only
{
  methods:
      "from_64_bit_2_to_absent___promise_policy_absent_warn_only_start_msg"
        usebundle => log_test_case("19%: Starting test case \"from_64_bit_2_to_absent___promise_policy_absent_warn_only\"");
      "from_64_bit_2_to_absent___promise_policy_absent_warn_only_init"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_warn_only_init;
      "from_64_bit_2_to_absent___promise_policy_absent_warn_only_test"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_warn_only_test;
      "from_64_bit_2_to_absent___promise_policy_absent_warn_only_check"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_warn_only_check;
      "from_64_bit_2_to_absent___promise_policy_absent_warn_only_finish_msg"
        usebundle => log_test_case("19%: Finished test case \"from_64_bit_2_to_absent___promise_policy_absent_warn_only\"");
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_absent___promise_policy_absent_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_absent___promise_policy_absent_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_absent___promise_policy_absent_warn_only");
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_absent___promise_policy_absent_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_warn_only_check
{
  classes:
      "from_64_bit_2_to_absent___promise_policy_absent_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_absent___promise_policy_absent_warn_only___class_kept.!from_64_bit_2_to_absent___promise_policy_absent_warn_only___class_repaired.from_64_bit_2_to_absent___promise_policy_absent_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_absent___promise_policy_absent_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_absent___promise_policy_absent_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_absent___promise_policy_absent_warn_only_ok::
      "FAILED: from_64_bit_2_to_absent___promise_policy_absent_warn_only";
    from_64_bit_2_to_absent___promise_policy_absent_warn_only_ok::
      "PASS: from_64_bit_2_to_absent___promise_policy_absent_warn_only";
  commands:
    !from_64_bit_2_to_absent___promise_policy_absent_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_absent___promise_policy_absent_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_absent___promise_policy_absent_warn_only___class_failed";
    from_64_bit_2_to_absent___promise_policy_absent_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_absent___promise_policy_absent_warn_only___class_kept";
    from_64_bit_2_to_absent___promise_policy_absent_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_absent___promise_policy_absent_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit
{
  methods:
      "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_start_msg"
        usebundle => log_test_case("20%: Starting test case \"from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit\"");
      "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_init"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_init;
      "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_test"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_test;
      "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_check"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_check;
      "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_finish_msg"
        usebundle => log_test_case("20%: Finished test case \"from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit\"");
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit");
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_check
{
  classes:
      "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit___correct_classes"
        expression => "!from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit___class_kept.from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit___class_repaired.!from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_ok::
      "FAILED: from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit";
    from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_ok::
      "PASS: from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit";
  commands:
    !from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit___class_failed";
    from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit___class_kept";
    !from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only
{
  methods:
      "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only_start_msg"
        usebundle => log_test_case("20%: Starting test case \"from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only\"");
      "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only_init"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only_init;
      "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only_test"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only_test;
      "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only_check"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only_check;
      "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only_finish_msg"
        usebundle => log_test_case("20%: Finished test case \"from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only\"");
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only");
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only_check
{
  classes:
      "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_kept.!from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_repaired.from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only_ok::
      "FAILED: from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only";
    from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only_ok::
      "PASS: from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only";
  commands:
    !from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_failed";
    from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_kept";
    from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_version_2
{
  methods:
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_start_msg"
        usebundle => log_test_case("20%: Starting test case \"from_64_bit_2_to_absent___promise_policy_absent_version_2\"");
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_init"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_version_2_init;
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_test"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_version_2_test;
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_check"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_version_2_check;
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_finish_msg"
        usebundle => log_test_case("20%: Finished test case \"from_64_bit_2_to_absent___promise_policy_absent_version_2\"");
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_absent___promise_policy_absent_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_absent___promise_policy_absent_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_absent___promise_policy_absent_version_2");
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_version_2_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_to_absent___promise_policy_absent_version_2___class")
      ;
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_version_2_check
{
  classes:
      "from_64_bit_2_to_absent___promise_policy_absent_version_2___correct_classes"
        expression => "!from_64_bit_2_to_absent___promise_policy_absent_version_2___class_kept.from_64_bit_2_to_absent___promise_policy_absent_version_2___class_repaired.!from_64_bit_2_to_absent___promise_policy_absent_version_2___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_absent___promise_policy_absent_version_2___correct_classes"
        };

  reports:
    !from_64_bit_2_to_absent___promise_policy_absent_version_2_ok::
      "FAILED: from_64_bit_2_to_absent___promise_policy_absent_version_2";
    from_64_bit_2_to_absent___promise_policy_absent_version_2_ok::
      "PASS: from_64_bit_2_to_absent___promise_policy_absent_version_2";
  commands:
    !from_64_bit_2_to_absent___promise_policy_absent_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_absent___promise_policy_absent_version_2___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_absent___promise_policy_absent_version_2___class_failed";
    from_64_bit_2_to_absent___promise_policy_absent_version_2___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_absent___promise_policy_absent_version_2___class_kept";
    !from_64_bit_2_to_absent___promise_policy_absent_version_2___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_absent___promise_policy_absent_version_2___class_repaired";
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only
{
  methods:
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only_start_msg"
        usebundle => log_test_case("21%: Starting test case \"from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only\"");
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only_init"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only_init;
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only_test"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only_test;
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only_check"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only_check;
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only_finish_msg"
        usebundle => log_test_case("21%: Finished test case \"from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only\"");
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only");
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only_check
{
  classes:
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_kept.!from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_repaired.from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only_ok::
      "FAILED: from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only";
    from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only_ok::
      "PASS: from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only";
  commands:
    !from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_failed";
    from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_kept";
    from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit
{
  methods:
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_start_msg"
        usebundle => log_test_case("21%: Starting test case \"from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit\"");
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_init"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_init;
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_test"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_test;
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_check"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_check;
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_finish_msg"
        usebundle => log_test_case("21%: Finished test case \"from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit\"");
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit");
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_check
{
  classes:
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit___correct_classes"
        expression => "!from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit___class_kept.from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit___class_repaired.!from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_ok::
      "FAILED: from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit";
    from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_ok::
      "PASS: from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit";
  commands:
    !from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit___class_failed";
    from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit___class_kept";
    !from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only
{
  methods:
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only_start_msg"
        usebundle => log_test_case("21%: Starting test case \"from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only\"");
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only_init"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only_init;
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only_test"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only_test;
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only_check"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only_check;
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only_finish_msg"
        usebundle => log_test_case("21%: Finished test case \"from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only\"");
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only");
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only_check
{
  classes:
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only___class_kept.!from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only___class_repaired.from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only_ok::
      "FAILED: from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only";
    from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only_ok::
      "PASS: from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only";
  commands:
    !from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only___class_failed";
    from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only___class_kept";
    from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file
{
  methods:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_start_msg"
        usebundle => log_test_case("21%: Starting test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file\"");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_init"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_init;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_test"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_test;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_check"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_check;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_finish_msg"
        usebundle => log_test_case("21%: Finished test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file\"");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , classes => classes_generic("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class")
      ;
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_check
{
  classes:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___correct_classes"
        expression => "!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_kept.from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_repaired.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___correct_classes"
        };

  reports:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok::
      "FAILED: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok::
      "PASS: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file";
  commands:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_failed";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_kept";
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_repaired";
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only
{
  methods:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_start_msg"
        usebundle => log_test_case("22%: Starting test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only\"");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_init"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_init;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_test"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_test;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_check"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_check;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_finish_msg"
        usebundle => log_test_case("22%: Finished test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only\"");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_check
{
  classes:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_kept.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_repaired.from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_ok::
      "FAILED: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_ok::
      "PASS: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only";
  commands:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_failed";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_kept";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit
{
  methods:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_start_msg"
        usebundle => log_test_case("22%: Starting test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit\"");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_init"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_init;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_test"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_test;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_check"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_check;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_finish_msg"
        usebundle => log_test_case("22%: Finished test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit\"");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class")
      ;
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_check
{
  classes:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___correct_classes"
        expression => "!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_kept.from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_repaired.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___correct_classes"
        };

  reports:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok::
      "FAILED: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok::
      "PASS: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit";
  commands:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_failed";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_kept";
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_repaired";
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only
{
  methods:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_start_msg"
        usebundle => log_test_case("22%: Starting test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only\"");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_init"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_init;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_test"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_test;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_check"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_check;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_finish_msg"
        usebundle => log_test_case("22%: Finished test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only\"");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_check
{
  classes:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_kept.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_repaired.from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_ok::
      "FAILED: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_ok::
      "PASS: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only";
  commands:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_failed";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_kept";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1
{
  methods:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_start_msg"
        usebundle => log_test_case("23%: Starting test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1\"");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_init"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_init;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_test"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_test;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_check"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_check;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_finish_msg"
        usebundle => log_test_case("23%: Finished test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1\"");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class")
      ;
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_check
{
  classes:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___correct_classes"
        expression => "!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_kept.from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_repaired.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___correct_classes"
        };

  reports:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok::
      "FAILED: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok::
      "PASS: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1";
  commands:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_failed";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_kept";
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_repaired";
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only
{
  methods:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_start_msg"
        usebundle => log_test_case("23%: Starting test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only\"");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_init"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_init;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_test"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_test;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_check"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_check;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_finish_msg"
        usebundle => log_test_case("23%: Finished test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only\"");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_check
{
  classes:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_kept.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_repaired.from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_ok::
      "FAILED: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_ok::
      "PASS: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only";
  commands:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_failed";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_kept";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file
{
  methods:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_start_msg"
        usebundle => log_test_case("23%: Starting test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file\"");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_init"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_init;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_test"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_test;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_check"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_check;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_finish_msg"
        usebundle => log_test_case("23%: Finished test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file\"");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class")
      ;
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_check
{
  classes:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        expression => "!from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_kept.from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_repaired.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        };

  reports:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok::
      "FAILED: from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok::
      "PASS: from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file";
  commands:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_failed";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_kept";
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_repaired";
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only
{
  methods:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_start_msg"
        usebundle => log_test_case("23%: Starting test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only\"");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_init"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_init;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_test"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_test;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_check"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_check;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_finish_msg"
        usebundle => log_test_case("23%: Finished test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only\"");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_check
{
  classes:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired.from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "FAILED: from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "PASS: from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only";
  commands:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo
{
  methods:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_start_msg"
        usebundle => log_test_case("24%: Starting test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo\"");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_finish_msg"
        usebundle => log_test_case("24%: Finished test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo\"");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class")
      ;
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check
{
  classes:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___correct_classes"
        expression => "!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept.from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "FAILED: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "PASS: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo";
  commands:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept";
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired";
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only
{
  methods:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_start_msg"
        usebundle => log_test_case("24%: Starting test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only\"");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_init"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_init;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_test"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_test;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_check"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_check;
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("24%: Finished test case \"from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only\"");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only");
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_check
{
  classes:
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_kept.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_repaired.from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok::
      "FAILED: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok::
      "PASS: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only";
  commands:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_failed";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_kept";
    from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_repaired";
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file
{
  methods:
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_start_msg"
        usebundle => log_test_case("24%: Starting test case \"from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file\"");
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_init"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_init;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_test"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_test;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_check"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_check;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_finish_msg"
        usebundle => log_test_case("24%: Finished test case \"from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file\"");
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file");
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , classes => classes_generic("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class")
      ;
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_check
{
  classes:
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___correct_classes"
        expression => "!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_kept.from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_repaired.!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok::
      "FAILED: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file";
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok::
      "PASS: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file";
  commands:
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_failed::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_failed";
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_kept";
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_repaired::
      "Class was not set, but should be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_repaired";
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only
{
  methods:
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_start_msg"
        usebundle => log_test_case("25%: Starting test case \"from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only\"");
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_init"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_init;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_test"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_test;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_check"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_check;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_finish_msg"
        usebundle => log_test_case("25%: Finished test case \"from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only\"");
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only");
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , action => warn_only
      , classes => classes_generic("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class")
      ;
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_check
{
  classes:
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___correct_classes"
        expression => "!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_kept.!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_repaired.from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_ok::
      "FAILED: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only";
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_ok::
      "PASS: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only";
  commands:
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_failed";
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_kept";
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_repaired";
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit
{
  methods:
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_start_msg"
        usebundle => log_test_case("25%: Starting test case \"from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit\"");
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_init"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_init;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_test"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_test;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_check"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_check;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_finish_msg"
        usebundle => log_test_case("25%: Finished test case \"from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit\"");
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit");
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class")
      ;
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_check
{
  classes:
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___correct_classes"
        expression => "!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_kept.from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_repaired.!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok::
      "FAILED: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit";
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok::
      "PASS: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit";
  commands:
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_failed::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_failed";
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_kept";
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_repaired::
      "Class was not set, but should be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_repaired";
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only
{
  methods:
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_start_msg"
        usebundle => log_test_case("25%: Starting test case \"from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only\"");
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_init"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_init;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_test"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_test;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_check"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_check;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_finish_msg"
        usebundle => log_test_case("25%: Finished test case \"from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only\"");
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only");
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , action => warn_only
      , classes => classes_generic("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class")
      ;
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_check
{
  classes:
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___correct_classes"
        expression => "!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_kept.!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_repaired.from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_ok::
      "FAILED: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only";
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_ok::
      "PASS: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only";
  commands:
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_failed";
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_kept";
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_repaired";
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1
{
  methods:
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_start_msg"
        usebundle => log_test_case("25%: Starting test case \"from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1\"");
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_init"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_init;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_test"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_test;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_check"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_check;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_finish_msg"
        usebundle => log_test_case("25%: Finished test case \"from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1\"");
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1");
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class")
      ;
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_check
{
  classes:
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___correct_classes"
        expression => "!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_kept.from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_repaired.!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok::
      "FAILED: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1";
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok::
      "PASS: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1";
  commands:
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_failed::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_failed";
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_kept";
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_repaired::
      "Class was not set, but should be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_repaired";
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only
{
  methods:
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_start_msg"
        usebundle => log_test_case("26%: Starting test case \"from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only\"");
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_init"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_init;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_test"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_test;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_check"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_check;
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_finish_msg"
        usebundle => log_test_case("26%: Finished test case \"from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only\"");
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only");
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class")
      ;
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_check
{
  classes:
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___correct_classes"
        expression => "!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_kept.!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_repaired.from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_ok::
      "FAILED: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only";
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_ok::
      "PASS: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only";
  commands:
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_failed";
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_kept";
    from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_repaired";
}

bundle agent from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file
{
  methods:
      "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_start_msg"
        usebundle => log_test_case("26%: Starting test case \"from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file\"");
      "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_init"
        usebundle => from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_init;
      "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_test"
        usebundle => from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_test;
      "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_check"
        usebundle => from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_check;
      "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_finish_msg"
        usebundle => log_test_case("26%: Finished test case \"from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file\"");
}

bundle agent from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file");
}

bundle agent from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class")
      ;
}

bundle agent from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_check
{
  classes:
      "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        expression => "!from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_kept.from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_repaired.!from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok::
      "FAILED: from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file";
    from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok::
      "PASS: from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file";
  commands:
    !from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_failed";
    from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_kept";
    !from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_repaired::
      "Class was not set, but should be: from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_repaired";
}

bundle agent from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only
{
  methods:
      "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_start_msg"
        usebundle => log_test_case("26%: Starting test case \"from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only\"");
      "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_init"
        usebundle => from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_init;
      "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_test"
        usebundle => from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_test;
      "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_check"
        usebundle => from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_check;
      "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_finish_msg"
        usebundle => log_test_case("26%: Finished test case \"from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only\"");
}

bundle agent from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only");
}

bundle agent from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class")
      ;
}

bundle agent from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_check
{
  classes:
      "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___correct_classes"
        expression => "!from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept.!from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired.from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "FAILED: from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only";
    from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "PASS: from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only";
  commands:
    !from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed";
    from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept";
    from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired";
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo
{
  methods:
      "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_start_msg"
        usebundle => log_test_case("26%: Starting test case \"from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo\"");
      "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init;
      "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test;
      "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check;
      "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_finish_msg"
        usebundle => log_test_case("26%: Finished test case \"from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo\"");
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class")
      ;
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check
{
  classes:
      "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___correct_classes"
        expression => "!from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept.from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired.!from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "FAILED: from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo";
    from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "PASS: from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo";
  commands:
    !from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed";
    from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept";
    !from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired::
      "Class was not set, but should be: from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired";
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only
{
  methods:
      "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_start_msg"
        usebundle => log_test_case("27%: Starting test case \"from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only\"");
      "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_init"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_init;
      "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_test"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_test;
      "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_check"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_check;
      "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("27%: Finished test case \"from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only\"");
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only");
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class")
      ;
}

bundle agent from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_check
{
  classes:
      "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___correct_classes"
        expression => "!from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_kept.!from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_repaired.from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok::
      "FAILED: from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only";
    from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok::
      "PASS: from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only";
  commands:
    !from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_failed";
    from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_kept";
    from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_start_msg"
        usebundle => log_test_case("27%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_finish_msg"
        usebundle => log_test_case("27%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_kept.from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit";
    from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_failed";
    from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_kept";
    !from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_repaired::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only_start_msg"
        usebundle => log_test_case("27%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only_finish_msg"
        usebundle => log_test_case("27%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only___class_repaired.from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only";
    from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only___class_failed";
    from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_start_msg"
        usebundle => log_test_case("28%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_finish_msg"
        usebundle => log_test_case("28%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_kept.from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit";
    from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_failed";
    from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_kept";
    !from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_repaired::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only_start_msg"
        usebundle => log_test_case("28%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only_finish_msg"
        usebundle => log_test_case("28%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only___class_repaired.from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only";
    from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only___class_failed";
    from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent
{
  methods:
      "from_32_bit_2_to_absent___promise_policy_absent_start_msg"
        usebundle => log_test_case("28%: Starting test case \"from_32_bit_2_to_absent___promise_policy_absent\"");
      "from_32_bit_2_to_absent___promise_policy_absent_init"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_init;
      "from_32_bit_2_to_absent___promise_policy_absent_test"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_test;
      "from_32_bit_2_to_absent___promise_policy_absent_check"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_check;
      "from_32_bit_2_to_absent___promise_policy_absent_finish_msg"
        usebundle => log_test_case("28%: Finished test case \"from_32_bit_2_to_absent___promise_policy_absent\"");
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_absent___promise_policy_absent");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_absent___promise_policy_absent");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_absent___promise_policy_absent");
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , classes => classes_generic("from_32_bit_2_to_absent___promise_policy_absent___class")
      ;
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_check
{
  classes:
      "from_32_bit_2_to_absent___promise_policy_absent___correct_classes"
        expression => "!from_32_bit_2_to_absent___promise_policy_absent___class_kept.from_32_bit_2_to_absent___promise_policy_absent___class_repaired.!from_32_bit_2_to_absent___promise_policy_absent___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_absent___promise_policy_absent_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_absent___promise_policy_absent___correct_classes"
        };

  reports:
    !from_32_bit_2_to_absent___promise_policy_absent_ok::
      "FAILED: from_32_bit_2_to_absent___promise_policy_absent";
    from_32_bit_2_to_absent___promise_policy_absent_ok::
      "PASS: from_32_bit_2_to_absent___promise_policy_absent";
  commands:
    !from_32_bit_2_to_absent___promise_policy_absent_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_absent___promise_policy_absent___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_absent___promise_policy_absent___class_failed";
    from_32_bit_2_to_absent___promise_policy_absent___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_absent___promise_policy_absent___class_kept";
    !from_32_bit_2_to_absent___promise_policy_absent___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_absent___promise_policy_absent___class_repaired";
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_warn_only
{
  methods:
      "from_32_bit_2_to_absent___promise_policy_absent_warn_only_start_msg"
        usebundle => log_test_case("28%: Starting test case \"from_32_bit_2_to_absent___promise_policy_absent_warn_only\"");
      "from_32_bit_2_to_absent___promise_policy_absent_warn_only_init"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_warn_only_init;
      "from_32_bit_2_to_absent___promise_policy_absent_warn_only_test"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_warn_only_test;
      "from_32_bit_2_to_absent___promise_policy_absent_warn_only_check"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_warn_only_check;
      "from_32_bit_2_to_absent___promise_policy_absent_warn_only_finish_msg"
        usebundle => log_test_case("28%: Finished test case \"from_32_bit_2_to_absent___promise_policy_absent_warn_only\"");
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_absent___promise_policy_absent_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_absent___promise_policy_absent_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_absent___promise_policy_absent_warn_only");
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_absent___promise_policy_absent_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_warn_only_check
{
  classes:
      "from_32_bit_2_to_absent___promise_policy_absent_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_absent___promise_policy_absent_warn_only___class_kept.!from_32_bit_2_to_absent___promise_policy_absent_warn_only___class_repaired.from_32_bit_2_to_absent___promise_policy_absent_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_absent___promise_policy_absent_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_absent___promise_policy_absent_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_absent___promise_policy_absent_warn_only_ok::
      "FAILED: from_32_bit_2_to_absent___promise_policy_absent_warn_only";
    from_32_bit_2_to_absent___promise_policy_absent_warn_only_ok::
      "PASS: from_32_bit_2_to_absent___promise_policy_absent_warn_only";
  commands:
    !from_32_bit_2_to_absent___promise_policy_absent_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_absent___promise_policy_absent_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_absent___promise_policy_absent_warn_only___class_failed";
    from_32_bit_2_to_absent___promise_policy_absent_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_absent___promise_policy_absent_warn_only___class_kept";
    from_32_bit_2_to_absent___promise_policy_absent_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_absent___promise_policy_absent_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit
{
  methods:
      "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_start_msg"
        usebundle => log_test_case("29%: Starting test case \"from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit\"");
      "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_init"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_init;
      "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_test"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_test;
      "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_check"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_check;
      "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_finish_msg"
        usebundle => log_test_case("29%: Finished test case \"from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit\"");
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit");
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit___class")
      ;
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_check
{
  classes:
      "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit___correct_classes"
        expression => "!from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit___class_kept.from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit___class_repaired.!from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit___correct_classes"
        };

  reports:
    !from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_ok::
      "FAILED: from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit";
    from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_ok::
      "PASS: from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit";
  commands:
    !from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit___class_failed";
    from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit___class_kept";
    !from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit___class_repaired";
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only
{
  methods:
      "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only_start_msg"
        usebundle => log_test_case("29%: Starting test case \"from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only\"");
      "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only_init"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only_init;
      "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only_test"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only_test;
      "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only_check"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only_check;
      "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only_finish_msg"
        usebundle => log_test_case("29%: Finished test case \"from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only\"");
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only");
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only_check
{
  classes:
      "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_kept.!from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_repaired.from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only_ok::
      "FAILED: from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only";
    from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only_ok::
      "PASS: from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only";
  commands:
    !from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_failed";
    from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_kept";
    from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_version_2
{
  methods:
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_start_msg"
        usebundle => log_test_case("29%: Starting test case \"from_32_bit_2_to_absent___promise_policy_absent_version_2\"");
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_init"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_version_2_init;
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_test"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_version_2_test;
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_check"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_version_2_check;
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_finish_msg"
        usebundle => log_test_case("29%: Finished test case \"from_32_bit_2_to_absent___promise_policy_absent_version_2\"");
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_absent___promise_policy_absent_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_absent___promise_policy_absent_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_absent___promise_policy_absent_version_2");
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_version_2_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_2_to_absent___promise_policy_absent_version_2___class")
      ;
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_version_2_check
{
  classes:
      "from_32_bit_2_to_absent___promise_policy_absent_version_2___correct_classes"
        expression => "!from_32_bit_2_to_absent___promise_policy_absent_version_2___class_kept.from_32_bit_2_to_absent___promise_policy_absent_version_2___class_repaired.!from_32_bit_2_to_absent___promise_policy_absent_version_2___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_absent___promise_policy_absent_version_2___correct_classes"
        };

  reports:
    !from_32_bit_2_to_absent___promise_policy_absent_version_2_ok::
      "FAILED: from_32_bit_2_to_absent___promise_policy_absent_version_2";
    from_32_bit_2_to_absent___promise_policy_absent_version_2_ok::
      "PASS: from_32_bit_2_to_absent___promise_policy_absent_version_2";
  commands:
    !from_32_bit_2_to_absent___promise_policy_absent_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_absent___promise_policy_absent_version_2___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_absent___promise_policy_absent_version_2___class_failed";
    from_32_bit_2_to_absent___promise_policy_absent_version_2___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_absent___promise_policy_absent_version_2___class_kept";
    !from_32_bit_2_to_absent___promise_policy_absent_version_2___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_absent___promise_policy_absent_version_2___class_repaired";
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only
{
  methods:
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_start_msg"
        usebundle => log_test_case("30%: Starting test case \"from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only\"");
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_init"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_init;
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_test"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_test;
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_check"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_check;
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_finish_msg"
        usebundle => log_test_case("30%: Finished test case \"from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only\"");
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only");
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_check
{
  classes:
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_kept.!from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_repaired.from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_ok::
      "FAILED: from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only";
    from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_ok::
      "PASS: from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only";
  commands:
    !from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_failed";
    from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_kept";
    from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit
{
  methods:
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_start_msg"
        usebundle => log_test_case("30%: Starting test case \"from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit\"");
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_init"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_init;
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_test"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_test;
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_check"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_check;
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_finish_msg"
        usebundle => log_test_case("30%: Finished test case \"from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit\"");
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit");
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit___class")
      ;
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_check
{
  classes:
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit___correct_classes"
        expression => "!from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit___class_kept.from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit___class_repaired.!from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit___correct_classes"
        };

  reports:
    !from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_ok::
      "FAILED: from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit";
    from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_ok::
      "PASS: from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit";
  commands:
    !from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit___class_failed";
    from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit___class_kept";
    !from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit___class_repaired";
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only
{
  methods:
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only_start_msg"
        usebundle => log_test_case("30%: Starting test case \"from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only\"");
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only_init"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only_init;
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only_test"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only_test;
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only_check"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only_check;
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only_finish_msg"
        usebundle => log_test_case("30%: Finished test case \"from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only\"");
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only");
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only_check
{
  classes:
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only___class_kept.!from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only___class_repaired.from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only_ok::
      "FAILED: from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only";
    from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only_ok::
      "PASS: from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only";
  commands:
    !from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only___class_failed";
    from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only___class_kept";
    from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent
{
  methods:
      "from_64_bit_1_to_absent___promise_policy_absent_start_msg"
        usebundle => log_test_case("30%: Starting test case \"from_64_bit_1_to_absent___promise_policy_absent\"");
      "from_64_bit_1_to_absent___promise_policy_absent_init"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_init;
      "from_64_bit_1_to_absent___promise_policy_absent_test"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_test;
      "from_64_bit_1_to_absent___promise_policy_absent_check"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_check;
      "from_64_bit_1_to_absent___promise_policy_absent_finish_msg"
        usebundle => log_test_case("30%: Finished test case \"from_64_bit_1_to_absent___promise_policy_absent\"");
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_absent___promise_policy_absent");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_absent___promise_policy_absent");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_absent___promise_policy_absent");
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , classes => classes_generic("from_64_bit_1_to_absent___promise_policy_absent___class")
      ;
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_check
{
  classes:
      "from_64_bit_1_to_absent___promise_policy_absent___correct_classes"
        expression => "!from_64_bit_1_to_absent___promise_policy_absent___class_kept.from_64_bit_1_to_absent___promise_policy_absent___class_repaired.!from_64_bit_1_to_absent___promise_policy_absent___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_absent___promise_policy_absent_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_absent___promise_policy_absent___correct_classes"
        };

  reports:
    !from_64_bit_1_to_absent___promise_policy_absent_ok::
      "FAILED: from_64_bit_1_to_absent___promise_policy_absent";
    from_64_bit_1_to_absent___promise_policy_absent_ok::
      "PASS: from_64_bit_1_to_absent___promise_policy_absent";
  commands:
    !from_64_bit_1_to_absent___promise_policy_absent_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_absent___promise_policy_absent___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_absent___promise_policy_absent___class_failed";
    from_64_bit_1_to_absent___promise_policy_absent___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_absent___promise_policy_absent___class_kept";
    !from_64_bit_1_to_absent___promise_policy_absent___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_absent___promise_policy_absent___class_repaired";
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_warn_only
{
  methods:
      "from_64_bit_1_to_absent___promise_policy_absent_warn_only_start_msg"
        usebundle => log_test_case("31%: Starting test case \"from_64_bit_1_to_absent___promise_policy_absent_warn_only\"");
      "from_64_bit_1_to_absent___promise_policy_absent_warn_only_init"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_warn_only_init;
      "from_64_bit_1_to_absent___promise_policy_absent_warn_only_test"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_warn_only_test;
      "from_64_bit_1_to_absent___promise_policy_absent_warn_only_check"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_warn_only_check;
      "from_64_bit_1_to_absent___promise_policy_absent_warn_only_finish_msg"
        usebundle => log_test_case("31%: Finished test case \"from_64_bit_1_to_absent___promise_policy_absent_warn_only\"");
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_absent___promise_policy_absent_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_absent___promise_policy_absent_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_absent___promise_policy_absent_warn_only");
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_absent___promise_policy_absent_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_warn_only_check
{
  classes:
      "from_64_bit_1_to_absent___promise_policy_absent_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_absent___promise_policy_absent_warn_only___class_kept.!from_64_bit_1_to_absent___promise_policy_absent_warn_only___class_repaired.from_64_bit_1_to_absent___promise_policy_absent_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_absent___promise_policy_absent_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_absent___promise_policy_absent_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_absent___promise_policy_absent_warn_only_ok::
      "FAILED: from_64_bit_1_to_absent___promise_policy_absent_warn_only";
    from_64_bit_1_to_absent___promise_policy_absent_warn_only_ok::
      "PASS: from_64_bit_1_to_absent___promise_policy_absent_warn_only";
  commands:
    !from_64_bit_1_to_absent___promise_policy_absent_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_absent___promise_policy_absent_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_absent___promise_policy_absent_warn_only___class_failed";
    from_64_bit_1_to_absent___promise_policy_absent_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_absent___promise_policy_absent_warn_only___class_kept";
    from_64_bit_1_to_absent___promise_policy_absent_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_absent___promise_policy_absent_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit
{
  methods:
      "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_start_msg"
        usebundle => log_test_case("31%: Starting test case \"from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit\"");
      "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_init"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_init;
      "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_test"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_test;
      "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_check"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_check;
      "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_finish_msg"
        usebundle => log_test_case("31%: Finished test case \"from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit\"");
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit");
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_check
{
  classes:
      "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit___correct_classes"
        expression => "!from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit___class_kept.from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit___class_repaired.!from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_ok::
      "FAILED: from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit";
    from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_ok::
      "PASS: from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit";
  commands:
    !from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit___class_failed";
    from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit___class_kept";
    !from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only
{
  methods:
      "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only_start_msg"
        usebundle => log_test_case("31%: Starting test case \"from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only\"");
      "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only_init"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only_init;
      "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only_test"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only_test;
      "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only_check"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only_check;
      "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only_finish_msg"
        usebundle => log_test_case("31%: Finished test case \"from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only\"");
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only");
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only_check
{
  classes:
      "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_kept.!from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_repaired.from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only_ok::
      "FAILED: from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only";
    from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only_ok::
      "PASS: from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only";
  commands:
    !from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_failed";
    from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_kept";
    from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_version_1
{
  methods:
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_start_msg"
        usebundle => log_test_case("32%: Starting test case \"from_64_bit_1_to_absent___promise_policy_absent_version_1\"");
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_init"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_version_1_init;
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_test"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_version_1_test;
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_check"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_version_1_check;
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_finish_msg"
        usebundle => log_test_case("32%: Finished test case \"from_64_bit_1_to_absent___promise_policy_absent_version_1\"");
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_absent___promise_policy_absent_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_absent___promise_policy_absent_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_absent___promise_policy_absent_version_1");
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_version_1_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_to_absent___promise_policy_absent_version_1___class")
      ;
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_version_1_check
{
  classes:
      "from_64_bit_1_to_absent___promise_policy_absent_version_1___correct_classes"
        expression => "!from_64_bit_1_to_absent___promise_policy_absent_version_1___class_kept.from_64_bit_1_to_absent___promise_policy_absent_version_1___class_repaired.!from_64_bit_1_to_absent___promise_policy_absent_version_1___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_absent___promise_policy_absent_version_1___correct_classes"
        };

  reports:
    !from_64_bit_1_to_absent___promise_policy_absent_version_1_ok::
      "FAILED: from_64_bit_1_to_absent___promise_policy_absent_version_1";
    from_64_bit_1_to_absent___promise_policy_absent_version_1_ok::
      "PASS: from_64_bit_1_to_absent___promise_policy_absent_version_1";
  commands:
    !from_64_bit_1_to_absent___promise_policy_absent_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_absent___promise_policy_absent_version_1___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_absent___promise_policy_absent_version_1___class_failed";
    from_64_bit_1_to_absent___promise_policy_absent_version_1___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_absent___promise_policy_absent_version_1___class_kept";
    !from_64_bit_1_to_absent___promise_policy_absent_version_1___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_absent___promise_policy_absent_version_1___class_repaired";
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only
{
  methods:
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only_start_msg"
        usebundle => log_test_case("32%: Starting test case \"from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only\"");
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only_init"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only_init;
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only_test"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only_test;
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only_check"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only_check;
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only_finish_msg"
        usebundle => log_test_case("32%: Finished test case \"from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only\"");
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only");
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only_check
{
  classes:
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_kept.!from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_repaired.from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only_ok::
      "FAILED: from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only";
    from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only_ok::
      "PASS: from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only";
  commands:
    !from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_failed";
    from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_kept";
    from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit
{
  methods:
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_start_msg"
        usebundle => log_test_case("32%: Starting test case \"from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit\"");
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_init"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_init;
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_test"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_test;
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_check"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_check;
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_finish_msg"
        usebundle => log_test_case("32%: Finished test case \"from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit\"");
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit");
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_check
{
  classes:
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit___correct_classes"
        expression => "!from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit___class_kept.from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit___class_repaired.!from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_ok::
      "FAILED: from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit";
    from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_ok::
      "PASS: from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit";
  commands:
    !from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit___class_failed";
    from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit___class_kept";
    !from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only
{
  methods:
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only_start_msg"
        usebundle => log_test_case("32%: Starting test case \"from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only\"");
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only_init"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only_init;
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only_test"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only_test;
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only_check"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only_check;
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only_finish_msg"
        usebundle => log_test_case("32%: Finished test case \"from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only\"");
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only");
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only_check
{
  classes:
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only___class_kept.!from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only___class_repaired.from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only_ok::
      "FAILED: from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only";
    from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only_ok::
      "PASS: from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only";
  commands:
    !from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only___class_failed";
    from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only___class_kept";
    from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit
{
  methods:
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_start_msg"
        usebundle => log_test_case("33%: Starting test case \"from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit\"");
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_init"
        usebundle => from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_init;
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_test"
        usebundle => from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_test;
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_check"
        usebundle => from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_check;
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_finish_msg"
        usebundle => log_test_case("33%: Finished test case \"from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit\"");
}

bundle agent from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit");
}

bundle agent from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_kept.from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_repaired.!from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit";
    from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_ok::
      "PASS: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit";
  commands:
    !from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_failed";
    from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_kept";
    !from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_repaired::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only
{
  methods:
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only_start_msg"
        usebundle => log_test_case("33%: Starting test case \"from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only\"");
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only_init"
        usebundle => from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only_init;
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only_test"
        usebundle => from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only_test;
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only_check"
        usebundle => from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only_check;
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only_finish_msg"
        usebundle => log_test_case("33%: Finished test case \"from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only\"");
}

bundle agent from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only");
}

bundle agent from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only___class_kept.!from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only___class_repaired.from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only";
    from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only_ok::
      "PASS: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only";
  commands:
    !from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only___class_failed";
    from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only___class_kept";
    from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit
{
  methods:
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_start_msg"
        usebundle => log_test_case("33%: Starting test case \"from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit\"");
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_init"
        usebundle => from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_init;
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_test"
        usebundle => from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_test;
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_check"
        usebundle => from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_check;
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_finish_msg"
        usebundle => log_test_case("33%: Finished test case \"from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit\"");
}

bundle agent from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit");
}

bundle agent from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_kept.from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_repaired.!from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit";
    from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_ok::
      "PASS: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit";
  commands:
    !from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_failed";
    from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_kept";
    !from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_repaired::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only
{
  methods:
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only_start_msg"
        usebundle => log_test_case("34%: Starting test case \"from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only\"");
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only_init"
        usebundle => from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only_init;
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only_test"
        usebundle => from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only_test;
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only_check"
        usebundle => from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only_check;
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only_finish_msg"
        usebundle => log_test_case("34%: Finished test case \"from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only\"");
}

bundle agent from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only");
}

bundle agent from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only___class_kept.!from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only___class_repaired.from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only";
    from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only_ok::
      "PASS: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only";
  commands:
    !from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only___class_failed";
    from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only___class_kept";
    from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent
{
  methods:
      "from_32_bit_1_to_absent___promise_policy_absent_start_msg"
        usebundle => log_test_case("34%: Starting test case \"from_32_bit_1_to_absent___promise_policy_absent\"");
      "from_32_bit_1_to_absent___promise_policy_absent_init"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_init;
      "from_32_bit_1_to_absent___promise_policy_absent_test"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_test;
      "from_32_bit_1_to_absent___promise_policy_absent_check"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_check;
      "from_32_bit_1_to_absent___promise_policy_absent_finish_msg"
        usebundle => log_test_case("34%: Finished test case \"from_32_bit_1_to_absent___promise_policy_absent\"");
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_absent___promise_policy_absent");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_absent___promise_policy_absent");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_absent___promise_policy_absent");
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , classes => classes_generic("from_32_bit_1_to_absent___promise_policy_absent___class")
      ;
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_check
{
  classes:
      "from_32_bit_1_to_absent___promise_policy_absent___correct_classes"
        expression => "!from_32_bit_1_to_absent___promise_policy_absent___class_kept.from_32_bit_1_to_absent___promise_policy_absent___class_repaired.!from_32_bit_1_to_absent___promise_policy_absent___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_absent___promise_policy_absent_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_absent___promise_policy_absent___correct_classes"
        };

  reports:
    !from_32_bit_1_to_absent___promise_policy_absent_ok::
      "FAILED: from_32_bit_1_to_absent___promise_policy_absent";
    from_32_bit_1_to_absent___promise_policy_absent_ok::
      "PASS: from_32_bit_1_to_absent___promise_policy_absent";
  commands:
    !from_32_bit_1_to_absent___promise_policy_absent_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_absent___promise_policy_absent___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_absent___promise_policy_absent___class_failed";
    from_32_bit_1_to_absent___promise_policy_absent___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_absent___promise_policy_absent___class_kept";
    !from_32_bit_1_to_absent___promise_policy_absent___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_absent___promise_policy_absent___class_repaired";
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_warn_only
{
  methods:
      "from_32_bit_1_to_absent___promise_policy_absent_warn_only_start_msg"
        usebundle => log_test_case("34%: Starting test case \"from_32_bit_1_to_absent___promise_policy_absent_warn_only\"");
      "from_32_bit_1_to_absent___promise_policy_absent_warn_only_init"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_warn_only_init;
      "from_32_bit_1_to_absent___promise_policy_absent_warn_only_test"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_warn_only_test;
      "from_32_bit_1_to_absent___promise_policy_absent_warn_only_check"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_warn_only_check;
      "from_32_bit_1_to_absent___promise_policy_absent_warn_only_finish_msg"
        usebundle => log_test_case("34%: Finished test case \"from_32_bit_1_to_absent___promise_policy_absent_warn_only\"");
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_absent___promise_policy_absent_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_absent___promise_policy_absent_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_absent___promise_policy_absent_warn_only");
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_absent___promise_policy_absent_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_warn_only_check
{
  classes:
      "from_32_bit_1_to_absent___promise_policy_absent_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_absent___promise_policy_absent_warn_only___class_kept.!from_32_bit_1_to_absent___promise_policy_absent_warn_only___class_repaired.from_32_bit_1_to_absent___promise_policy_absent_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_absent___promise_policy_absent_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_absent___promise_policy_absent_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_absent___promise_policy_absent_warn_only_ok::
      "FAILED: from_32_bit_1_to_absent___promise_policy_absent_warn_only";
    from_32_bit_1_to_absent___promise_policy_absent_warn_only_ok::
      "PASS: from_32_bit_1_to_absent___promise_policy_absent_warn_only";
  commands:
    !from_32_bit_1_to_absent___promise_policy_absent_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_absent___promise_policy_absent_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_absent___promise_policy_absent_warn_only___class_failed";
    from_32_bit_1_to_absent___promise_policy_absent_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_absent___promise_policy_absent_warn_only___class_kept";
    from_32_bit_1_to_absent___promise_policy_absent_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_absent___promise_policy_absent_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit
{
  methods:
      "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_start_msg"
        usebundle => log_test_case("34%: Starting test case \"from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit\"");
      "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_init"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_init;
      "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_test"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_test;
      "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_check"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_check;
      "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_finish_msg"
        usebundle => log_test_case("34%: Finished test case \"from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit\"");
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit");
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit___class")
      ;
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_check
{
  classes:
      "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit___correct_classes"
        expression => "!from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit___class_kept.from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit___class_repaired.!from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit___correct_classes"
        };

  reports:
    !from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_ok::
      "FAILED: from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit";
    from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_ok::
      "PASS: from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit";
  commands:
    !from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit___class_failed";
    from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit___class_kept";
    !from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit___class_repaired";
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only
{
  methods:
      "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only_start_msg"
        usebundle => log_test_case("35%: Starting test case \"from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only\"");
      "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only_init"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only_init;
      "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only_test"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only_test;
      "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only_check"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only_check;
      "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only_finish_msg"
        usebundle => log_test_case("35%: Finished test case \"from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only\"");
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only");
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only_check
{
  classes:
      "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_kept.!from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_repaired.from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only_ok::
      "FAILED: from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only";
    from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only_ok::
      "PASS: from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only";
  commands:
    !from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_failed";
    from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_kept";
    from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_version_1
{
  methods:
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_start_msg"
        usebundle => log_test_case("35%: Starting test case \"from_32_bit_1_to_absent___promise_policy_absent_version_1\"");
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_init"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_version_1_init;
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_test"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_version_1_test;
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_check"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_version_1_check;
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_finish_msg"
        usebundle => log_test_case("35%: Finished test case \"from_32_bit_1_to_absent___promise_policy_absent_version_1\"");
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_absent___promise_policy_absent_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_absent___promise_policy_absent_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_absent___promise_policy_absent_version_1");
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_version_1_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_1_to_absent___promise_policy_absent_version_1___class")
      ;
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_version_1_check
{
  classes:
      "from_32_bit_1_to_absent___promise_policy_absent_version_1___correct_classes"
        expression => "!from_32_bit_1_to_absent___promise_policy_absent_version_1___class_kept.from_32_bit_1_to_absent___promise_policy_absent_version_1___class_repaired.!from_32_bit_1_to_absent___promise_policy_absent_version_1___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_absent___promise_policy_absent_version_1___correct_classes"
        };

  reports:
    !from_32_bit_1_to_absent___promise_policy_absent_version_1_ok::
      "FAILED: from_32_bit_1_to_absent___promise_policy_absent_version_1";
    from_32_bit_1_to_absent___promise_policy_absent_version_1_ok::
      "PASS: from_32_bit_1_to_absent___promise_policy_absent_version_1";
  commands:
    !from_32_bit_1_to_absent___promise_policy_absent_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_absent___promise_policy_absent_version_1___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_absent___promise_policy_absent_version_1___class_failed";
    from_32_bit_1_to_absent___promise_policy_absent_version_1___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_absent___promise_policy_absent_version_1___class_kept";
    !from_32_bit_1_to_absent___promise_policy_absent_version_1___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_absent___promise_policy_absent_version_1___class_repaired";
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only
{
  methods:
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_start_msg"
        usebundle => log_test_case("35%: Starting test case \"from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only\"");
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_init"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_init;
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_test"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_test;
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_check"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_check;
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_finish_msg"
        usebundle => log_test_case("35%: Finished test case \"from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only\"");
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only");
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_check
{
  classes:
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_kept.!from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_repaired.from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_ok::
      "FAILED: from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only";
    from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_ok::
      "PASS: from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only";
  commands:
    !from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_failed";
    from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_kept";
    from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit
{
  methods:
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_start_msg"
        usebundle => log_test_case("36%: Starting test case \"from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit\"");
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_init"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_init;
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_test"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_test;
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_check"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_check;
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_finish_msg"
        usebundle => log_test_case("36%: Finished test case \"from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit\"");
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit");
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit___class")
      ;
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_check
{
  classes:
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit___correct_classes"
        expression => "!from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit___class_kept.from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit___class_repaired.!from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit___correct_classes"
        };

  reports:
    !from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_ok::
      "FAILED: from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit";
    from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_ok::
      "PASS: from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit";
  commands:
    !from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit___class_failed";
    from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit___class_kept";
    !from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit___class_repaired";
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only
{
  methods:
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only_start_msg"
        usebundle => log_test_case("36%: Starting test case \"from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only\"");
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only_init"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only_init;
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only_test"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only_test;
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only_check"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only_check;
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only_finish_msg"
        usebundle => log_test_case("36%: Finished test case \"from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only\"");
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only");
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only_check
{
  classes:
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only___class_kept.!from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only___class_repaired.from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only_ok::
      "FAILED: from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only";
    from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only_ok::
      "PASS: from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only";
  commands:
    !from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only___class_failed";
    from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only___class_kept";
    from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_start_msg"
        usebundle => log_test_case("36%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_finish_msg"
        usebundle => log_test_case("36%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_start_msg"
        usebundle => log_test_case("36%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_finish_msg"
        usebundle => log_test_case("36%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_start_msg"
        usebundle => log_test_case("37%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_finish_msg"
        usebundle => log_test_case("37%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_start_msg"
        usebundle => log_test_case("37%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_finish_msg"
        usebundle => log_test_case("37%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_start_msg"
        usebundle => log_test_case("37%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_finish_msg"
        usebundle => log_test_case("37%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_start_msg"
        usebundle => log_test_case("38%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_finish_msg"
        usebundle => log_test_case("38%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_start_msg"
        usebundle => log_test_case("38%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_finish_msg"
        usebundle => log_test_case("38%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_start_msg"
        usebundle => log_test_case("38%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_finish_msg"
        usebundle => log_test_case("38%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo_start_msg"
        usebundle => log_test_case("38%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo_finish_msg"
        usebundle => log_test_case("38%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo_start_msg"
        usebundle => log_test_case("39%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo_finish_msg"
        usebundle => log_test_case("39%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo_start_msg"
        usebundle => log_test_case("39%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo_finish_msg"
        usebundle => log_test_case("39%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_start_msg"
        usebundle => log_test_case("39%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_finish_msg"
        usebundle => log_test_case("39%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_start_msg"
        usebundle => log_test_case("40%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_finish_msg"
        usebundle => log_test_case("40%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_start_msg"
        usebundle => log_test_case("40%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_finish_msg"
        usebundle => log_test_case("40%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_start_msg"
        usebundle => log_test_case("40%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_finish_msg"
        usebundle => log_test_case("40%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit_start_msg"
        usebundle => log_test_case("40%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit_finish_msg"
        usebundle => log_test_case("40%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit_start_msg"
        usebundle => log_test_case("41%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit\"");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit_init;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit_test;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit_check;
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit_finish_msg"
        usebundle => log_test_case("41%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit___correct_classes"
        expression => "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_failed";
    !from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_kept::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_start_msg"
        usebundle => log_test_case("41%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_finish_msg"
        usebundle => log_test_case("41%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_kept.from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit";
    from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_failed";
    from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_kept";
    !from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_repaired::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only_start_msg"
        usebundle => log_test_case("41%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only_finish_msg"
        usebundle => log_test_case("41%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only___class_repaired.from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only";
    from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only___class_failed";
    from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_start_msg"
        usebundle => log_test_case("42%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_finish_msg"
        usebundle => log_test_case("42%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_kept.from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit";
    from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_failed";
    from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_kept";
    !from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_repaired::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only_start_msg"
        usebundle => log_test_case("42%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only_finish_msg"
        usebundle => log_test_case("42%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only___class_repaired.from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only";
    from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only___class_failed";
    from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_start_msg"
        usebundle => log_test_case("42%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo\"");
      "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_init;
      "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_test;
      "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_check;
      "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_finish_msg"
        usebundle => log_test_case("42%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_kept.from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo";
    from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_failed";
    from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_kept";
    !from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_start_msg"
        usebundle => log_test_case("42%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only\"");
      "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_init;
      "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_test;
      "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_check;
      "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("42%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_repaired.from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only";
    from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_failed";
    from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_start_msg"
        usebundle => log_test_case("43%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file\"");
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_init;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_test;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_check;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_finish_msg"
        usebundle => log_test_case("43%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_kept.from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_repaired.!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file";
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_failed::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_kept";
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_repaired::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_start_msg"
        usebundle => log_test_case("43%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only\"");
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_init;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_test;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_check;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_finish_msg"
        usebundle => log_test_case("43%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , action => warn_only
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_kept.!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_repaired.from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only";
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_kept";
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_start_msg"
        usebundle => log_test_case("43%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit\"");
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_init;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_test;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_check;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_finish_msg"
        usebundle => log_test_case("43%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_kept.from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_repaired.!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit";
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_failed::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_kept";
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_repaired::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_start_msg"
        usebundle => log_test_case("44%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only\"");
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_init;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_test;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_check;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_finish_msg"
        usebundle => log_test_case("44%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , action => warn_only
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_kept.!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_repaired.from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only";
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_kept";
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_start_msg"
        usebundle => log_test_case("44%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2\"");
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_init;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_test;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_check;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_finish_msg"
        usebundle => log_test_case("44%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_kept.from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_repaired.!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2";
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_failed::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_kept";
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_repaired::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_start_msg"
        usebundle => log_test_case("44%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only\"");
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_init;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_test;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_check;
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_finish_msg"
        usebundle => log_test_case("44%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_kept.!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_repaired.from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only";
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_kept";
    from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file
{
  methods:
      "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_start_msg"
        usebundle => log_test_case("44%: Starting test case \"from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file\"");
      "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_init"
        usebundle => from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_init;
      "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_test"
        usebundle => from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_test;
      "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_check"
        usebundle => from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_check;
      "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_finish_msg"
        usebundle => log_test_case("44%: Finished test case \"from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file\"");
}

bundle agent from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file");
}

bundle agent from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_check
{
  classes:
      "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_kept.from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_repaired.!from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok::
      "FAILED: from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file";
    from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok::
      "PASS: from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file";
  commands:
    !from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_failed";
    from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_kept";
    !from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_repaired::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only
{
  methods:
      "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_start_msg"
        usebundle => log_test_case("45%: Starting test case \"from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only\"");
      "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_init"
        usebundle => from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_init;
      "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_test"
        usebundle => from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_test;
      "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_check"
        usebundle => from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_check;
      "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_finish_msg"
        usebundle => log_test_case("45%: Finished test case \"from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only\"");
}

bundle agent from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only");
}

bundle agent from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_check
{
  classes:
      "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept.!from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired.from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "FAILED: from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only";
    from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "PASS: from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only";
  commands:
    !from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed";
    from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept";
    from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_type_repo
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_type_repo_start_msg"
        usebundle => log_test_case("45%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_type_repo\"");
      "from_absent_to_64_bit_2___promise_policy_present_type_repo_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_type_repo_init;
      "from_absent_to_64_bit_2___promise_policy_present_type_repo_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_type_repo_test;
      "from_absent_to_64_bit_2___promise_policy_present_type_repo_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_type_repo_check;
      "from_absent_to_64_bit_2___promise_policy_present_type_repo_finish_msg"
        usebundle => log_test_case("45%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_type_repo\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_type_repo");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_type_repo___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_type_repo_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_type_repo___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_type_repo___class_kept.from_absent_to_64_bit_2___promise_policy_present_type_repo___class_repaired.!from_absent_to_64_bit_2___promise_policy_present_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_type_repo___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_type_repo_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_type_repo";
    from_absent_to_64_bit_2___promise_policy_present_type_repo_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_type_repo";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_64_bit_2___promise_policy_present_type_repo___class_failed::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_type_repo___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_type_repo___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_type_repo___class_kept";
    !from_absent_to_64_bit_2___promise_policy_present_type_repo___class_repaired::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_type_repo___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only_start_msg"
        usebundle => log_test_case("45%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only\"");
      "from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only_init;
      "from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only_test;
      "from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only_check;
      "from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("45%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , action => warn_only
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only___class_kept.!from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only___class_repaired.from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only";
    from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only___class_kept";
    from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_start_msg"
        usebundle => log_test_case("46%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo\"");
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_init;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_test;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_check;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_finish_msg"
        usebundle => log_test_case("46%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_kept.from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_repaired.!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo";
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_failed::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_kept";
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_repaired::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_start_msg"
        usebundle => log_test_case("46%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only\"");
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_init;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_test;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_check;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("46%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , action => warn_only
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_kept.!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_repaired.from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only";
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_kept";
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_start_msg"
        usebundle => log_test_case("46%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo\"");
      "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_init;
      "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_test;
      "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_check;
      "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_finish_msg"
        usebundle => log_test_case("46%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo___class_kept.from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo___class_repaired.!from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo";
    from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo___class_kept";
    !from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo___class_repaired::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_start_msg"
        usebundle => log_test_case("46%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only\"");
      "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_init;
      "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_test;
      "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_check;
      "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("46%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_kept.!from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_repaired.from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only";
    from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_kept";
    from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_start_msg"
        usebundle => log_test_case("47%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo\"");
      "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_init;
      "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_test;
      "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_check;
      "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("47%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "latest"
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_kept.from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_repaired.!from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo";
    from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_kept";
    !from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_repaired::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_start_msg"
        usebundle => log_test_case("47%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only\"");
      "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_init;
      "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_test;
      "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_check;
      "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("47%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "latest"
      , action => warn_only
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_kept.!from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_repaired.from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only";
    from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_kept";
    from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_start_msg"
        usebundle => log_test_case("47%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo\"");
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_finish_msg"
        usebundle => log_test_case("47%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept.from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired.!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo";
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept";
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_start_msg"
        usebundle => log_test_case("48%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only\"");
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_init;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_test;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_check;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("48%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_kept.!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_repaired.from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only";
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_kept";
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_start_msg"
        usebundle => log_test_case("48%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo\"");
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("48%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "latest"
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept.from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired.!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo";
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept";
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired";
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only
{
  methods:
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_start_msg"
        usebundle => log_test_case("48%: Starting test case \"from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only\"");
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_init"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_init;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_test"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_test;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_check"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_check;
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("48%: Finished test case \"from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only\"");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only");
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "latest"
      , action => warn_only
      , classes => classes_generic("from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class")
      ;
}

bundle agent from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_check
{
  classes:
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___correct_classes"
        expression => "!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_kept.!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_repaired.from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok::
      "FAILED: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only";
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok::
      "PASS: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only";
  commands:
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_failed";
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_kept";
    from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo
{
  methods:
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_start_msg"
        usebundle => log_test_case("48%: Starting test case \"from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo\"");
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_init"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_init;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_test"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_test;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_check"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_check;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_finish_msg"
        usebundle => log_test_case("48%: Finished test case \"from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo\"");
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo");
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class")
      ;
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_check
{
  classes:
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___correct_classes"
        expression => "!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_kept.from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_repaired.!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_ok::
      "FAILED: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo";
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_ok::
      "PASS: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo";
  commands:
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_failed";
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_kept";
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_repaired";
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only
{
  methods:
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_start_msg"
        usebundle => log_test_case("49%: Starting test case \"from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only\"");
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_init"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_init;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_test"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_test;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_check"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_check;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("49%: Finished test case \"from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only\"");
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only");
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_check
{
  classes:
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_kept.!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_repaired.from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_ok::
      "FAILED: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only";
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_ok::
      "PASS: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only";
  commands:
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_failed";
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_kept";
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo
{
  methods:
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_start_msg"
        usebundle => log_test_case("49%: Starting test case \"from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo\"");
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_finish_msg"
        usebundle => log_test_case("49%: Finished test case \"from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo\"");
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class")
      ;
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check
{
  classes:
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___correct_classes"
        expression => "!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept.from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired.!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "FAILED: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo";
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "PASS: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo";
  commands:
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed";
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept";
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired";
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only
{
  methods:
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_start_msg"
        usebundle => log_test_case("49%: Starting test case \"from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only\"");
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_init"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_init;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_test"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_test;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_check"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_check;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("49%: Finished test case \"from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only\"");
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only");
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_check
{
  classes:
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_kept.!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_repaired.from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok::
      "FAILED: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only";
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok::
      "PASS: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only";
  commands:
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_failed";
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_kept";
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo
{
  methods:
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_start_msg"
        usebundle => log_test_case("50%: Starting test case \"from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo\"");
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("50%: Finished test case \"from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo\"");
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "latest"
      , classes => classes_generic("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class")
      ;
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check
{
  classes:
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___correct_classes"
        expression => "!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept.from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired.!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "FAILED: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo";
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "PASS: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo";
  commands:
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed";
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept";
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired";
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only
{
  methods:
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_start_msg"
        usebundle => log_test_case("50%: Starting test case \"from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only\"");
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_init"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_init;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_test"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_test;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_check"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_check;
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("50%: Finished test case \"from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only\"");
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only");
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "latest"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_check
{
  classes:
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_kept.!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_repaired.from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok::
      "FAILED: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only";
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok::
      "PASS: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only";
  commands:
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_failed";
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_kept";
    from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file
{
  methods:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_start_msg"
        usebundle => log_test_case("50%: Starting test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file\"");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_init"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_init;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_test"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_test;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_check"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_check;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_finish_msg"
        usebundle => log_test_case("50%: Finished test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file\"");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , classes => classes_generic("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_check
{
  classes:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_kept.from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_repaired.!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok::
      "FAILED: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file";
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok::
      "PASS: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file";
  commands:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_failed";
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_kept";
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only
{
  methods:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_start_msg"
        usebundle => log_test_case("50%: Starting test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only\"");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_init"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_init;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_test"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_test;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_check"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_check;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_finish_msg"
        usebundle => log_test_case("50%: Finished test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only\"");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_check
{
  classes:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_kept.!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_repaired.from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_ok::
      "FAILED: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only";
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_ok::
      "PASS: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only";
  commands:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_failed";
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_kept";
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit
{
  methods:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_start_msg"
        usebundle => log_test_case("51%: Starting test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit\"");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_init"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_init;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_test"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_test;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_check"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_check;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_finish_msg"
        usebundle => log_test_case("51%: Finished test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit\"");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_check
{
  classes:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_kept.from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_repaired.!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok::
      "FAILED: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit";
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok::
      "PASS: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit";
  commands:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_failed";
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_kept";
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only
{
  methods:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_start_msg"
        usebundle => log_test_case("51%: Starting test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only\"");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_init"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_init;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_test"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_test;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_check"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_check;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_finish_msg"
        usebundle => log_test_case("51%: Finished test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only\"");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_check
{
  classes:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_kept.!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_repaired.from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_ok::
      "FAILED: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only";
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_ok::
      "PASS: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only";
  commands:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_failed";
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_kept";
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2
{
  methods:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_start_msg"
        usebundle => log_test_case("51%: Starting test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2\"");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_init"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_init;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_test"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_test;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_check"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_check;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_finish_msg"
        usebundle => log_test_case("51%: Finished test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2\"");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_check
{
  classes:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_kept.from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_repaired.!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok::
      "FAILED: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2";
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok::
      "PASS: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2";
  commands:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_failed";
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_kept";
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only
{
  methods:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_start_msg"
        usebundle => log_test_case("51%: Starting test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only\"");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_init"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_init;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_test"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_test;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_check"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_check;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_finish_msg"
        usebundle => log_test_case("51%: Finished test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only\"");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_check
{
  classes:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_kept.!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_repaired.from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_ok::
      "FAILED: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only";
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_ok::
      "PASS: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only";
  commands:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_failed";
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_kept";
    from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file
{
  methods:
      "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_start_msg"
        usebundle => log_test_case("52%: Starting test case \"from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file\"");
      "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_init"
        usebundle => from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_init;
      "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_test"
        usebundle => from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_test;
      "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_check"
        usebundle => from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_check;
      "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_finish_msg"
        usebundle => log_test_case("52%: Finished test case \"from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file\"");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_check
{
  classes:
      "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_kept.from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_repaired.!from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok::
      "FAILED: from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file";
    from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok::
      "PASS: from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file";
  commands:
    !from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_failed";
    from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_kept";
    !from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only
{
  methods:
      "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_start_msg"
        usebundle => log_test_case("52%: Starting test case \"from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only\"");
      "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_init"
        usebundle => from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_init;
      "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_test"
        usebundle => from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_test;
      "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_check"
        usebundle => from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_check;
      "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_finish_msg"
        usebundle => log_test_case("52%: Finished test case \"from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only\"");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_check
{
  classes:
      "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept.!from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired.from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "FAILED: from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only";
    from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "PASS: from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only";
  commands:
    !from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed";
    from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept";
    from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo
{
  methods:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_start_msg"
        usebundle => log_test_case("52%: Starting test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo\"");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_init"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_init;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_test"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_test;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_check"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_check;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_finish_msg"
        usebundle => log_test_case("52%: Finished test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo\"");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_check
{
  classes:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo___class_kept.from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo___class_repaired.!from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_ok::
      "FAILED: from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo";
    from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_ok::
      "PASS: from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo";
  commands:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo___class_failed";
    from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo___class_kept";
    !from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only
{
  methods:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_start_msg"
        usebundle => log_test_case("53%: Starting test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only\"");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_init"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_init;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_test"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_test;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_check"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_check;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("53%: Finished test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only\"");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_check
{
  classes:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_kept.!from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_repaired.from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok::
      "FAILED: from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only";
    from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok::
      "PASS: from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only";
  commands:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_failed";
    from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_kept";
    from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo
{
  methods:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_start_msg"
        usebundle => log_test_case("53%: Starting test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo\"");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_init"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_init;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_test"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_test;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_check"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_check;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("53%: Finished test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo\"");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "latest"
      , classes => classes_generic("from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_check
{
  classes:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_kept.from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_repaired.!from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "FAILED: from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo";
    from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "PASS: from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo";
  commands:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_failed";
    from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_kept";
    !from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only
{
  methods:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_start_msg"
        usebundle => log_test_case("53%: Starting test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only\"");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_init"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_init;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_test"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_test;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_check"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_check;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("53%: Finished test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only\"");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "latest"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_check
{
  classes:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_kept.!from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_repaired.from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok::
      "FAILED: from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only";
    from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok::
      "PASS: from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only";
  commands:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_failed";
    from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_kept";
    from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo
{
  methods:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_start_msg"
        usebundle => log_test_case("53%: Starting test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo\"");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_finish_msg"
        usebundle => log_test_case("53%: Finished test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo\"");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check
{
  classes:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept.from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired.!from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "FAILED: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo";
    from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "PASS: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo";
  commands:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed";
    from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept";
    !from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only
{
  methods:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_start_msg"
        usebundle => log_test_case("54%: Starting test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only\"");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_init"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_init;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_test"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_test;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_check"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_check;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("54%: Finished test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only\"");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_check
{
  classes:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_kept.!from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_repaired.from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok::
      "FAILED: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only";
    from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok::
      "PASS: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only";
  commands:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_failed";
    from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_kept";
    from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo
{
  methods:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_start_msg"
        usebundle => log_test_case("54%: Starting test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo\"");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("54%: Finished test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo\"");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "latest"
      , classes => classes_generic("from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check
{
  classes:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept.from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired.!from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "FAILED: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo";
    from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "PASS: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo";
  commands:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed";
    from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept";
    !from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only
{
  methods:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_start_msg"
        usebundle => log_test_case("54%: Starting test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only\"");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_init"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_init;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_test"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_test;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_check"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_check;
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("54%: Finished test case \"from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only\"");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only");
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "latest"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_check
{
  classes:
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_kept.!from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_repaired.from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok::
      "FAILED: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only";
    from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok::
      "PASS: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only";
  commands:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_failed";
    from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_kept";
    from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file
{
  methods:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_start_msg"
        usebundle => log_test_case("55%: Starting test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file\"");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_init"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_init;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_test"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_test;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_check"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_check;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_finish_msg"
        usebundle => log_test_case("55%: Finished test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file\"");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , classes => classes_generic("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_check
{
  classes:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___correct_classes"
        expression => "!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_kept.from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_repaired.!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok::
      "FAILED: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file";
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok::
      "PASS: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file";
  commands:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_failed";
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_kept";
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only
{
  methods:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_start_msg"
        usebundle => log_test_case("55%: Starting test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only\"");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_init"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_init;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_test"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_test;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_check"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_check;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_finish_msg"
        usebundle => log_test_case("55%: Finished test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only\"");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_check
{
  classes:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_kept.!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_repaired.from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_ok::
      "FAILED: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only";
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_ok::
      "PASS: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only";
  commands:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_failed";
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_kept";
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit
{
  methods:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_start_msg"
        usebundle => log_test_case("55%: Starting test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit\"");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_init"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_init;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_test"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_test;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_check"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_check;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_finish_msg"
        usebundle => log_test_case("55%: Finished test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit\"");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_check
{
  classes:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___correct_classes"
        expression => "!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_kept.from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_repaired.!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok::
      "FAILED: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit";
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok::
      "PASS: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit";
  commands:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_failed";
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_kept";
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only
{
  methods:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_start_msg"
        usebundle => log_test_case("55%: Starting test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only\"");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_init"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_init;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_test"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_test;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_check"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_check;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_finish_msg"
        usebundle => log_test_case("55%: Finished test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only\"");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_check
{
  classes:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_kept.!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_repaired.from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_ok::
      "FAILED: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only";
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_ok::
      "PASS: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only";
  commands:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_failed";
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_kept";
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2
{
  methods:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_start_msg"
        usebundle => log_test_case("56%: Starting test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2\"");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_init"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_init;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_test"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_test;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_check"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_check;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_finish_msg"
        usebundle => log_test_case("56%: Finished test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2\"");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_check
{
  classes:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___correct_classes"
        expression => "!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_kept.from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_repaired.!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok::
      "FAILED: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2";
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok::
      "PASS: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2";
  commands:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_failed";
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_kept";
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only
{
  methods:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_start_msg"
        usebundle => log_test_case("56%: Starting test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only\"");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_init"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_init;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_test"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_test;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_check"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_check;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_finish_msg"
        usebundle => log_test_case("56%: Finished test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only\"");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_check
{
  classes:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_kept.!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_repaired.from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_ok::
      "FAILED: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only";
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_ok::
      "PASS: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only";
  commands:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_failed";
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_kept";
    from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file
{
  methods:
      "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_start_msg"
        usebundle => log_test_case("56%: Starting test case \"from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file\"");
      "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_init"
        usebundle => from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_init;
      "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_test"
        usebundle => from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_test;
      "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_check"
        usebundle => from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_check;
      "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_finish_msg"
        usebundle => log_test_case("56%: Finished test case \"from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file\"");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_check
{
  classes:
      "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        expression => "!from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_kept.from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_repaired.!from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok::
      "FAILED: from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file";
    from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok::
      "PASS: from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file";
  commands:
    !from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_failed";
    from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_kept";
    !from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only
{
  methods:
      "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_start_msg"
        usebundle => log_test_case("57%: Starting test case \"from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only\"");
      "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_init"
        usebundle => from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_init;
      "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_test"
        usebundle => from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_test;
      "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_check"
        usebundle => from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_check;
      "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_finish_msg"
        usebundle => log_test_case("57%: Finished test case \"from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only\"");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_check
{
  classes:
      "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept.!from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired.from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "FAILED: from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only";
    from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "PASS: from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only";
  commands:
    !from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed";
    from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept";
    from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo
{
  methods:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_start_msg"
        usebundle => log_test_case("57%: Starting test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo\"");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_init"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_init;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_test"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_test;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_check"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_check;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_finish_msg"
        usebundle => log_test_case("57%: Finished test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo\"");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_check
{
  classes:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo___correct_classes"
        expression => "!from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo___class_kept.from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo___class_repaired.!from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_ok::
      "FAILED: from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo";
    from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_ok::
      "PASS: from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo";
  commands:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo___class_failed";
    from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo___class_kept";
    !from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only
{
  methods:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_start_msg"
        usebundle => log_test_case("57%: Starting test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only\"");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_init"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_init;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_test"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_test;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_check"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_check;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("57%: Finished test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only\"");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_check
{
  classes:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_kept.!from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_repaired.from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok::
      "FAILED: from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only";
    from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok::
      "PASS: from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only";
  commands:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_failed";
    from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_kept";
    from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo
{
  methods:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_start_msg"
        usebundle => log_test_case("57%: Starting test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo\"");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_init"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_init;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_test"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_test;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_check"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_check;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("57%: Finished test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo\"");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "latest"
      , classes => classes_generic("from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_check
{
  classes:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo___correct_classes"
        expression => "!from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_kept.from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_repaired.!from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "FAILED: from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo";
    from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "PASS: from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo";
  commands:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_failed";
    from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_kept";
    !from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only
{
  methods:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_start_msg"
        usebundle => log_test_case("58%: Starting test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only\"");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_init"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_init;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_test"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_test;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_check"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_check;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("58%: Finished test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only\"");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "latest"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_check
{
  classes:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_kept.!from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_repaired.from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok::
      "FAILED: from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only";
    from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok::
      "PASS: from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only";
  commands:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_failed";
    from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_kept";
    from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo
{
  methods:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_start_msg"
        usebundle => log_test_case("58%: Starting test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo\"");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_finish_msg"
        usebundle => log_test_case("58%: Finished test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo\"");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check
{
  classes:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___correct_classes"
        expression => "!from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept.from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired.!from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "FAILED: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo";
    from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "PASS: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo";
  commands:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed";
    from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept";
    !from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only
{
  methods:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_start_msg"
        usebundle => log_test_case("58%: Starting test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only\"");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_init"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_init;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_test"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_test;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_check"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_check;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("58%: Finished test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only\"");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_check
{
  classes:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_kept.!from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_repaired.from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok::
      "FAILED: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only";
    from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok::
      "PASS: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only";
  commands:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_failed";
    from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_kept";
    from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo
{
  methods:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_start_msg"
        usebundle => log_test_case("59%: Starting test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo\"");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("59%: Finished test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo\"");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "latest"
      , classes => classes_generic("from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check
{
  classes:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___correct_classes"
        expression => "!from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept.from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired.!from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "FAILED: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo";
    from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "PASS: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo";
  commands:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed";
    from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept";
    !from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only
{
  methods:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_start_msg"
        usebundle => log_test_case("59%: Starting test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only\"");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_init"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_init;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_test"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_test;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_check"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_check;
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("59%: Finished test case \"from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only\"");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only");
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "latest"
      , action => warn_only
      , classes => classes_generic("from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_check
{
  classes:
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___correct_classes"
        expression => "!from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_kept.!from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_repaired.from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok::
      "FAILED: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only";
    from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok::
      "PASS: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only";
  commands:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_failed";
    from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_kept";
    from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file
{
  methods:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_start_msg"
        usebundle => log_test_case("59%: Starting test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file\"");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_init"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_init;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_test"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_test;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_check"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_check;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_finish_msg"
        usebundle => log_test_case("59%: Finished test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file\"");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_check
{
  classes:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_kept.from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_repaired.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok::
      "FAILED: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok::
      "PASS: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file";
  commands:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_failed";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_kept";
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only
{
  methods:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_start_msg"
        usebundle => log_test_case("59%: Starting test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only\"");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_init"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_init;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_test"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_test;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_check"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_check;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_finish_msg"
        usebundle => log_test_case("59%: Finished test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only\"");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_check
{
  classes:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_kept.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_repaired.from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_ok::
      "FAILED: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_ok::
      "PASS: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only";
  commands:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_failed";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_kept";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit
{
  methods:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_start_msg"
        usebundle => log_test_case("60%: Starting test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit\"");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_init"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_init;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_test"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_test;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_check"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_check;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_finish_msg"
        usebundle => log_test_case("60%: Finished test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit\"");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_check
{
  classes:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_kept.from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_repaired.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok::
      "FAILED: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok::
      "PASS: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit";
  commands:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_failed";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_kept";
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only
{
  methods:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_start_msg"
        usebundle => log_test_case("60%: Starting test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only\"");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_init"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_init;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_test"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_test;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_check"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_check;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_finish_msg"
        usebundle => log_test_case("60%: Finished test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only\"");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_check
{
  classes:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_kept.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_repaired.from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_ok::
      "FAILED: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_ok::
      "PASS: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only";
  commands:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_failed";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_kept";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2
{
  methods:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_start_msg"
        usebundle => log_test_case("60%: Starting test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2\"");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_init"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_init;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_test"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_test;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_check"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_check;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_finish_msg"
        usebundle => log_test_case("60%: Finished test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2\"");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_check
{
  classes:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_kept.from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_repaired.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok::
      "FAILED: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok::
      "PASS: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2";
  commands:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_failed";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_kept";
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only
{
  methods:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_start_msg"
        usebundle => log_test_case("61%: Starting test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only\"");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_init"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_init;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_test"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_test;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_check"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_check;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_finish_msg"
        usebundle => log_test_case("61%: Finished test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only\"");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_check
{
  classes:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_kept.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_repaired.from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_ok::
      "FAILED: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_ok::
      "PASS: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only";
  commands:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_failed";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_kept";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file
{
  methods:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_start_msg"
        usebundle => log_test_case("61%: Starting test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file\"");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_init"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_init;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_test"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_test;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_check"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_check;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_finish_msg"
        usebundle => log_test_case("61%: Finished test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file\"");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_check
{
  classes:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_kept.from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_repaired.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok::
      "FAILED: from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok::
      "PASS: from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file";
  commands:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_failed";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_kept";
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only
{
  methods:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_start_msg"
        usebundle => log_test_case("61%: Starting test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only\"");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_init"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_init;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_test"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_test;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_check"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_check;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_finish_msg"
        usebundle => log_test_case("61%: Finished test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only\"");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_check
{
  classes:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired.from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "FAILED: from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "PASS: from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only";
  commands:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo
{
  methods:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_start_msg"
        usebundle => log_test_case("61%: Starting test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo\"");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_init"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_init;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_test"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_test;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_check"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_check;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_finish_msg"
        usebundle => log_test_case("61%: Finished test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo\"");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_check
{
  classes:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_kept.from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_repaired.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok::
      "FAILED: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok::
      "PASS: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo";
  commands:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_failed";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_kept";
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only
{
  methods:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_start_msg"
        usebundle => log_test_case("62%: Starting test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only\"");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_init"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_init;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_test"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_test;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_check"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_check;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("62%: Finished test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only\"");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_check
{
  classes:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_kept.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_repaired.from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_ok::
      "FAILED: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_ok::
      "PASS: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only";
  commands:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_failed";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_kept";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo
{
  methods:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_start_msg"
        usebundle => log_test_case("62%: Starting test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo\"");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_finish_msg"
        usebundle => log_test_case("62%: Finished test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo\"");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check
{
  classes:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept.from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "FAILED: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "PASS: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo";
  commands:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept";
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only
{
  methods:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_start_msg"
        usebundle => log_test_case("62%: Starting test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only\"");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_init"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_init;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_test"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_test;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_check"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_check;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("62%: Finished test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only\"");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_check
{
  classes:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_kept.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_repaired.from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok::
      "FAILED: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok::
      "PASS: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only";
  commands:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_failed";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_kept";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo
{
  methods:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_start_msg"
        usebundle => log_test_case("63%: Starting test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo\"");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("63%: Finished test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo\"");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "latest"
      , classes => classes_generic("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check
{
  classes:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept.from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "FAILED: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "PASS: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo";
  commands:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept";
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only
{
  methods:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_start_msg"
        usebundle => log_test_case("63%: Starting test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only\"");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_init"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_init;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_test"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_test;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_check"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_check;
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("63%: Finished test case \"from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only\"");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only");
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "latest"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_check
{
  classes:
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_kept.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_repaired.from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok::
      "FAILED: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok::
      "PASS: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only";
  commands:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_failed";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_kept";
    from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_start_msg"
        usebundle => log_test_case("63%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo\"");
      "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init;
      "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test;
      "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check;
      "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_finish_msg"
        usebundle => log_test_case("63%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept.from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo";
    from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed";
    from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept";
    !from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_start_msg"
        usebundle => log_test_case("63%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only\"");
      "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_init;
      "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_test;
      "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_check;
      "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("63%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_repaired.from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only";
    from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_failed";
    from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file
{
  methods:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_start_msg"
        usebundle => log_test_case("64%: Starting test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file\"");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_init"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_init;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_test"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_test;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_check"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_check;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_finish_msg"
        usebundle => log_test_case("64%: Finished test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file\"");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , classes => classes_generic("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_check
{
  classes:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___correct_classes"
        expression => "!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_kept.from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_repaired.!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok::
      "FAILED: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file";
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok::
      "PASS: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file";
  commands:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_failed";
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_kept";
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only
{
  methods:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_start_msg"
        usebundle => log_test_case("64%: Starting test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only\"");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_init"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_init;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_test"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_test;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_check"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_check;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_finish_msg"
        usebundle => log_test_case("64%: Finished test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only\"");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_check
{
  classes:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_kept.!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_repaired.from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_ok::
      "FAILED: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only";
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_ok::
      "PASS: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only";
  commands:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_failed";
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_kept";
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit
{
  methods:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_start_msg"
        usebundle => log_test_case("64%: Starting test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit\"");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_init"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_init;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_test"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_test;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_check"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_check;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_finish_msg"
        usebundle => log_test_case("64%: Finished test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit\"");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_check
{
  classes:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___correct_classes"
        expression => "!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_kept.from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_repaired.!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok::
      "FAILED: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit";
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok::
      "PASS: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit";
  commands:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_failed";
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_kept";
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only
{
  methods:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_start_msg"
        usebundle => log_test_case("65%: Starting test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only\"");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_init"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_init;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_test"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_test;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_check"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_check;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_finish_msg"
        usebundle => log_test_case("65%: Finished test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only\"");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_check
{
  classes:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_kept.!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_repaired.from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_ok::
      "FAILED: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only";
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_ok::
      "PASS: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only";
  commands:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_failed";
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_kept";
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1
{
  methods:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_start_msg"
        usebundle => log_test_case("65%: Starting test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1\"");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_init"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_init;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_test"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_test;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_check"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_check;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_finish_msg"
        usebundle => log_test_case("65%: Finished test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1\"");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_check
{
  classes:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___correct_classes"
        expression => "!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_kept.from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_repaired.!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok::
      "FAILED: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1";
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok::
      "PASS: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1";
  commands:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_failed";
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_kept";
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only
{
  methods:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_start_msg"
        usebundle => log_test_case("65%: Starting test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only\"");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_init"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_init;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_test"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_test;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_check"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_check;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_finish_msg"
        usebundle => log_test_case("65%: Finished test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only\"");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_check
{
  classes:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_kept.!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_repaired.from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_ok::
      "FAILED: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only";
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_ok::
      "PASS: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only";
  commands:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_failed";
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_kept";
    from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file
{
  methods:
      "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_start_msg"
        usebundle => log_test_case("65%: Starting test case \"from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file\"");
      "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_init"
        usebundle => from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_init;
      "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_test"
        usebundle => from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_test;
      "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_check"
        usebundle => from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_check;
      "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_finish_msg"
        usebundle => log_test_case("65%: Finished test case \"from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file\"");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_check
{
  classes:
      "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        expression => "!from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_kept.from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_repaired.!from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok::
      "FAILED: from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file";
    from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok::
      "PASS: from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file";
  commands:
    !from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_failed";
    from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_kept";
    !from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only
{
  methods:
      "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_start_msg"
        usebundle => log_test_case("66%: Starting test case \"from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only\"");
      "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_init"
        usebundle => from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_init;
      "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_test"
        usebundle => from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_test;
      "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_check"
        usebundle => from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_check;
      "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_finish_msg"
        usebundle => log_test_case("66%: Finished test case \"from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only\"");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_check
{
  classes:
      "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept.!from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired.from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "FAILED: from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only";
    from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "PASS: from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only";
  commands:
    !from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed";
    from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept";
    from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo
{
  methods:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_start_msg"
        usebundle => log_test_case("66%: Starting test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo\"");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_init"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_init;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_test"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_test;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_check"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_check;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_finish_msg"
        usebundle => log_test_case("66%: Finished test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo\"");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_check
{
  classes:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo___correct_classes"
        expression => "!from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo___class_kept.from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo___class_repaired.!from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_ok::
      "FAILED: from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo";
    from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_ok::
      "PASS: from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo";
  commands:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo___class_failed";
    from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo___class_kept";
    !from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only
{
  methods:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_start_msg"
        usebundle => log_test_case("66%: Starting test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only\"");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_init"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_init;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_test"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_test;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_check"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_check;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("66%: Finished test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only\"");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_check
{
  classes:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_kept.!from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_repaired.from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok::
      "FAILED: from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only";
    from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok::
      "PASS: from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only";
  commands:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_failed";
    from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_kept";
    from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo
{
  methods:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_start_msg"
        usebundle => log_test_case("67%: Starting test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo\"");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_finish_msg"
        usebundle => log_test_case("67%: Finished test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo\"");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check
{
  classes:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___correct_classes"
        expression => "!from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept.from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired.!from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "FAILED: from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo";
    from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "PASS: from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo";
  commands:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed";
    from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept";
    !from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired";
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only
{
  methods:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_start_msg"
        usebundle => log_test_case("67%: Starting test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only\"");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_init"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_init;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_test"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_test;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_check"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_check;
      "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("67%: Finished test case \"from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only\"");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only");
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_check
{
  classes:
      "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_kept.!from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_repaired.from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok::
      "FAILED: from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only";
    from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok::
      "PASS: from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only";
  commands:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_failed";
    from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_kept";
    from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_start_msg"
        usebundle => log_test_case("67%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo\"");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_init;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_test;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_check;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_finish_msg"
        usebundle => log_test_case("67%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_kept.from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_failed";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_kept";
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_start_msg"
        usebundle => log_test_case("67%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only\"");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_init;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_test;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_check;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("67%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_repaired.from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_failed";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_start_msg"
        usebundle => log_test_case("68%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo\"");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_init;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_test;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_check;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("68%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "latest"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_kept.from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_failed";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_kept";
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_start_msg"
        usebundle => log_test_case("68%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only\"");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_init;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_test;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_check;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("68%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "latest"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_repaired.from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_failed";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_start_msg"
        usebundle => log_test_case("68%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo\"");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_finish_msg"
        usebundle => log_test_case("68%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept.from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept";
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_start_msg"
        usebundle => log_test_case("69%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only\"");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_init;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_test;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_check;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("69%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_repaired.from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_failed";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_start_msg"
        usebundle => log_test_case("69%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo\"");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_finish_msg"
        usebundle => log_test_case("69%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept.from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept";
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_start_msg"
        usebundle => log_test_case("69%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only\"");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_init;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_test;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_check;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("69%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_repaired.from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_failed";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_start_msg"
        usebundle => log_test_case("69%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo\"");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("69%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "latest"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept.from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept";
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_start_msg"
        usebundle => log_test_case("70%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only\"");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_init;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_test;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_check;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("70%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "latest"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_repaired.from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_failed";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_start_msg"
        usebundle => log_test_case("70%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo\"");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("70%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "latest"
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept.from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept";
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired";
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only
{
  methods:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_start_msg"
        usebundle => log_test_case("70%: Starting test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only\"");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_init"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_init;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_test"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_test;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_check"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_check;
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("70%: Finished test case \"from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only\"");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only");
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "latest"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_check
{
  classes:
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_kept.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_repaired.from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok::
      "FAILED: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok::
      "PASS: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only";
  commands:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_failed";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_kept";
    from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file
{
  methods:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_start_msg"
        usebundle => log_test_case("71%: Starting test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file\"");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_init"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_init;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_test"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_test;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_check"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_check;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_finish_msg"
        usebundle => log_test_case("71%: Finished test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file\"");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_check
{
  classes:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_kept.from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_repaired.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok::
      "FAILED: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok::
      "PASS: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file";
  commands:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_failed";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_kept";
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only
{
  methods:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_start_msg"
        usebundle => log_test_case("71%: Starting test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only\"");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_init"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_init;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_test"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_test;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_check"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_check;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_finish_msg"
        usebundle => log_test_case("71%: Finished test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only\"");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_check
{
  classes:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_kept.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_repaired.from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_ok::
      "FAILED: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_ok::
      "PASS: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only";
  commands:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_failed";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_kept";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit
{
  methods:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_start_msg"
        usebundle => log_test_case("71%: Starting test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit\"");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_init"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_init;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_test"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_test;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_check"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_check;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_finish_msg"
        usebundle => log_test_case("71%: Finished test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit\"");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_check
{
  classes:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_kept.from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_repaired.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok::
      "FAILED: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok::
      "PASS: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit";
  commands:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_failed";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_kept";
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only
{
  methods:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_start_msg"
        usebundle => log_test_case("71%: Starting test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only\"");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_init"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_init;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_test"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_test;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_check"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_check;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_finish_msg"
        usebundle => log_test_case("71%: Finished test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only\"");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_check
{
  classes:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_kept.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_repaired.from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_ok::
      "FAILED: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_ok::
      "PASS: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only";
  commands:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_failed";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_kept";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1
{
  methods:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_start_msg"
        usebundle => log_test_case("72%: Starting test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1\"");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_init"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_init;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_test"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_test;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_check"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_check;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_finish_msg"
        usebundle => log_test_case("72%: Finished test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1\"");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_check
{
  classes:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_kept.from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_repaired.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok::
      "FAILED: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok::
      "PASS: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1";
  commands:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_failed";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_kept";
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only
{
  methods:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_start_msg"
        usebundle => log_test_case("72%: Starting test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only\"");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_init"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_init;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_test"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_test;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_check"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_check;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_finish_msg"
        usebundle => log_test_case("72%: Finished test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only\"");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_check
{
  classes:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_kept.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_repaired.from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_ok::
      "FAILED: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_ok::
      "PASS: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only";
  commands:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_failed";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_kept";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file
{
  methods:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_start_msg"
        usebundle => log_test_case("72%: Starting test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file\"");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_init"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_init;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_test"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_test;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_check"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_check;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_finish_msg"
        usebundle => log_test_case("72%: Finished test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file\"");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_check
{
  classes:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_kept.from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_repaired.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok::
      "FAILED: from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok::
      "PASS: from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file";
  commands:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_failed";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_kept";
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only
{
  methods:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_start_msg"
        usebundle => log_test_case("73%: Starting test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only\"");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_init"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_init;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_test"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_test;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_check"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_check;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_finish_msg"
        usebundle => log_test_case("73%: Finished test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only\"");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_check
{
  classes:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired.from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "FAILED: from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "PASS: from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only";
  commands:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo
{
  methods:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_start_msg"
        usebundle => log_test_case("73%: Starting test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo\"");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_finish_msg"
        usebundle => log_test_case("73%: Finished test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo\"");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check
{
  classes:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept.from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "FAILED: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "PASS: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo";
  commands:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept";
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only
{
  methods:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_start_msg"
        usebundle => log_test_case("73%: Starting test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only\"");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_init"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_init;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_test"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_test;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_check"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_check;
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("73%: Finished test case \"from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only\"");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only");
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_check
{
  classes:
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_kept.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_repaired.from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok::
      "FAILED: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok::
      "PASS: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only";
  commands:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_failed";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_kept";
    from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_start_msg"
        usebundle => log_test_case("73%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_finish_msg"
        usebundle => log_test_case("73%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_start_msg"
        usebundle => log_test_case("74%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_finish_msg"
        usebundle => log_test_case("74%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_start_msg"
        usebundle => log_test_case("74%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_finish_msg"
        usebundle => log_test_case("74%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_start_msg"
        usebundle => log_test_case("74%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_finish_msg"
        usebundle => log_test_case("74%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_start_msg"
        usebundle => log_test_case("75%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_finish_msg"
        usebundle => log_test_case("75%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_start_msg"
        usebundle => log_test_case("75%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_finish_msg"
        usebundle => log_test_case("75%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_start_msg"
        usebundle => log_test_case("75%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_finish_msg"
        usebundle => log_test_case("75%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_test
{
  packages:
      "$(p.package[1][2][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_start_msg"
        usebundle => log_test_case("75%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_finish_msg"
        usebundle => log_test_case("75%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo_start_msg"
        usebundle => log_test_case("76%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo_finish_msg"
        usebundle => log_test_case("76%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_start_msg"
        usebundle => log_test_case("76%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_finish_msg"
        usebundle => log_test_case("76%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_start_msg"
        usebundle => log_test_case("76%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_finish_msg"
        usebundle => log_test_case("76%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_start_msg"
        usebundle => log_test_case("76%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_finish_msg"
        usebundle => log_test_case("76%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_start_msg"
        usebundle => log_test_case("77%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("77%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "latest"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_start_msg"
        usebundle => log_test_case("77%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_finish_msg"
        usebundle => log_test_case("77%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_start_msg"
        usebundle => log_test_case("77%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_finish_msg"
        usebundle => log_test_case("77%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_start_msg"
        usebundle => log_test_case("78%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("78%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "latest"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_start_msg"
        usebundle => log_test_case("78%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("78%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "latest"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_start_msg"
        usebundle => log_test_case("78%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_finish_msg"
        usebundle => log_test_case("78%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit_start_msg"
        usebundle => log_test_case("78%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit_finish_msg"
        usebundle => log_test_case("78%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit
{
  methods:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit_start_msg"
        usebundle => log_test_case("79%: Starting test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit\"");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit_init"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit_init;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit_test"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit_test;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit_check"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit_check;
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit_finish_msg"
        usebundle => log_test_case("79%: Finished test case \"from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit\"");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit");
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit___correct_classes"
        expression => "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_kept.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_repaired.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit_ok::
      "PASS: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit";
  commands:
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_failed";
    !from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_kept::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_kept";
    from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file
{
  methods:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_start_msg"
        usebundle => log_test_case("79%: Starting test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file\"");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_init"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_init;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_test"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_test;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_check"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_check;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_finish_msg"
        usebundle => log_test_case("79%: Finished test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file\"");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , classes => classes_generic("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_check
{
  classes:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_kept.from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_repaired.!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok::
      "FAILED: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file";
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok::
      "PASS: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file";
  commands:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_failed";
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_kept";
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only
{
  methods:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_start_msg"
        usebundle => log_test_case("79%: Starting test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only\"");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_init"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_init;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_test"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_test;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_check"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_check;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_finish_msg"
        usebundle => log_test_case("79%: Finished test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only\"");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_check
{
  classes:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_kept.!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_repaired.from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_ok::
      "FAILED: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only";
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_ok::
      "PASS: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only";
  commands:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_failed";
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_kept";
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit
{
  methods:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_start_msg"
        usebundle => log_test_case("80%: Starting test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit\"");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_init"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_init;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_test"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_test;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_check"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_check;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_finish_msg"
        usebundle => log_test_case("80%: Finished test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit\"");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_check
{
  classes:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_kept.from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_repaired.!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok::
      "FAILED: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit";
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok::
      "PASS: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit";
  commands:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_failed";
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_kept";
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only
{
  methods:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_start_msg"
        usebundle => log_test_case("80%: Starting test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only\"");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_init"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_init;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_test"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_test;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_check"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_check;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_finish_msg"
        usebundle => log_test_case("80%: Finished test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only\"");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_check
{
  classes:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_kept.!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_repaired.from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_ok::
      "FAILED: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only";
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_ok::
      "PASS: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only";
  commands:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_failed";
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_kept";
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1
{
  methods:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_start_msg"
        usebundle => log_test_case("80%: Starting test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1\"");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_init"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_init;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_test"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_test;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_check"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_check;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_finish_msg"
        usebundle => log_test_case("80%: Finished test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1\"");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_check
{
  classes:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_kept.from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_repaired.!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok::
      "FAILED: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1";
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok::
      "PASS: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1";
  commands:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_failed";
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_kept";
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only
{
  methods:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_start_msg"
        usebundle => log_test_case("80%: Starting test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only\"");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_init"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_init;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_test"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_test;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_check"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_check;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_finish_msg"
        usebundle => log_test_case("80%: Finished test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only\"");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_check
{
  classes:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_kept.!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_repaired.from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_ok::
      "FAILED: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only";
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_ok::
      "PASS: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only";
  commands:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_failed";
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_kept";
    from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file
{
  methods:
      "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_start_msg"
        usebundle => log_test_case("81%: Starting test case \"from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file\"");
      "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_init"
        usebundle => from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_init;
      "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_test"
        usebundle => from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_test;
      "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_check"
        usebundle => from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_check;
      "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_finish_msg"
        usebundle => log_test_case("81%: Finished test case \"from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file\"");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_check
{
  classes:
      "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_kept.from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_repaired.!from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok::
      "FAILED: from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file";
    from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok::
      "PASS: from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file";
  commands:
    !from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_failed";
    from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_kept";
    !from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only
{
  methods:
      "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_start_msg"
        usebundle => log_test_case("81%: Starting test case \"from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only\"");
      "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_init"
        usebundle => from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_init;
      "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_test"
        usebundle => from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_test;
      "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_check"
        usebundle => from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_check;
      "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_finish_msg"
        usebundle => log_test_case("81%: Finished test case \"from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only\"");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_check
{
  classes:
      "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept.!from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired.from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "FAILED: from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only";
    from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "PASS: from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only";
  commands:
    !from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_failed";
    from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_kept";
    from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo
{
  methods:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_start_msg"
        usebundle => log_test_case("81%: Starting test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo\"");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_init"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_init;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_test"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_test;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_check"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_check;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_finish_msg"
        usebundle => log_test_case("81%: Finished test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo\"");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_check
{
  classes:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo___class_kept.from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo___class_repaired.!from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_ok::
      "FAILED: from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo";
    from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_ok::
      "PASS: from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo";
  commands:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo___class_failed";
    from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo___class_kept";
    !from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only
{
  methods:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_start_msg"
        usebundle => log_test_case("82%: Starting test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only\"");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_init"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_init;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_test"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_test;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_check"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_check;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("82%: Finished test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only\"");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_check
{
  classes:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_kept.!from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_repaired.from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok::
      "FAILED: from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only";
    from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok::
      "PASS: from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only";
  commands:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_failed";
    from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_kept";
    from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo
{
  methods:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_start_msg"
        usebundle => log_test_case("82%: Starting test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo\"");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_finish_msg"
        usebundle => log_test_case("82%: Finished test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo\"");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check
{
  classes:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept.from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired.!from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "FAILED: from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo";
    from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "PASS: from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo";
  commands:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed";
    from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept";
    !from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired";
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only
{
  methods:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_start_msg"
        usebundle => log_test_case("82%: Starting test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only\"");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_init"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_init;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_test"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_test;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_check"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_check;
      "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("82%: Finished test case \"from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only\"");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only");
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_check
{
  classes:
      "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_kept.!from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_repaired.from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok::
      "FAILED: from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only";
    from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok::
      "PASS: from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only";
  commands:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_failed";
    from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_kept";
    from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit
{
  methods:
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_start_msg"
        usebundle => log_test_case("82%: Starting test case \"from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit\"");
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_init"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_init;
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_test"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_test;
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_check"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_check;
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_finish_msg"
        usebundle => log_test_case("82%: Finished test case \"from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit\"");
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit");
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_kept.from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_repaired.!from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit";
    from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_ok::
      "PASS: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit";
  commands:
    !from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_failed";
    from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_kept";
    !from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_repaired::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only
{
  methods:
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only_start_msg"
        usebundle => log_test_case("83%: Starting test case \"from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only\"");
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only_init"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only_init;
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only_test"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only_test;
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only_check"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only_check;
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only_finish_msg"
        usebundle => log_test_case("83%: Finished test case \"from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only\"");
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only");
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only___class_kept.!from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only___class_repaired.from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only";
    from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only_ok::
      "PASS: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only";
  commands:
    !from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only___class_failed";
    from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only___class_kept";
    from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit
{
  methods:
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_start_msg"
        usebundle => log_test_case("83%: Starting test case \"from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit\"");
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_init"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_init;
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_test"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_test;
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_check"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_check;
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_finish_msg"
        usebundle => log_test_case("83%: Finished test case \"from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit\"");
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit");
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_kept.from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_repaired.!from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit";
    from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_ok::
      "PASS: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit";
  commands:
    !from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_failed";
    from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_kept";
    !from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_repaired::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only
{
  methods:
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only_start_msg"
        usebundle => log_test_case("83%: Starting test case \"from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only\"");
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only_init"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only_init;
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only_test"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only_test;
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only_check"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only_check;
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only_finish_msg"
        usebundle => log_test_case("83%: Finished test case \"from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only\"");
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.64_bit), "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only");
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only___class")
      ;
}

bundle agent from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only_check
{
  classes:
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only___correct_classes"
        expression => "!from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only___class_kept.!from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only___class_repaired.from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only_ok::
      "FAILED: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only";
    from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only_ok::
      "PASS: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only";
  commands:
    !from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only___class_failed";
    from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only___class_kept";
    from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file
{
  methods:
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_start_msg"
        usebundle => log_test_case("84%: Starting test case \"from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file\"");
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_init"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_init;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_test"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_test;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_check"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_check;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_finish_msg"
        usebundle => log_test_case("84%: Finished test case \"from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file\"");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , classes => classes_generic("from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_check
{
  classes:
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___correct_classes"
        expression => "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_kept.!from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_repaired.!from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok::
      "FAILED: from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file";
    from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok::
      "PASS: from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file";
  commands:
    !from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_failed";
    !from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_kept::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_kept";
    from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit
{
  methods:
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_start_msg"
        usebundle => log_test_case("84%: Starting test case \"from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit\"");
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_init"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_init;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_test"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_test;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_check"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_check;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_finish_msg"
        usebundle => log_test_case("84%: Finished test case \"from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit\"");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_check
{
  classes:
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___correct_classes"
        expression => "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_kept.!from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_repaired.!from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok::
      "FAILED: from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit";
    from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok::
      "PASS: from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit";
  commands:
    !from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_failed";
    !from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_kept::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_kept";
    from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1
{
  methods:
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_start_msg"
        usebundle => log_test_case("84%: Starting test case \"from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1\"");
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_init"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_init;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_test"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_test;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_check"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_check;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_finish_msg"
        usebundle => log_test_case("84%: Finished test case \"from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1\"");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_check
{
  classes:
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___correct_classes"
        expression => "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_kept.!from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_repaired.!from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok::
      "FAILED: from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1";
    from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok::
      "PASS: from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1";
  commands:
    !from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_failed";
    !from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_kept::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_kept";
    from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file
{
  methods:
      "from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_start_msg"
        usebundle => log_test_case("84%: Starting test case \"from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file\"");
      "from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_init"
        usebundle => from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_init;
      "from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_test"
        usebundle => from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_test;
      "from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_check"
        usebundle => from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_check;
      "from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_finish_msg"
        usebundle => log_test_case("84%: Finished test case \"from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file\"");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_test
{
  packages:
      "$(p.package[1][1][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_check
{
  classes:
      "from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        expression => "from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_kept.!from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_repaired.!from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok::
      "FAILED: from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file";
    from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok::
      "PASS: from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file";
  commands:
    !from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_failed";
    !from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_kept::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_kept";
    from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo
{
  methods:
      "from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo_start_msg"
        usebundle => log_test_case("85%: Starting test case \"from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo\"");
      "from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo_init"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo_init;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo_test"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo_test;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo_check"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo_check;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo_finish_msg"
        usebundle => log_test_case("85%: Finished test case \"from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo\"");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , classes => classes_generic("from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo_check
{
  classes:
      "from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo___correct_classes"
        expression => "from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo___class_kept.!from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo___class_repaired.!from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo_ok::
      "FAILED: from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo";
    from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo_ok::
      "PASS: from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo";
  commands:
    !from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo___class_failed";
    !from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo___class_kept::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo___class_kept";
    from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo
{
  methods:
      "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo_start_msg"
        usebundle => log_test_case("85%: Starting test case \"from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo\"");
      "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo_init"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo_init;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo_test"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo_test;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo_check"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo_check;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo_finish_msg"
        usebundle => log_test_case("85%: Finished test case \"from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo\"");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo_check
{
  classes:
      "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo___correct_classes"
        expression => "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_kept.!from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_repaired.!from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo_ok::
      "FAILED: from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo";
    from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo_ok::
      "PASS: from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo";
  commands:
    !from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_failed";
    !from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_kept::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_kept";
    from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo
{
  methods:
      "from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo_start_msg"
        usebundle => log_test_case("85%: Starting test case \"from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo\"");
      "from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo_init"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo_init;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo_test"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo_test;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo_check"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo_check;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo_finish_msg"
        usebundle => log_test_case("85%: Finished test case \"from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo\"");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo_check
{
  classes:
      "from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo___correct_classes"
        expression => "from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo___class_kept.!from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo___class_repaired.!from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo_ok::
      "FAILED: from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo";
    from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo_ok::
      "PASS: from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo";
  commands:
    !from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo___class_failed";
    !from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo___class_kept::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo___class_kept";
    from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo
{
  methods:
      "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_start_msg"
        usebundle => log_test_case("86%: Starting test case \"from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo\"");
      "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check;
      "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_finish_msg"
        usebundle => log_test_case("86%: Finished test case \"from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo\"");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_check
{
  classes:
      "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___correct_classes"
        expression => "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept.!from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired.!from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "FAILED: from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo";
    from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "PASS: from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo";
  commands:
    !from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_failed";
    !from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_kept";
    from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit
{
  methods:
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_start_msg"
        usebundle => log_test_case("86%: Starting test case \"from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit\"");
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_init"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_init;
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_test"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_test;
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_check"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_check;
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_finish_msg"
        usebundle => log_test_case("86%: Finished test case \"from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit\"");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_check
{
  classes:
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___correct_classes"
        expression => "from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_kept.!from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_repaired.!from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_ok::
      "FAILED: from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit";
    from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_ok::
      "PASS: from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit";
  commands:
    !from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_failed";
    !from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_kept::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_kept";
    from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2
{
  methods:
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_start_msg"
        usebundle => log_test_case("86%: Starting test case \"from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2\"");
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_init"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_init;
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_test"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_test;
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_check"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_check;
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_finish_msg"
        usebundle => log_test_case("86%: Finished test case \"from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2\"");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_check
{
  classes:
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2___correct_classes"
        expression => "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2___class_kept.!from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2___class_repaired.!from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_ok::
      "FAILED: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2";
    from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_ok::
      "PASS: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2";
  commands:
    !from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2___class_failed";
    !from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2___class_kept::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2___class_kept";
    from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit
{
  methods:
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_start_msg"
        usebundle => log_test_case("86%: Starting test case \"from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit\"");
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_init"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_init;
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_test"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_test;
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_check"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_check;
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_finish_msg"
        usebundle => log_test_case("86%: Finished test case \"from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit\"");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_check
{
  classes:
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___correct_classes"
        expression => "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_kept.!from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_repaired.!from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_ok::
      "FAILED: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit";
    from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_ok::
      "PASS: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit";
  commands:
    !from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_failed";
    !from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_kept::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_kept";
    from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit
{
  methods:
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit_start_msg"
        usebundle => log_test_case("87%: Starting test case \"from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit\"");
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit_init"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit_init;
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit_test"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit_test;
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit_check"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit_check;
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit_finish_msg"
        usebundle => log_test_case("87%: Finished test case \"from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit\"");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit_check
{
  classes:
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit___correct_classes"
        expression => "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_kept.!from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_repaired.!from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit_ok::
      "FAILED: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit";
    from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit_ok::
      "PASS: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit";
  commands:
    !from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_failed";
    !from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_kept::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_kept";
    from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit___class_repaired";
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit
{
  methods:
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit_start_msg"
        usebundle => log_test_case("87%: Starting test case \"from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit\"");
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit_init"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit_init;
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit_test"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit_test;
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit_check"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit_check;
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit_finish_msg"
        usebundle => log_test_case("87%: Finished test case \"from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit\"");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.32_bit), "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit");
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class")
      ;
}

bundle agent from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit_check
{
  classes:
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit___correct_classes"
        expression => "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_kept.!from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_repaired.!from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        expression => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit___correct_classes"
        };

  reports:
    !from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit_ok::
      "FAILED: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit";
    from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit_ok::
      "PASS: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit";
  commands:
    !from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_failed::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_failed";
    !from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_kept::
      "Class was not set, but should be: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_kept";
    from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit___class_repaired";
}

bundle agent from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo
{
  methods:
      "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_start_msg"
        usebundle => log_test_case("87%: Starting test case \"from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo\"");
      "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init"
        usebundle => from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init;
      "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test"
        usebundle => from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test;
      "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check"
        usebundle => from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check;
      "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_finish_msg"
        usebundle => log_test_case("87%: Finished test case \"from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo\"");
}

bundle agent from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
}

bundle agent from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class")
      ;
}

bundle agent from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check
{
  classes:
      "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___correct_classes"
        expression => "!from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept.from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired.!from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___correct_classes"
        };

  reports:
    !from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "FAILED: from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo";
    from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "PASS: from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo";
  commands:
    !from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed";
    from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept";
    !from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired::
      "Class was not set, but should be: from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired";
}

bundle agent from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only
{
  methods:
      "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_start_msg"
        usebundle => log_test_case("88%: Starting test case \"from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only\"");
      "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_init"
        usebundle => from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_init;
      "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_test"
        usebundle => from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_test;
      "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_check"
        usebundle => from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_check;
      "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("88%: Finished test case \"from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only\"");
}

bundle agent from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[2]), $(p.32_bit), "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only");
}

bundle agent from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , action => warn_only
      , classes => classes_generic("from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class")
      ;
}

bundle agent from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_check
{
  classes:
      "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___correct_classes"
        expression => "!from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_kept.!from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_repaired.from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok::
      "FAILED: from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only";
    from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok::
      "PASS: from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only";
  commands:
    !from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_failed";
    from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_kept";
    from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only___class_repaired";
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file
{
  methods:
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_start_msg"
        usebundle => log_test_case("88%: Starting test case \"from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file\"");
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_init"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_init;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_test"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_test;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_check"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_check;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_finish_msg"
        usebundle => log_test_case("88%: Finished test case \"from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file\"");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , classes => classes_generic("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class")
      ;
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_check
{
  classes:
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___correct_classes"
        expression => "!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_kept.from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_repaired.!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok::
      "FAILED: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file";
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok::
      "PASS: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file";
  commands:
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_failed::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_failed";
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_kept";
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_repaired::
      "Class was not set, but should be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file___class_repaired";
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only
{
  methods:
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_start_msg"
        usebundle => log_test_case("88%: Starting test case \"from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only\"");
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_init"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_init;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_test"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_test;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_check"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_check;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_finish_msg"
        usebundle => log_test_case("88%: Finished test case \"from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only\"");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , action => warn_only
      , classes => classes_generic("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class")
      ;
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_check
{
  classes:
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___correct_classes"
        expression => "!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_kept.!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_repaired.from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_ok::
      "FAILED: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only";
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_ok::
      "PASS: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only";
  commands:
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_failed";
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_kept";
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only___class_repaired";
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit
{
  methods:
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_start_msg"
        usebundle => log_test_case("88%: Starting test case \"from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit\"");
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_init"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_init;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_test"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_test;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_check"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_check;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_finish_msg"
        usebundle => log_test_case("88%: Finished test case \"from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit\"");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class")
      ;
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_check
{
  classes:
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___correct_classes"
        expression => "!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_kept.from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_repaired.!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok::
      "FAILED: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit";
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok::
      "PASS: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit";
  commands:
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_failed::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_failed";
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_kept";
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_repaired::
      "Class was not set, but should be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit___class_repaired";
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only
{
  methods:
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_start_msg"
        usebundle => log_test_case("89%: Starting test case \"from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only\"");
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_init"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_init;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_test"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_test;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_check"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_check;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_finish_msg"
        usebundle => log_test_case("89%: Finished test case \"from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only\"");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , action => warn_only
      , classes => classes_generic("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class")
      ;
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_check
{
  classes:
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___correct_classes"
        expression => "!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_kept.!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_repaired.from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_ok::
      "FAILED: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only";
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_ok::
      "PASS: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only";
  commands:
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_failed";
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_kept";
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only___class_repaired";
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2
{
  methods:
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_start_msg"
        usebundle => log_test_case("89%: Starting test case \"from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2\"");
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_init"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_init;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_test"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_test;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_check"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_check;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_finish_msg"
        usebundle => log_test_case("89%: Finished test case \"from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2\"");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class")
      ;
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_check
{
  classes:
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___correct_classes"
        expression => "!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_kept.from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_repaired.!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok::
      "FAILED: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2";
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok::
      "PASS: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2";
  commands:
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_failed::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_failed";
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_kept";
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_repaired::
      "Class was not set, but should be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2___class_repaired";
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only
{
  methods:
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_start_msg"
        usebundle => log_test_case("89%: Starting test case \"from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only\"");
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_init"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_init;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_test"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_test;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_check"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_check;
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_finish_msg"
        usebundle => log_test_case("89%: Finished test case \"from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only\"");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class")
      ;
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_check
{
  classes:
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___correct_classes"
        expression => "!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_kept.!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_repaired.from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_ok::
      "FAILED: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only";
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_ok::
      "PASS: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only";
  commands:
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_failed";
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_kept";
    from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only___class_repaired";
}

bundle agent from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file
{
  methods:
      "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_start_msg"
        usebundle => log_test_case("90%: Starting test case \"from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file\"");
      "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_init"
        usebundle => from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_init;
      "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_test"
        usebundle => from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_test;
      "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_check"
        usebundle => from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_check;
      "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_finish_msg"
        usebundle => log_test_case("90%: Finished test case \"from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file\"");
}

bundle agent from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file");
}

bundle agent from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class")
      ;
}

bundle agent from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_check
{
  classes:
      "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        expression => "!from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_kept.from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_repaired.!from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok::
      "FAILED: from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file";
    from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok::
      "PASS: from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file";
  commands:
    !from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_failed";
    from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_kept";
    !from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_repaired::
      "Class was not set, but should be: from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file___class_repaired";
}

bundle agent from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only
{
  methods:
      "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_start_msg"
        usebundle => log_test_case("90%: Starting test case \"from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only\"");
      "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_init"
        usebundle => from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_init;
      "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_test"
        usebundle => from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_test;
      "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_check"
        usebundle => from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_check;
      "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_finish_msg"
        usebundle => log_test_case("90%: Finished test case \"from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only\"");
}

bundle agent from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only");
}

bundle agent from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_test
{
  packages:
      "$(p.package[1][2][32_bit])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class")
      ;
}

bundle agent from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_check
{
  classes:
      "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___correct_classes"
        expression => "!from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept.!from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired.from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "FAILED: from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only";
    from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "PASS: from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only";
  commands:
    !from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_failed";
    from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_kept";
    from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only___class_repaired";
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo
{
  methods:
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_start_msg"
        usebundle => log_test_case("90%: Starting test case \"from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo\"");
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_init"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_init;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_test"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_test;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_check"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_check;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_finish_msg"
        usebundle => log_test_case("90%: Finished test case \"from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo\"");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class")
      ;
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_check
{
  classes:
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___correct_classes"
        expression => "!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_kept.from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_repaired.!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok::
      "FAILED: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo";
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok::
      "PASS: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo";
  commands:
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_failed::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_failed";
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_kept";
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_repaired::
      "Class was not set, but should be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_repaired";
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only
{
  methods:
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_start_msg"
        usebundle => log_test_case("90%: Starting test case \"from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only\"");
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_init"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_init;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_test"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_test;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_check"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_check;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("90%: Finished test case \"from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only\"");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , action => warn_only
      , classes => classes_generic("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class")
      ;
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_check
{
  classes:
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___correct_classes"
        expression => "!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_kept.!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_repaired.from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_ok::
      "FAILED: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only";
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_ok::
      "PASS: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only";
  commands:
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_failed";
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_kept";
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_repaired";
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo
{
  methods:
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_start_msg"
        usebundle => log_test_case("91%: Starting test case \"from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo\"");
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_finish_msg"
        usebundle => log_test_case("91%: Finished test case \"from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo\"");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class")
      ;
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check
{
  classes:
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___correct_classes"
        expression => "!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept.from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired.!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "FAILED: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo";
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "PASS: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo";
  commands:
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed";
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept";
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired::
      "Class was not set, but should be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired";
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only
{
  methods:
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_start_msg"
        usebundle => log_test_case("91%: Starting test case \"from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only\"");
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_init"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_init;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_test"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_test;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_check"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_check;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("91%: Finished test case \"from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only\"");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class")
      ;
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_check
{
  classes:
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___correct_classes"
        expression => "!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_kept.!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_repaired.from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok::
      "FAILED: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only";
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok::
      "PASS: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only";
  commands:
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_failed";
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_kept";
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_repaired";
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo
{
  methods:
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_start_msg"
        usebundle => log_test_case("91%: Starting test case \"from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo\"");
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("91%: Finished test case \"from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo\"");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "latest"
      , classes => classes_generic("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class")
      ;
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check
{
  classes:
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___correct_classes"
        expression => "!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept.from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired.!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "FAILED: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo";
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "PASS: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo";
  commands:
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed";
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept";
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired::
      "Class was not set, but should be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired";
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only
{
  methods:
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_start_msg"
        usebundle => log_test_case("92%: Starting test case \"from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only\"");
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_init"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_init;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_test"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_test;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_check"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_check;
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("92%: Finished test case \"from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only\"");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only");
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "latest"
      , action => warn_only
      , classes => classes_generic("from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class")
      ;
}

bundle agent from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_check
{
  classes:
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___correct_classes"
        expression => "!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_kept.!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_repaired.from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok::
      "FAILED: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only";
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok::
      "PASS: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only";
  commands:
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_failed";
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_kept";
    from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file
{
  methods:
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_start_msg"
        usebundle => log_test_case("92%: Starting test case \"from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file\"");
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_init"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_init;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_test"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_test;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_check"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_check;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_finish_msg"
        usebundle => log_test_case("92%: Finished test case \"from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file\"");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_check
{
  classes:
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___correct_classes"
        expression => "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_kept.!from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_repaired.!from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok::
      "FAILED: from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file";
    from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok::
      "PASS: from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file";
  commands:
    !from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_failed";
    !from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_kept::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_kept";
    from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit
{
  methods:
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_start_msg"
        usebundle => log_test_case("92%: Starting test case \"from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit\"");
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_init"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_init;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_test"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_test;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_check"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_check;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_finish_msg"
        usebundle => log_test_case("92%: Finished test case \"from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit\"");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_check
{
  classes:
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___correct_classes"
        expression => "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_kept.!from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_repaired.!from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok::
      "FAILED: from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit";
    from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok::
      "PASS: from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit";
  commands:
    !from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_failed";
    !from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_kept::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_kept";
    from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1
{
  methods:
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_start_msg"
        usebundle => log_test_case("92%: Starting test case \"from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1\"");
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_init"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_init;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_test"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_test;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_check"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_check;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_finish_msg"
        usebundle => log_test_case("92%: Finished test case \"from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1\"");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_check
{
  classes:
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___correct_classes"
        expression => "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_kept.!from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_repaired.!from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok::
      "FAILED: from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1";
    from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok::
      "PASS: from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1";
  commands:
    !from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_failed";
    !from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_kept::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_kept";
    from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file
{
  methods:
      "from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_start_msg"
        usebundle => log_test_case("93%: Starting test case \"from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file\"");
      "from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_init"
        usebundle => from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_init;
      "from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_test"
        usebundle => from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_test;
      "from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_check"
        usebundle => from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_check;
      "from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_finish_msg"
        usebundle => log_test_case("93%: Finished test case \"from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file\"");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_test
{
  packages:
      "$(p.package[1][1][64_bit])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_check
{
  classes:
      "from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        expression => "from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_kept.!from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_repaired.!from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok::
      "FAILED: from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file";
    from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok::
      "PASS: from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file";
  commands:
    !from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_failed";
    !from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_kept::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_kept";
    from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo
{
  methods:
      "from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo_start_msg"
        usebundle => log_test_case("93%: Starting test case \"from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo\"");
      "from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo_init"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo_init;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo_test"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo_test;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo_check"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo_check;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo_finish_msg"
        usebundle => log_test_case("93%: Finished test case \"from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo\"");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo_check
{
  classes:
      "from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo___correct_classes"
        expression => "from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo___class_kept.!from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo___class_repaired.!from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo_ok::
      "FAILED: from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo";
    from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo_ok::
      "PASS: from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo";
  commands:
    !from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo___class_failed";
    !from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo___class_kept";
    from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo
{
  methods:
      "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo_start_msg"
        usebundle => log_test_case("93%: Starting test case \"from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo\"");
      "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo_init"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo_init;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo_test"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo_test;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo_check"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo_check;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo_finish_msg"
        usebundle => log_test_case("93%: Finished test case \"from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo\"");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo_check
{
  classes:
      "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo___correct_classes"
        expression => "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo___class_kept.!from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo___class_repaired.!from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo_ok::
      "FAILED: from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo";
    from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo_ok::
      "PASS: from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo";
  commands:
    !from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo___class_failed";
    !from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo___class_kept";
    from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo
{
  methods:
      "from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo_start_msg"
        usebundle => log_test_case("94%: Starting test case \"from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo\"");
      "from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo_init"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo_init;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo_test"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo_test;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo_check"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo_check;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo_finish_msg"
        usebundle => log_test_case("94%: Finished test case \"from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo\"");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo_check
{
  classes:
      "from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo___correct_classes"
        expression => "from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo___class_kept.!from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo___class_repaired.!from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo_ok::
      "FAILED: from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo";
    from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo_ok::
      "PASS: from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo";
  commands:
    !from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo___class_failed";
    !from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo___class_kept";
    from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo
{
  methods:
      "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_start_msg"
        usebundle => log_test_case("94%: Starting test case \"from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo\"");
      "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check;
      "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_finish_msg"
        usebundle => log_test_case("94%: Finished test case \"from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo\"");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_check
{
  classes:
      "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___correct_classes"
        expression => "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept.!from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired.!from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "FAILED: from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo";
    from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "PASS: from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo";
  commands:
    !from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_failed";
    !from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_kept";
    from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit
{
  methods:
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_start_msg"
        usebundle => log_test_case("94%: Starting test case \"from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit\"");
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_init"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_init;
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_test"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_test;
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_check"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_check;
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_finish_msg"
        usebundle => log_test_case("94%: Finished test case \"from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit\"");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_check
{
  classes:
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___correct_classes"
        expression => "from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_kept.!from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_repaired.!from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_ok::
      "FAILED: from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit";
    from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_ok::
      "PASS: from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit";
  commands:
    !from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_failed";
    !from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_kept::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_kept";
    from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2
{
  methods:
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_start_msg"
        usebundle => log_test_case("94%: Starting test case \"from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2\"");
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_init"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_init;
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_test"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_test;
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_check"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_check;
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_finish_msg"
        usebundle => log_test_case("94%: Finished test case \"from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2\"");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_check
{
  classes:
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2___correct_classes"
        expression => "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2___class_kept.!from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2___class_repaired.!from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_ok::
      "FAILED: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2";
    from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_ok::
      "PASS: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2";
  commands:
    !from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2___class_failed";
    !from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2___class_kept::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2___class_kept";
    from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit
{
  methods:
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_start_msg"
        usebundle => log_test_case("95%: Starting test case \"from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit\"");
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_init"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_init;
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_test"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_test;
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_check"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_check;
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_finish_msg"
        usebundle => log_test_case("95%: Finished test case \"from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit\"");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_check
{
  classes:
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___correct_classes"
        expression => "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_kept.!from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_repaired.!from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_ok::
      "FAILED: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit";
    from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_ok::
      "PASS: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit";
  commands:
    !from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_failed";
    !from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_kept::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_kept";
    from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit
{
  methods:
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit_start_msg"
        usebundle => log_test_case("95%: Starting test case \"from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit\"");
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit_init"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit_init;
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit_test"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit_test;
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit_check"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit_check;
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit_finish_msg"
        usebundle => log_test_case("95%: Finished test case \"from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit\"");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit_check
{
  classes:
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit___correct_classes"
        expression => "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit___class_kept.!from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit___class_repaired.!from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit_ok::
      "FAILED: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit";
    from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit_ok::
      "PASS: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit";
  commands:
    !from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit___class_failed";
    !from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit___class_kept::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit___class_kept";
    from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit
{
  methods:
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit_start_msg"
        usebundle => log_test_case("95%: Starting test case \"from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit\"");
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit_init"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit_init;
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit_test"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit_test;
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit_check"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit_check;
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit_finish_msg"
        usebundle => log_test_case("95%: Finished test case \"from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit\"");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit");
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit_check
{
  classes:
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit___correct_classes"
        expression => "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit___class_kept.!from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit___class_repaired.!from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit_ok::
      "FAILED: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit";
    from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit_ok::
      "PASS: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit";
  commands:
    !from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit___class_failed";
    !from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit___class_kept::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit___class_kept";
    from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit___class_repaired";
}

bundle agent from_absent_to_absent___promise_policy_absent
{
  methods:
      "from_absent_to_absent___promise_policy_absent_start_msg"
        usebundle => log_test_case("96%: Starting test case \"from_absent_to_absent___promise_policy_absent\"");
      "from_absent_to_absent___promise_policy_absent_init"
        usebundle => from_absent_to_absent___promise_policy_absent_init;
      "from_absent_to_absent___promise_policy_absent_test"
        usebundle => from_absent_to_absent___promise_policy_absent_test;
      "from_absent_to_absent___promise_policy_absent_check"
        usebundle => from_absent_to_absent___promise_policy_absent_check;
      "from_absent_to_absent___promise_policy_absent_finish_msg"
        usebundle => log_test_case("96%: Finished test case \"from_absent_to_absent___promise_policy_absent\"");
}

bundle agent from_absent_to_absent___promise_policy_absent_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_absent___promise_policy_absent");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_absent___promise_policy_absent");
}

bundle agent from_absent_to_absent___promise_policy_absent_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , classes => classes_generic("from_absent_to_absent___promise_policy_absent___class")
      ;
}

bundle agent from_absent_to_absent___promise_policy_absent_check
{
  classes:
      "from_absent_to_absent___promise_policy_absent___correct_classes"
        expression => "from_absent_to_absent___promise_policy_absent___class_kept.!from_absent_to_absent___promise_policy_absent___class_repaired.!from_absent_to_absent___promise_policy_absent___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_absent___promise_policy_absent_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_absent___promise_policy_absent___correct_classes"
        };

  reports:
    !from_absent_to_absent___promise_policy_absent_ok::
      "FAILED: from_absent_to_absent___promise_policy_absent";
    from_absent_to_absent___promise_policy_absent_ok::
      "PASS: from_absent_to_absent___promise_policy_absent";
  commands:
    !from_absent_to_absent___promise_policy_absent_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_absent___promise_policy_absent___class_failed::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent___class_failed";
    !from_absent_to_absent___promise_policy_absent___class_kept::
      "Class was not set, but should be: from_absent_to_absent___promise_policy_absent___class_kept";
    from_absent_to_absent___promise_policy_absent___class_repaired::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent___class_repaired";
}

bundle agent from_absent_to_absent___promise_policy_absent_arch_64_bit
{
  methods:
      "from_absent_to_absent___promise_policy_absent_arch_64_bit_start_msg"
        usebundle => log_test_case("96%: Starting test case \"from_absent_to_absent___promise_policy_absent_arch_64_bit\"");
      "from_absent_to_absent___promise_policy_absent_arch_64_bit_init"
        usebundle => from_absent_to_absent___promise_policy_absent_arch_64_bit_init;
      "from_absent_to_absent___promise_policy_absent_arch_64_bit_test"
        usebundle => from_absent_to_absent___promise_policy_absent_arch_64_bit_test;
      "from_absent_to_absent___promise_policy_absent_arch_64_bit_check"
        usebundle => from_absent_to_absent___promise_policy_absent_arch_64_bit_check;
      "from_absent_to_absent___promise_policy_absent_arch_64_bit_finish_msg"
        usebundle => log_test_case("96%: Finished test case \"from_absent_to_absent___promise_policy_absent_arch_64_bit\"");
}

bundle agent from_absent_to_absent___promise_policy_absent_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_absent___promise_policy_absent_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_absent___promise_policy_absent_arch_64_bit");
}

bundle agent from_absent_to_absent___promise_policy_absent_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , classes => classes_generic("from_absent_to_absent___promise_policy_absent_arch_64_bit___class")
      ;
}

bundle agent from_absent_to_absent___promise_policy_absent_arch_64_bit_check
{
  classes:
      "from_absent_to_absent___promise_policy_absent_arch_64_bit___correct_classes"
        expression => "from_absent_to_absent___promise_policy_absent_arch_64_bit___class_kept.!from_absent_to_absent___promise_policy_absent_arch_64_bit___class_repaired.!from_absent_to_absent___promise_policy_absent_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_absent___promise_policy_absent_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_absent___promise_policy_absent_arch_64_bit___correct_classes"
        };

  reports:
    !from_absent_to_absent___promise_policy_absent_arch_64_bit_ok::
      "FAILED: from_absent_to_absent___promise_policy_absent_arch_64_bit";
    from_absent_to_absent___promise_policy_absent_arch_64_bit_ok::
      "PASS: from_absent_to_absent___promise_policy_absent_arch_64_bit";
  commands:
    !from_absent_to_absent___promise_policy_absent_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_absent___promise_policy_absent_arch_64_bit___class_failed::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent_arch_64_bit___class_failed";
    !from_absent_to_absent___promise_policy_absent_arch_64_bit___class_kept::
      "Class was not set, but should be: from_absent_to_absent___promise_policy_absent_arch_64_bit___class_kept";
    from_absent_to_absent___promise_policy_absent_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent_arch_64_bit___class_repaired";
}

bundle agent from_absent_to_absent___promise_policy_absent_arch_32_bit
{
  methods:
      "from_absent_to_absent___promise_policy_absent_arch_32_bit_start_msg"
        usebundle => log_test_case("96%: Starting test case \"from_absent_to_absent___promise_policy_absent_arch_32_bit\"");
      "from_absent_to_absent___promise_policy_absent_arch_32_bit_init"
        usebundle => from_absent_to_absent___promise_policy_absent_arch_32_bit_init;
      "from_absent_to_absent___promise_policy_absent_arch_32_bit_test"
        usebundle => from_absent_to_absent___promise_policy_absent_arch_32_bit_test;
      "from_absent_to_absent___promise_policy_absent_arch_32_bit_check"
        usebundle => from_absent_to_absent___promise_policy_absent_arch_32_bit_check;
      "from_absent_to_absent___promise_policy_absent_arch_32_bit_finish_msg"
        usebundle => log_test_case("96%: Finished test case \"from_absent_to_absent___promise_policy_absent_arch_32_bit\"");
}

bundle agent from_absent_to_absent___promise_policy_absent_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_absent___promise_policy_absent_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_absent___promise_policy_absent_arch_32_bit");
}

bundle agent from_absent_to_absent___promise_policy_absent_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_absent_to_absent___promise_policy_absent_arch_32_bit___class")
      ;
}

bundle agent from_absent_to_absent___promise_policy_absent_arch_32_bit_check
{
  classes:
      "from_absent_to_absent___promise_policy_absent_arch_32_bit___correct_classes"
        expression => "from_absent_to_absent___promise_policy_absent_arch_32_bit___class_kept.!from_absent_to_absent___promise_policy_absent_arch_32_bit___class_repaired.!from_absent_to_absent___promise_policy_absent_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_absent___promise_policy_absent_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_absent___promise_policy_absent_arch_32_bit___correct_classes"
        };

  reports:
    !from_absent_to_absent___promise_policy_absent_arch_32_bit_ok::
      "FAILED: from_absent_to_absent___promise_policy_absent_arch_32_bit";
    from_absent_to_absent___promise_policy_absent_arch_32_bit_ok::
      "PASS: from_absent_to_absent___promise_policy_absent_arch_32_bit";
  commands:
    !from_absent_to_absent___promise_policy_absent_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_absent___promise_policy_absent_arch_32_bit___class_failed::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent_arch_32_bit___class_failed";
    !from_absent_to_absent___promise_policy_absent_arch_32_bit___class_kept::
      "Class was not set, but should be: from_absent_to_absent___promise_policy_absent_arch_32_bit___class_kept";
    from_absent_to_absent___promise_policy_absent_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent_arch_32_bit___class_repaired";
}

bundle agent from_absent_to_absent___promise_policy_absent_version_1
{
  methods:
      "from_absent_to_absent___promise_policy_absent_version_1_start_msg"
        usebundle => log_test_case("96%: Starting test case \"from_absent_to_absent___promise_policy_absent_version_1\"");
      "from_absent_to_absent___promise_policy_absent_version_1_init"
        usebundle => from_absent_to_absent___promise_policy_absent_version_1_init;
      "from_absent_to_absent___promise_policy_absent_version_1_test"
        usebundle => from_absent_to_absent___promise_policy_absent_version_1_test;
      "from_absent_to_absent___promise_policy_absent_version_1_check"
        usebundle => from_absent_to_absent___promise_policy_absent_version_1_check;
      "from_absent_to_absent___promise_policy_absent_version_1_finish_msg"
        usebundle => log_test_case("96%: Finished test case \"from_absent_to_absent___promise_policy_absent_version_1\"");
}

bundle agent from_absent_to_absent___promise_policy_absent_version_1_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_absent___promise_policy_absent_version_1");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_absent___promise_policy_absent_version_1");
}

bundle agent from_absent_to_absent___promise_policy_absent_version_1_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_absent_to_absent___promise_policy_absent_version_1___class")
      ;
}

bundle agent from_absent_to_absent___promise_policy_absent_version_1_check
{
  classes:
      "from_absent_to_absent___promise_policy_absent_version_1___correct_classes"
        expression => "from_absent_to_absent___promise_policy_absent_version_1___class_kept.!from_absent_to_absent___promise_policy_absent_version_1___class_repaired.!from_absent_to_absent___promise_policy_absent_version_1___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_absent___promise_policy_absent_version_1_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_absent___promise_policy_absent_version_1___correct_classes"
        };

  reports:
    !from_absent_to_absent___promise_policy_absent_version_1_ok::
      "FAILED: from_absent_to_absent___promise_policy_absent_version_1";
    from_absent_to_absent___promise_policy_absent_version_1_ok::
      "PASS: from_absent_to_absent___promise_policy_absent_version_1";
  commands:
    !from_absent_to_absent___promise_policy_absent_version_1_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_absent___promise_policy_absent_version_1___class_failed::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent_version_1___class_failed";
    !from_absent_to_absent___promise_policy_absent_version_1___class_kept::
      "Class was not set, but should be: from_absent_to_absent___promise_policy_absent_version_1___class_kept";
    from_absent_to_absent___promise_policy_absent_version_1___class_repaired::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent_version_1___class_repaired";
}

bundle agent from_absent_to_absent___promise_policy_absent_version_2
{
  methods:
      "from_absent_to_absent___promise_policy_absent_version_2_start_msg"
        usebundle => log_test_case("97%: Starting test case \"from_absent_to_absent___promise_policy_absent_version_2\"");
      "from_absent_to_absent___promise_policy_absent_version_2_init"
        usebundle => from_absent_to_absent___promise_policy_absent_version_2_init;
      "from_absent_to_absent___promise_policy_absent_version_2_test"
        usebundle => from_absent_to_absent___promise_policy_absent_version_2_test;
      "from_absent_to_absent___promise_policy_absent_version_2_check"
        usebundle => from_absent_to_absent___promise_policy_absent_version_2_check;
      "from_absent_to_absent___promise_policy_absent_version_2_finish_msg"
        usebundle => log_test_case("97%: Finished test case \"from_absent_to_absent___promise_policy_absent_version_2\"");
}

bundle agent from_absent_to_absent___promise_policy_absent_version_2_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_absent___promise_policy_absent_version_2");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_absent___promise_policy_absent_version_2");
}

bundle agent from_absent_to_absent___promise_policy_absent_version_2_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_absent_to_absent___promise_policy_absent_version_2___class")
      ;
}

bundle agent from_absent_to_absent___promise_policy_absent_version_2_check
{
  classes:
      "from_absent_to_absent___promise_policy_absent_version_2___correct_classes"
        expression => "from_absent_to_absent___promise_policy_absent_version_2___class_kept.!from_absent_to_absent___promise_policy_absent_version_2___class_repaired.!from_absent_to_absent___promise_policy_absent_version_2___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_absent___promise_policy_absent_version_2_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_absent___promise_policy_absent_version_2___correct_classes"
        };

  reports:
    !from_absent_to_absent___promise_policy_absent_version_2_ok::
      "FAILED: from_absent_to_absent___promise_policy_absent_version_2";
    from_absent_to_absent___promise_policy_absent_version_2_ok::
      "PASS: from_absent_to_absent___promise_policy_absent_version_2";
  commands:
    !from_absent_to_absent___promise_policy_absent_version_2_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_absent___promise_policy_absent_version_2___class_failed::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent_version_2___class_failed";
    !from_absent_to_absent___promise_policy_absent_version_2___class_kept::
      "Class was not set, but should be: from_absent_to_absent___promise_policy_absent_version_2___class_kept";
    from_absent_to_absent___promise_policy_absent_version_2___class_repaired::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent_version_2___class_repaired";
}

bundle agent from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit
{
  methods:
      "from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit_start_msg"
        usebundle => log_test_case("97%: Starting test case \"from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit\"");
      "from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit_init"
        usebundle => from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit_init;
      "from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit_test"
        usebundle => from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit_test;
      "from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit_check"
        usebundle => from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit_check;
      "from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit_finish_msg"
        usebundle => log_test_case("97%: Finished test case \"from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit\"");
}

bundle agent from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit");
}

bundle agent from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit___class")
      ;
}

bundle agent from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit_check
{
  classes:
      "from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit___correct_classes"
        expression => "from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit___class_kept.!from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit___class_repaired.!from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit___correct_classes"
        };

  reports:
    !from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit_ok::
      "FAILED: from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit";
    from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit_ok::
      "PASS: from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit";
  commands:
    !from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit___class_failed::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit___class_failed";
    !from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit___class_kept::
      "Class was not set, but should be: from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit___class_kept";
    from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit___class_repaired";
}

bundle agent from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit
{
  methods:
      "from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit_start_msg"
        usebundle => log_test_case("97%: Starting test case \"from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit\"");
      "from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit_init"
        usebundle => from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit_init;
      "from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit_test"
        usebundle => from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit_test;
      "from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit_check"
        usebundle => from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit_check;
      "from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit_finish_msg"
        usebundle => log_test_case("97%: Finished test case \"from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit\"");
}

bundle agent from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit");
}

bundle agent from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[1])"
      , classes => classes_generic("from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit___class")
      ;
}

bundle agent from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit_check
{
  classes:
      "from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit___correct_classes"
        expression => "from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit___class_kept.!from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit___class_repaired.!from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit___correct_classes"
        };

  reports:
    !from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit_ok::
      "FAILED: from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit";
    from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit_ok::
      "PASS: from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit";
  commands:
    !from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit___class_failed::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit___class_failed";
    !from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit___class_kept::
      "Class was not set, but should be: from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit___class_kept";
    from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit___class_repaired";
}

bundle agent from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit
{
  methods:
      "from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit_start_msg"
        usebundle => log_test_case("98%: Starting test case \"from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit\"");
      "from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit_init"
        usebundle => from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit_init;
      "from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit_test"
        usebundle => from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit_test;
      "from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit_check"
        usebundle => from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit_check;
      "from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit_finish_msg"
        usebundle => log_test_case("98%: Finished test case \"from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit\"");
}

bundle agent from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit");
}

bundle agent from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.64_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit___class")
      ;
}

bundle agent from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit_check
{
  classes:
      "from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit___correct_classes"
        expression => "from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit___class_kept.!from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit___class_repaired.!from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit___correct_classes"
        };

  reports:
    !from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit_ok::
      "FAILED: from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit";
    from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit_ok::
      "PASS: from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit";
  commands:
    !from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit___class_failed::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit___class_failed";
    !from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit___class_kept::
      "Class was not set, but should be: from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit___class_kept";
    from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit___class_repaired::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit___class_repaired";
}

bundle agent from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit
{
  methods:
      "from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit_start_msg"
        usebundle => log_test_case("98%: Starting test case \"from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit\"");
      "from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit_init"
        usebundle => from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit_init;
      "from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit_test"
        usebundle => from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit_test;
      "from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit_check"
        usebundle => from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit_check;
      "from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit_finish_msg"
        usebundle => log_test_case("98%: Finished test case \"from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit\"");
}

bundle agent from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit");
      "clear_package_cache" usebundle => clear_package_cache("from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit");
}

bundle agent from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit_test
{
  packages:
      "$(p.name[1])"
        policy => "absent"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit___class")
      ;
}

bundle agent from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit_check
{
  classes:
      "from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit___correct_classes"
        expression => "from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit___class_kept.!from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit___class_repaired.!from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit___correct_classes"
        };

  reports:
    !from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit_ok::
      "FAILED: from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit";
    from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit_ok::
      "PASS: from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit";
  commands:
    !from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit___class_failed::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit___class_failed";
    !from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit___class_kept::
      "Class was not set, but should be: from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit___class_kept";
    from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit___class_repaired::
      "Class was set, but should not be: from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo
{
  methods:
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_start_msg"
        usebundle => log_test_case("98%: Starting test case \"from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo\"");
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_init"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_init;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_test"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_test;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_check"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_check;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_finish_msg"
        usebundle => log_test_case("98%: Finished test case \"from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo\"");
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo");
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , classes => classes_generic("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_check
{
  classes:
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_kept.from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_repaired.!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok::
      "FAILED: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo";
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok::
      "PASS: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo";
  commands:
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_failed";
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_kept";
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only
{
  methods:
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_start_msg"
        usebundle => log_test_case("98%: Starting test case \"from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only\"");
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_init"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_init;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_test"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_test;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_check"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_check;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("98%: Finished test case \"from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only\"");
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only");
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_check
{
  classes:
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_kept.!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_repaired.from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_ok::
      "FAILED: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only";
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_ok::
      "PASS: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only";
  commands:
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_failed";
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_kept";
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo
{
  methods:
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_start_msg"
        usebundle => log_test_case("99%: Starting test case \"from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo\"");
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_finish_msg"
        usebundle => log_test_case("99%: Finished test case \"from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo\"");
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo");
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , classes => classes_generic("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_check
{
  classes:
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept.from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired.!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "FAILED: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo";
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "PASS: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo";
  commands:
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_failed";
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_kept";
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only
{
  methods:
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_start_msg"
        usebundle => log_test_case("99%: Starting test case \"from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only\"");
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_init"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_init;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_test"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_test;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_check"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_check;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("99%: Finished test case \"from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only\"");
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only");
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "$(p.version[2])"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_check
{
  classes:
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_kept.!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_repaired.from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok::
      "FAILED: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only";
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok::
      "PASS: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only";
  commands:
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_failed";
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_kept";
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo
{
  methods:
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_start_msg"
        usebundle => log_test_case("99%: Starting test case \"from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo\"");
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_finish_msg"
        usebundle => log_test_case("99%: Finished test case \"from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo\"");
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo");
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "latest"
      , classes => classes_generic("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_check
{
  classes:
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept.from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired.!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed";
      "64_bit_1"
        not => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        expression => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        expression => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "FAILED: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo";
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "PASS: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo";
  commands:
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_failed";
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_kept";
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo___class_repaired";
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only
{
  methods:
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_start_msg"
        usebundle => log_test_case("100%: Starting test case \"from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only\"");
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_init"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_init;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_test"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_test;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_check"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_check;
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_finish_msg"
        usebundle => log_test_case("100%: Finished test case \"from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only\"");
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_init
{
  methods:
      "clear_packages" usebundle => clear_packages("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only");
      "clear_package_cache" usebundle => clear_package_cache("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only");
      "install_package" usebundle => install_package($(p.name[1]), $(p.version[1]), $(p.64_bit), "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only");
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_test
{
  packages:
      "$(p.name[1])"
        policy => "present"
      , architecture => "$(p.32_bit)"
      , version => "latest"
      , action => warn_only
      , classes => classes_generic("from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class")
      ;
}

bundle agent from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_check
{
  classes:
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___correct_classes"
        expression => "!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_kept.!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_repaired.from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_failed";
      "64_bit_1"
        expression => fileexists("$(p.file[1][1][64_bit])");
      "64_bit_2"
        not => fileexists("$(p.file[1][2][64_bit])");
      "32_bit_1"
        not => fileexists("$(p.file[1][1][32_bit])");
      "32_bit_2"
        not => fileexists("$(p.file[1][2][32_bit])");
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok"
        scope => "namespace",
        and => {
          "64_bit_1",
          "64_bit_2",
          "32_bit_1",
          "32_bit_2",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___correct_classes"
        };

  reports:
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok::
      "FAILED: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only";
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok::
      "PASS: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only";
  commands:
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok::
      "$(G.echo) 'Contents of \"/$(p.name[1])*\"' && $(G.ls) /$(p.name[1])*"
        contain => in_shell;

  reports:
    !from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_failed::
      "Class was not set, but should be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_failed";
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_kept::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_kept";
    from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_repaired::
      "Class was set, but should not be: from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only___class_repaired";
}

bundle agent test
{
  classes:
      "specific_test_case_specified" or => {
          "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo",
          "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2",
          "from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo",
          "from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit",
          "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1",
          "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit",
          "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit",
          "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only",
          "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file",
          "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only",
          "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo",
          "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only",
          "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo",
          "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2",
          "from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo",
          "from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit",
          "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1",
          "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit",
          "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit",
          "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only",
          "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent",
          "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only",
          "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2",
          "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only",
          "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo",
          "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only",
          "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent",
          "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only",
          "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1",
          "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only",
          "from_64_bit_2_to_absent___promise_policy_absent",
          "from_64_bit_2_to_absent___promise_policy_absent_warn_only",
          "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit",
          "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only",
          "from_64_bit_2_to_absent___promise_policy_absent_version_2",
          "from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only",
          "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit",
          "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only",
          "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file",
          "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only",
          "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo",
          "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only",
          "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit",
          "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only",
          "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit",
          "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only",
          "from_32_bit_2_to_absent___promise_policy_absent",
          "from_32_bit_2_to_absent___promise_policy_absent_warn_only",
          "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit",
          "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only",
          "from_32_bit_2_to_absent___promise_policy_absent_version_2",
          "from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only",
          "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit",
          "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only",
          "from_64_bit_1_to_absent___promise_policy_absent",
          "from_64_bit_1_to_absent___promise_policy_absent_warn_only",
          "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit",
          "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only",
          "from_64_bit_1_to_absent___promise_policy_absent_version_1",
          "from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only",
          "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit",
          "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only",
          "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit",
          "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only",
          "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit",
          "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only",
          "from_32_bit_1_to_absent___promise_policy_absent",
          "from_32_bit_1_to_absent___promise_policy_absent_warn_only",
          "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit",
          "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only",
          "from_32_bit_1_to_absent___promise_policy_absent_version_1",
          "from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only",
          "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit",
          "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit",
          "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit",
          "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only",
          "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit",
          "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only",
          "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo",
          "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only",
          "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file",
          "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only",
          "from_absent_to_64_bit_2___promise_policy_present_type_repo",
          "from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only",
          "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo",
          "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only",
          "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo",
          "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only",
          "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file",
          "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only",
          "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file",
          "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only",
          "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo",
          "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only",
          "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file",
          "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only",
          "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file",
          "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only",
          "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit",
          "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only",
          "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit",
          "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1",
          "from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo",
          "from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit",
          "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2",
          "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit",
          "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit",
          "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit",
          "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo",
          "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only",
          "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file",
          "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1",
          "from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo",
          "from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit",
          "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2",
          "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit",
          "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit",
          "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit",
          "from_absent_to_absent___promise_policy_absent",
          "from_absent_to_absent___promise_policy_absent_arch_64_bit",
          "from_absent_to_absent___promise_policy_absent_arch_32_bit",
          "from_absent_to_absent___promise_policy_absent_version_1",
          "from_absent_to_absent___promise_policy_absent_version_2",
          "from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit",
          "from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit",
          "from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit",
          "from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only",
      };
      "run_all_tests"
        not => "specific_test_case_specified",
        scope => "namespace";

  methods:
    run_all_tests|from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo::
      "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo"
        usebundle => from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo;
    run_all_tests|from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only::
      "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only"
        usebundle => from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only;
    run_all_tests|from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file::
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file;
    run_all_tests|from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit::
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit;
    run_all_tests|from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2::
      "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2;
    run_all_tests|from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file::
      "from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file"
        usebundle => from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file;
    run_all_tests|from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo::
      "from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo;
    run_all_tests|from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo::
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo;
    run_all_tests|from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo::
      "from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo;
    run_all_tests|from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo::
      "from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo;
    run_all_tests|from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo::
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo;
    run_all_tests|from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo::
      "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo;
    run_all_tests|from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit::
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit;
    run_all_tests|from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1::
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1;
    run_all_tests|from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit::
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit;
    run_all_tests|from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit::
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit;
    run_all_tests|from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit::
      "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit"
        usebundle => from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit;
    run_all_tests|from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file::
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file;
    run_all_tests|from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only::
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only;
    run_all_tests|from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit::
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit;
    run_all_tests|from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only::
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only;
    run_all_tests|from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1::
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1;
    run_all_tests|from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only::
      "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only;
    run_all_tests|from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file::
      "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file"
        usebundle => from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file;
    run_all_tests|from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only::
      "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only"
        usebundle => from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only;
    run_all_tests|from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo::
      "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo;
    run_all_tests|from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only::
      "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only;
    run_all_tests|from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo::
      "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo;
    run_all_tests|from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only::
      "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only"
        usebundle => from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only;
    run_all_tests|from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file::
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file;
    run_all_tests|from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit::
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit;
    run_all_tests|from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2::
      "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2;
    run_all_tests|from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file::
      "from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file"
        usebundle => from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file;
    run_all_tests|from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo::
      "from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo;
    run_all_tests|from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo::
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo;
    run_all_tests|from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo::
      "from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo;
    run_all_tests|from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo::
      "from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo;
    run_all_tests|from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo::
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo;
    run_all_tests|from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo::
      "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo;
    run_all_tests|from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit::
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit;
    run_all_tests|from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1::
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1;
    run_all_tests|from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit::
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit;
    run_all_tests|from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit::
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit;
    run_all_tests|from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit::
      "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit"
        usebundle => from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit;
    run_all_tests|from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file::
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file;
    run_all_tests|from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only::
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only;
    run_all_tests|from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit::
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit;
    run_all_tests|from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only::
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only;
    run_all_tests|from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2::
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2;
    run_all_tests|from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only::
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only;
    run_all_tests|from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file::
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file;
    run_all_tests|from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only::
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only;
    run_all_tests|from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo::
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo;
    run_all_tests|from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only::
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only;
    run_all_tests|from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo::
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo;
    run_all_tests|from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only::
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only;
    run_all_tests|from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo::
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo;
    run_all_tests|from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only::
      "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only"
        usebundle => from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only;
    run_all_tests|from_64_bit_2_32_bit_2_to_absent___promise_policy_absent::
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent"
        usebundle => from_64_bit_2_32_bit_2_to_absent___promise_policy_absent;
    run_all_tests|from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only::
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only"
        usebundle => from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only;
    run_all_tests|from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2::
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2"
        usebundle => from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2;
    run_all_tests|from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only::
      "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only"
        usebundle => from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only;
    run_all_tests|from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo::
      "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo;
    run_all_tests|from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only::
      "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only;
    run_all_tests|from_64_bit_1_32_bit_1_to_absent___promise_policy_absent::
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent"
        usebundle => from_64_bit_1_32_bit_1_to_absent___promise_policy_absent;
    run_all_tests|from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only::
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only"
        usebundle => from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only;
    run_all_tests|from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1::
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1"
        usebundle => from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1;
    run_all_tests|from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only::
      "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only"
        usebundle => from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only;
    run_all_tests|from_64_bit_2_to_absent___promise_policy_absent::
      "from_64_bit_2_to_absent___promise_policy_absent"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent;
    run_all_tests|from_64_bit_2_to_absent___promise_policy_absent_warn_only::
      "from_64_bit_2_to_absent___promise_policy_absent_warn_only"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_warn_only;
    run_all_tests|from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit::
      "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit;
    run_all_tests|from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only::
      "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only;
    run_all_tests|from_64_bit_2_to_absent___promise_policy_absent_version_2::
      "from_64_bit_2_to_absent___promise_policy_absent_version_2"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_version_2;
    run_all_tests|from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only::
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only;
    run_all_tests|from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit::
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit;
    run_all_tests|from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only::
      "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only"
        usebundle => from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only;
    run_all_tests|from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file::
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file;
    run_all_tests|from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only::
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only;
    run_all_tests|from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit::
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit;
    run_all_tests|from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only::
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only;
    run_all_tests|from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1::
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1;
    run_all_tests|from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only::
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only;
    run_all_tests|from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file::
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file;
    run_all_tests|from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only::
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only;
    run_all_tests|from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo::
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo;
    run_all_tests|from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only::
      "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only"
        usebundle => from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only;
    run_all_tests|from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file::
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file;
    run_all_tests|from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only::
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only;
    run_all_tests|from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit::
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit;
    run_all_tests|from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only::
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only;
    run_all_tests|from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1::
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1;
    run_all_tests|from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only::
      "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only;
    run_all_tests|from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file::
      "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file"
        usebundle => from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file;
    run_all_tests|from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only::
      "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only"
        usebundle => from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only;
    run_all_tests|from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo::
      "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo;
    run_all_tests|from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only::
      "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only"
        usebundle => from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit::
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only::
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit::
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only::
      "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only;
    run_all_tests|from_32_bit_2_to_absent___promise_policy_absent::
      "from_32_bit_2_to_absent___promise_policy_absent"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent;
    run_all_tests|from_32_bit_2_to_absent___promise_policy_absent_warn_only::
      "from_32_bit_2_to_absent___promise_policy_absent_warn_only"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_warn_only;
    run_all_tests|from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit::
      "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit;
    run_all_tests|from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only::
      "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only;
    run_all_tests|from_32_bit_2_to_absent___promise_policy_absent_version_2::
      "from_32_bit_2_to_absent___promise_policy_absent_version_2"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_version_2;
    run_all_tests|from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only::
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only;
    run_all_tests|from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit::
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit;
    run_all_tests|from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only::
      "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only"
        usebundle => from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only;
    run_all_tests|from_64_bit_1_to_absent___promise_policy_absent::
      "from_64_bit_1_to_absent___promise_policy_absent"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent;
    run_all_tests|from_64_bit_1_to_absent___promise_policy_absent_warn_only::
      "from_64_bit_1_to_absent___promise_policy_absent_warn_only"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_warn_only;
    run_all_tests|from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit::
      "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit;
    run_all_tests|from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only::
      "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only;
    run_all_tests|from_64_bit_1_to_absent___promise_policy_absent_version_1::
      "from_64_bit_1_to_absent___promise_policy_absent_version_1"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_version_1;
    run_all_tests|from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only::
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only;
    run_all_tests|from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit::
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit;
    run_all_tests|from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only::
      "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only"
        usebundle => from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only;
    run_all_tests|from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit::
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit"
        usebundle => from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit;
    run_all_tests|from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only::
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only"
        usebundle => from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only;
    run_all_tests|from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit::
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit"
        usebundle => from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit;
    run_all_tests|from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only::
      "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only"
        usebundle => from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only;
    run_all_tests|from_32_bit_1_to_absent___promise_policy_absent::
      "from_32_bit_1_to_absent___promise_policy_absent"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent;
    run_all_tests|from_32_bit_1_to_absent___promise_policy_absent_warn_only::
      "from_32_bit_1_to_absent___promise_policy_absent_warn_only"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_warn_only;
    run_all_tests|from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit::
      "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit;
    run_all_tests|from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only::
      "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only;
    run_all_tests|from_32_bit_1_to_absent___promise_policy_absent_version_1::
      "from_32_bit_1_to_absent___promise_policy_absent_version_1"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_version_1;
    run_all_tests|from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only::
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only;
    run_all_tests|from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit::
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit;
    run_all_tests|from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only::
      "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only"
        usebundle => from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit::
      "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit::
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only::
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit::
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only::
      "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo::
      "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only::
      "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file::
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only::
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit::
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only::
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2::
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only::
      "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only;
    run_all_tests|from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file::
      "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file"
        usebundle => from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file;
    run_all_tests|from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only::
      "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only"
        usebundle => from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_type_repo::
      "from_absent_to_64_bit_2___promise_policy_present_type_repo"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_type_repo;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only::
      "from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo::
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only::
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo::
      "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only::
      "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo::
      "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only::
      "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo::
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only::
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo::
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo;
    run_all_tests|from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only::
      "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only"
        usebundle => from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only;
    run_all_tests|from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo::
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo;
    run_all_tests|from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only::
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only;
    run_all_tests|from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo::
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo;
    run_all_tests|from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only::
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only;
    run_all_tests|from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo::
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo;
    run_all_tests|from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only::
      "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only"
        usebundle => from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only;
    run_all_tests|from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file::
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file;
    run_all_tests|from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only::
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only;
    run_all_tests|from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit::
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit;
    run_all_tests|from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only::
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only;
    run_all_tests|from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2::
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2;
    run_all_tests|from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only::
      "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only;
    run_all_tests|from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file::
      "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file"
        usebundle => from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file;
    run_all_tests|from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only::
      "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only"
        usebundle => from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only;
    run_all_tests|from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo::
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo;
    run_all_tests|from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only::
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only;
    run_all_tests|from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo::
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo;
    run_all_tests|from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only::
      "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only;
    run_all_tests|from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo::
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo;
    run_all_tests|from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only::
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only;
    run_all_tests|from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo::
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo;
    run_all_tests|from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only::
      "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only"
        usebundle => from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only;
    run_all_tests|from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file::
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file;
    run_all_tests|from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only::
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only;
    run_all_tests|from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit::
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit;
    run_all_tests|from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only::
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only;
    run_all_tests|from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2::
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2;
    run_all_tests|from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only::
      "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only;
    run_all_tests|from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file::
      "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file"
        usebundle => from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file;
    run_all_tests|from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only::
      "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only"
        usebundle => from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only;
    run_all_tests|from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo::
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo;
    run_all_tests|from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only::
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only;
    run_all_tests|from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo::
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo;
    run_all_tests|from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only::
      "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only;
    run_all_tests|from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo::
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo;
    run_all_tests|from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only::
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only;
    run_all_tests|from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo::
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo;
    run_all_tests|from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only::
      "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only"
        usebundle => from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only;
    run_all_tests|from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file::
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file;
    run_all_tests|from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only::
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only;
    run_all_tests|from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit::
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit;
    run_all_tests|from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only::
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only;
    run_all_tests|from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2::
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2;
    run_all_tests|from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only::
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only;
    run_all_tests|from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file::
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file;
    run_all_tests|from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only::
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only;
    run_all_tests|from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo::
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo;
    run_all_tests|from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only::
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only;
    run_all_tests|from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo::
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo;
    run_all_tests|from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only::
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only;
    run_all_tests|from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo::
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo;
    run_all_tests|from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only::
      "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only"
        usebundle => from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo::
      "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only::
      "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only;
    run_all_tests|from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file::
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file;
    run_all_tests|from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only::
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only;
    run_all_tests|from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit::
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit;
    run_all_tests|from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only::
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only;
    run_all_tests|from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1::
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1;
    run_all_tests|from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only::
      "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only;
    run_all_tests|from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file::
      "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file"
        usebundle => from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file;
    run_all_tests|from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only::
      "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only"
        usebundle => from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only;
    run_all_tests|from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo::
      "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo;
    run_all_tests|from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only::
      "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only;
    run_all_tests|from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo::
      "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo;
    run_all_tests|from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only::
      "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only"
        usebundle => from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo::
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only::
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo::
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only::
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo::
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only::
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo::
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only::
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo::
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only::
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo::
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo;
    run_all_tests|from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only::
      "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only"
        usebundle => from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only;
    run_all_tests|from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file::
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file;
    run_all_tests|from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only::
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only;
    run_all_tests|from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit::
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit;
    run_all_tests|from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only::
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only;
    run_all_tests|from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1::
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1;
    run_all_tests|from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only::
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only;
    run_all_tests|from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file::
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file;
    run_all_tests|from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only::
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only;
    run_all_tests|from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo::
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo;
    run_all_tests|from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only::
      "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only"
        usebundle => from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit;
    run_all_tests|from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit::
      "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit"
        usebundle => from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit;
    run_all_tests|from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file::
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file;
    run_all_tests|from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only::
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only;
    run_all_tests|from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit::
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit;
    run_all_tests|from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only::
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only;
    run_all_tests|from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1::
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1;
    run_all_tests|from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only::
      "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only;
    run_all_tests|from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file::
      "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file"
        usebundle => from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file;
    run_all_tests|from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only::
      "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only"
        usebundle => from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only;
    run_all_tests|from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo::
      "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo;
    run_all_tests|from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only::
      "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only;
    run_all_tests|from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo::
      "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo;
    run_all_tests|from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only::
      "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only"
        usebundle => from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only;
    run_all_tests|from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit::
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit;
    run_all_tests|from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only::
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only;
    run_all_tests|from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit::
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit;
    run_all_tests|from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only::
      "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only"
        usebundle => from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only;
    run_all_tests|from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file::
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file;
    run_all_tests|from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit::
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit;
    run_all_tests|from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1::
      "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1;
    run_all_tests|from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file::
      "from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file"
        usebundle => from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file;
    run_all_tests|from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo::
      "from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo;
    run_all_tests|from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo::
      "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo;
    run_all_tests|from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo::
      "from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo;
    run_all_tests|from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo::
      "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo;
    run_all_tests|from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit::
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit;
    run_all_tests|from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2::
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2;
    run_all_tests|from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit::
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit;
    run_all_tests|from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit::
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit;
    run_all_tests|from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit::
      "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit"
        usebundle => from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit;
    run_all_tests|from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo::
      "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo"
        usebundle => from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo;
    run_all_tests|from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only::
      "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only"
        usebundle => from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only;
    run_all_tests|from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file::
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file;
    run_all_tests|from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only::
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only;
    run_all_tests|from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit::
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit;
    run_all_tests|from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only::
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only;
    run_all_tests|from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2::
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2;
    run_all_tests|from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only::
      "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only;
    run_all_tests|from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file::
      "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file"
        usebundle => from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file;
    run_all_tests|from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only::
      "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only"
        usebundle => from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only;
    run_all_tests|from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo::
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo;
    run_all_tests|from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only::
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only;
    run_all_tests|from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo::
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo;
    run_all_tests|from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only::
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only;
    run_all_tests|from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo::
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo;
    run_all_tests|from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only::
      "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only"
        usebundle => from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only;
    run_all_tests|from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file::
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file;
    run_all_tests|from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit::
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit;
    run_all_tests|from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1::
      "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1;
    run_all_tests|from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file::
      "from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file"
        usebundle => from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file;
    run_all_tests|from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo::
      "from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo;
    run_all_tests|from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo::
      "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo;
    run_all_tests|from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo::
      "from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo;
    run_all_tests|from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo::
      "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo;
    run_all_tests|from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit::
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit;
    run_all_tests|from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2::
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2;
    run_all_tests|from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit::
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit;
    run_all_tests|from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit::
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit;
    run_all_tests|from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit::
      "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit"
        usebundle => from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit;
    run_all_tests|from_absent_to_absent___promise_policy_absent::
      "from_absent_to_absent___promise_policy_absent"
        usebundle => from_absent_to_absent___promise_policy_absent;
    run_all_tests|from_absent_to_absent___promise_policy_absent_arch_64_bit::
      "from_absent_to_absent___promise_policy_absent_arch_64_bit"
        usebundle => from_absent_to_absent___promise_policy_absent_arch_64_bit;
    run_all_tests|from_absent_to_absent___promise_policy_absent_arch_32_bit::
      "from_absent_to_absent___promise_policy_absent_arch_32_bit"
        usebundle => from_absent_to_absent___promise_policy_absent_arch_32_bit;
    run_all_tests|from_absent_to_absent___promise_policy_absent_version_1::
      "from_absent_to_absent___promise_policy_absent_version_1"
        usebundle => from_absent_to_absent___promise_policy_absent_version_1;
    run_all_tests|from_absent_to_absent___promise_policy_absent_version_2::
      "from_absent_to_absent___promise_policy_absent_version_2"
        usebundle => from_absent_to_absent___promise_policy_absent_version_2;
    run_all_tests|from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit::
      "from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit"
        usebundle => from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit;
    run_all_tests|from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit::
      "from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit"
        usebundle => from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit;
    run_all_tests|from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit::
      "from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit"
        usebundle => from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit;
    run_all_tests|from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit::
      "from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit"
        usebundle => from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit;
    run_all_tests|from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo::
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo;
    run_all_tests|from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only::
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only;
    run_all_tests|from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo::
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo;
    run_all_tests|from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only::
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only;
    run_all_tests|from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo::
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo;
    run_all_tests|from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only::
      "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only"
        usebundle => from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only;
}
bundle agent check
{
  classes:
      "ok" and => {
          "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok|(!run_all_tests.!from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo)",
          "from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only)",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file)",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit)",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2)",
          "from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file)",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2___promise_policy_present_type_repo)",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo)",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2___promise_policy_present_version_2_type_repo)",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2___promise_policy_present_version_latest_type_repo)",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo)",
          "from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo)",
          "from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit)",
          "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1)",
          "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_64_bit)",
          "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2___promise_policy_absent_version_1_arch_32_bit)",
          "from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit)",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok|(!run_all_tests.!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file)",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_ok|(!run_all_tests.!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only)",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok|(!run_all_tests.!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit)",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_ok|(!run_all_tests.!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only)",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok|(!run_all_tests.!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1)",
          "from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_ok|(!run_all_tests.!from_absent_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only)",
          "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok|(!run_all_tests.!from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file)",
          "from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok|(!run_all_tests.!from_absent_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only)",
          "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_ok|(!run_all_tests.!from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo)",
          "from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok|(!run_all_tests.!from_absent_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only)",
          "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok|(!run_all_tests.!from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo)",
          "from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok|(!run_all_tests.!from_absent_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only)",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file)",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit)",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2)",
          "from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file)",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_2___promise_policy_present_type_repo)",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo)",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_2___promise_policy_present_version_2_type_repo)",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_2___promise_policy_present_version_latest_type_repo)",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo)",
          "from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo)",
          "from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit)",
          "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1)",
          "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_64_bit)",
          "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_2___promise_policy_absent_version_1_arch_32_bit)",
          "from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit)",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok|(!run_all_tests.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file)",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only)",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok|(!run_all_tests.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit)",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only)",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok|(!run_all_tests.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2)",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only)",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok|(!run_all_tests.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file)",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only)",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_ok|(!run_all_tests.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo)",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only)",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok|(!run_all_tests.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo)",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only)",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok|(!run_all_tests.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo)",
          "from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only)",
          "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_absent___promise_policy_absent)",
          "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_warn_only)",
          "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2)",
          "from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only)",
          "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo)",
          "from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only)",
          "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_absent___promise_policy_absent)",
          "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_warn_only)",
          "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1)",
          "from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only)",
          "from_64_bit_2_to_absent___promise_policy_absent_ok|(!run_all_tests.!from_64_bit_2_to_absent___promise_policy_absent)",
          "from_64_bit_2_to_absent___promise_policy_absent_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_absent___promise_policy_absent_warn_only)",
          "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_ok|(!run_all_tests.!from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit)",
          "from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_absent___promise_policy_absent_arch_64_bit_warn_only)",
          "from_64_bit_2_to_absent___promise_policy_absent_version_2_ok|(!run_all_tests.!from_64_bit_2_to_absent___promise_policy_absent_version_2)",
          "from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_absent___promise_policy_absent_version_2_warn_only)",
          "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_ok|(!run_all_tests.!from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit)",
          "from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_absent___promise_policy_absent_version_2_arch_64_bit_warn_only)",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok|(!run_all_tests.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file)",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only)",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok|(!run_all_tests.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit)",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only)",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok|(!run_all_tests.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1)",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only)",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok|(!run_all_tests.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file)",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only)",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok|(!run_all_tests.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo)",
          "from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only)",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok|(!run_all_tests.!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file)",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_ok|(!run_all_tests.!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only)",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok|(!run_all_tests.!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit)",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_ok|(!run_all_tests.!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only)",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok|(!run_all_tests.!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1)",
          "from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_ok|(!run_all_tests.!from_absent_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only)",
          "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok|(!run_all_tests.!from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file)",
          "from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok|(!run_all_tests.!from_absent_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only)",
          "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok|(!run_all_tests.!from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo)",
          "from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok|(!run_all_tests.!from_absent_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only)",
          "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit)",
          "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_warn_only)",
          "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit)",
          "from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_warn_only)",
          "from_32_bit_2_to_absent___promise_policy_absent_ok|(!run_all_tests.!from_32_bit_2_to_absent___promise_policy_absent)",
          "from_32_bit_2_to_absent___promise_policy_absent_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_absent___promise_policy_absent_warn_only)",
          "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_ok|(!run_all_tests.!from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit)",
          "from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_absent___promise_policy_absent_arch_32_bit_warn_only)",
          "from_32_bit_2_to_absent___promise_policy_absent_version_2_ok|(!run_all_tests.!from_32_bit_2_to_absent___promise_policy_absent_version_2)",
          "from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_absent___promise_policy_absent_version_2_warn_only)",
          "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_ok|(!run_all_tests.!from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit)",
          "from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_absent___promise_policy_absent_version_2_arch_32_bit_warn_only)",
          "from_64_bit_1_to_absent___promise_policy_absent_ok|(!run_all_tests.!from_64_bit_1_to_absent___promise_policy_absent)",
          "from_64_bit_1_to_absent___promise_policy_absent_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_absent___promise_policy_absent_warn_only)",
          "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_ok|(!run_all_tests.!from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit)",
          "from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_absent___promise_policy_absent_arch_64_bit_warn_only)",
          "from_64_bit_1_to_absent___promise_policy_absent_version_1_ok|(!run_all_tests.!from_64_bit_1_to_absent___promise_policy_absent_version_1)",
          "from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_absent___promise_policy_absent_version_1_warn_only)",
          "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_ok|(!run_all_tests.!from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit)",
          "from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_absent___promise_policy_absent_version_1_arch_64_bit_warn_only)",
          "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit)",
          "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_warn_only)",
          "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit)",
          "from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_warn_only)",
          "from_32_bit_1_to_absent___promise_policy_absent_ok|(!run_all_tests.!from_32_bit_1_to_absent___promise_policy_absent)",
          "from_32_bit_1_to_absent___promise_policy_absent_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_absent___promise_policy_absent_warn_only)",
          "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_ok|(!run_all_tests.!from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit)",
          "from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_absent___promise_policy_absent_arch_32_bit_warn_only)",
          "from_32_bit_1_to_absent___promise_policy_absent_version_1_ok|(!run_all_tests.!from_32_bit_1_to_absent___promise_policy_absent_version_1)",
          "from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_absent___promise_policy_absent_version_1_warn_only)",
          "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_ok|(!run_all_tests.!from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit)",
          "from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_absent___promise_policy_absent_version_1_arch_32_bit_warn_only)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_type_repo)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_type_repo)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_type_repo)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_64_bit)",
          "from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_1_32_bit_1___promise_policy_absent_version_2_arch_32_bit)",
          "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit)",
          "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_arch_32_bit_warn_only)",
          "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit)",
          "from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2___promise_policy_absent_version_2_arch_32_bit_warn_only)",
          "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo)",
          "from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_1_32_bit_1___promise_policy_present_version_1_type_repo_warn_only)",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file)",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only)",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit)",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only)",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2)",
          "from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only)",
          "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file)",
          "from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only)",
          "from_absent_to_64_bit_2___promise_policy_present_type_repo_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_type_repo)",
          "from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_type_repo_warn_only)",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo)",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only)",
          "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo)",
          "from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only)",
          "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo)",
          "from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only)",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo)",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only)",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo)",
          "from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok|(!run_all_tests.!from_absent_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only)",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_ok|(!run_all_tests.!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo)",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_warn_only)",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok|(!run_all_tests.!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo)",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only)",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok|(!run_all_tests.!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo)",
          "from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only)",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file)",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_warn_only)",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit)",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_warn_only)",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2)",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_warn_only)",
          "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file)",
          "from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_warn_only)",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo)",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2___promise_policy_present_version_2_type_repo_warn_only)",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo)",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2___promise_policy_present_version_latest_type_repo_warn_only)",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo)",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only)",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo)",
          "from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only)",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file)",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only)",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit)",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only)",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2)",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only)",
          "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file)",
          "from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only)",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo)",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_2___promise_policy_present_version_2_type_repo_warn_only)",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo)",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only)",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo)",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only)",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo)",
          "from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only)",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file)",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only)",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit)",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only)",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2)",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only)",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file)",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only)",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo)",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only)",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo)",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only)",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo)",
          "from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only)",
          "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo)",
          "from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only)",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file)",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only)",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit)",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only)",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1)",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only)",
          "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file)",
          "from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only)",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo)",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_1___promise_policy_present_version_1_type_repo_warn_only)",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo)",
          "from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only)",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo)",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_warn_only)",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo)",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_warn_only)",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo)",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_warn_only)",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo)",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only)",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo)",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_warn_only)",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo)",
          "from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_1_32_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only)",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file)",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_warn_only)",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit)",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_warn_only)",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1)",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_warn_only)",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file)",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_warn_only)",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo)",
          "from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_warn_only)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_arch_64_bit)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_64_bit_file_version_2_type_file_version_2)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_64_bit_arch_64_bit_file_version_2_version_2_policy_present_type_file)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_type_repo)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_type_repo)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_2_type_repo)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_version_latest_type_repo)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_2_type_repo)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_64_bit_version_latest_type_repo)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_64_bit)",
          "from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_64_bit_2_32_bit_2___promise_policy_absent_version_1_arch_32_bit)",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file)",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_warn_only)",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit)",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_warn_only)",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1)",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_warn_only)",
          "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file)",
          "from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_warn_only)",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo)",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_1___promise_policy_present_version_1_type_repo_warn_only)",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo)",
          "from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only)",
          "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit)",
          "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_arch_64_bit_warn_only)",
          "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit)",
          "from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only_ok|(!run_all_tests.!from_64_bit_2_32_bit_2_to_32_bit_2___promise_policy_absent_version_2_arch_64_bit_warn_only)",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file)",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_arch_32_bit)",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_1___promise_policy_present_file_arch_32_bit_file_version_1_type_file_version_1)",
          "from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_1___promise_file_arch_32_bit_arch_32_bit_file_version_1_version_1_policy_present_type_file)",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_1___promise_policy_present_type_repo)",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_type_repo)",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_1___promise_policy_present_version_1_type_repo)",
          "from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_1___promise_policy_present_arch_32_bit_version_1_type_repo)",
          "from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_1___promise_policy_absent_arch_64_bit)",
          "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2)",
          "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_1___promise_policy_absent_version_1_arch_64_bit)",
          "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_64_bit)",
          "from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit_ok|(!run_all_tests.!from_32_bit_1_to_32_bit_1___promise_policy_absent_version_2_arch_32_bit)",
          "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok|(!run_all_tests.!from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo)",
          "from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only_ok|(!run_all_tests.!from_32_bit_2_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_warn_only)",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_ok|(!run_all_tests.!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file)",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only_ok|(!run_all_tests.!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_warn_only)",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_ok|(!run_all_tests.!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit)",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only_ok|(!run_all_tests.!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_arch_32_bit_warn_only)",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_ok|(!run_all_tests.!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2)",
          "from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only_ok|(!run_all_tests.!from_absent_to_32_bit_2___promise_policy_present_file_arch_32_bit_file_version_2_type_file_version_2_warn_only)",
          "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_ok|(!run_all_tests.!from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file)",
          "from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only_ok|(!run_all_tests.!from_absent_to_32_bit_2___promise_file_arch_32_bit_arch_32_bit_file_version_2_version_2_policy_present_type_file_warn_only)",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok|(!run_all_tests.!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo)",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_ok|(!run_all_tests.!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only)",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok|(!run_all_tests.!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo)",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok|(!run_all_tests.!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only)",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok|(!run_all_tests.!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo)",
          "from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok|(!run_all_tests.!from_absent_to_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only)",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file)",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_arch_64_bit)",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1___promise_policy_present_file_arch_64_bit_file_version_1_type_file_version_1)",
          "from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1___promise_file_arch_64_bit_arch_64_bit_file_version_1_version_1_policy_present_type_file)",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1___promise_policy_present_type_repo)",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_type_repo)",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1___promise_policy_present_version_1_type_repo)",
          "from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1___promise_policy_present_arch_64_bit_version_1_type_repo)",
          "from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1___promise_policy_absent_arch_32_bit)",
          "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2)",
          "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1___promise_policy_absent_version_1_arch_32_bit)",
          "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_64_bit)",
          "from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_1___promise_policy_absent_version_2_arch_32_bit)",
          "from_absent_to_absent___promise_policy_absent_ok|(!run_all_tests.!from_absent_to_absent___promise_policy_absent)",
          "from_absent_to_absent___promise_policy_absent_arch_64_bit_ok|(!run_all_tests.!from_absent_to_absent___promise_policy_absent_arch_64_bit)",
          "from_absent_to_absent___promise_policy_absent_arch_32_bit_ok|(!run_all_tests.!from_absent_to_absent___promise_policy_absent_arch_32_bit)",
          "from_absent_to_absent___promise_policy_absent_version_1_ok|(!run_all_tests.!from_absent_to_absent___promise_policy_absent_version_1)",
          "from_absent_to_absent___promise_policy_absent_version_2_ok|(!run_all_tests.!from_absent_to_absent___promise_policy_absent_version_2)",
          "from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit_ok|(!run_all_tests.!from_absent_to_absent___promise_policy_absent_version_1_arch_64_bit)",
          "from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit_ok|(!run_all_tests.!from_absent_to_absent___promise_policy_absent_version_1_arch_32_bit)",
          "from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit_ok|(!run_all_tests.!from_absent_to_absent___promise_policy_absent_version_2_arch_64_bit)",
          "from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit_ok|(!run_all_tests.!from_absent_to_absent___promise_policy_absent_version_2_arch_32_bit)",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo)",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_type_repo_warn_only)",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo)",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_2_type_repo_warn_only)",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo)",
          "from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only_ok|(!run_all_tests.!from_64_bit_1_to_64_bit_2_32_bit_2___promise_policy_present_arch_32_bit_version_latest_type_repo_warn_only)",
        };

  reports:
    !ok::
      "$(this.promise_filename) FAIL";
    ok::
      "$(this.promise_filename) Pass";
}
