#######################################################
#
# Test bundle set_config_values_ini
#
#######################################################

body common control
{
      inputs => { '../../default.cf.sub' };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  files:

      "$(G.testfile).actual"
        copy_from => local_cp("$(this.promise_filename).start");


      "$(G.testfile).expected"
        copy_from => local_cp("$(this.promise_filename).finish");

}

#######################################################

bundle agent test
{
  meta:
      "description" -> { "CFE-3221", "CFE-3244" }
        string => "Test expected behavior of set_variable_values_ini";

  vars:
      "config[section][keyone]" string => "1";
      "config[section][keytwo]" string => "two";

      "config[CFE-3221][variablename]" string => "desired value";
      "config[CFE-3221][variablename2]" string => "desired value2";
      "config[CFE-3221][variablename3]" string => "desired value3";
      "config[CFE-3221][variablename4]" string => "desired value4";
      "config[CFE-3221][variablename5]" string => "desired value5";
      "config[CFE-3221][variablename6]" string => "desired value6";
      "config[CFE-3221][variablename7]" string => "desired value7";
      "config[CFE-3221][variablename8]" string => "desired value8";

      "config[CFE-3244][keyone]" string => "1";
      "config[CFE-3244][keytwo]" string => "valuetwo";

  files:

      "$(G.testfile).actual"
        edit_line => set_variable_values_ini("test.config", "section");

      "$(G.testfile).actual" -> { "CFE-3221" }
        edit_line => set_variable_values_ini( "test.config", "CFE-3221" );

      "$(G.testfile).actual" -> { "CFE-3244" }
        edit_line => set_variable_values_ini( "test.config", "CFE-3244" );

}

#######################################################

bundle agent check
{

  methods:

      "check"
        usebundle => dcs_if_diff( "$(G.testfile).actual", "$(G.testfile).expected",
                                  "pass", "_fail");

      # Fail the test if any of the files fail.
      "fail"
        usebundle => dcs_fail( $(this.promise_filename) ),
        ifvarclass => "_fail";

    pass::
      "pass"
        usebundle => dcs_pass( $(this.promise_filename) );

}
